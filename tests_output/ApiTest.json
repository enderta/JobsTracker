{"report":{"reportPrefix":"","assertionsCount":1,"lastError":{"name":"NightwatchAssertError","message":"expected NightwatchAPI{ …(193) } to equal 'Amazon.com: Online Shopping for Elect…' - expected \u001b[0;32m\"Amazon.com: Online Shopping for Electronics, Apparel, Computers, Books, DVDs & more\"\u001b[0m but got: \u001b[0;31m\"NightwatchAPI {\n  capabilities: {},\n  currentTest: [Getter],\n  desiredCapabilities: { browserName: 'firefox', name: 'api testing' },\n  sessionId: null,\n  options: {\n    always_async_commands: false,\n    backwards_compatibility_mode: false,\n    baseUrl: 'https://nightwatchjs.org',\n    base_url: 'https://nightwatchjs.org',\n    custom_assertions_path: '',\n    custom_commands_path: [ 'node_modules/nightwatch/examples/custom-commands/' ],\n    default_reporter: [ 'junit', 'json', 'minimalJson', 'html' ],\n    desiredCapabilities: { browserName: 'firefox', name: 'api testing' },\n    detailed_output: true,\n    disable_colors: false,\n    disable_error_log: false,\n    disable_global_apis: false,\n    disable_global_expect: false,\n    disable_output_boxes: false,\n    disable_typescript: false,\n    dotenv: {},\n    element_command_retries: 3,\n    enable_fail_fast: false,\n    enable_v3_element_apis: true,\n    end_session_on_fail: true,\n    exclude: null,\n    filename_format: null,\n    filter: null,\n    folder_format: null,\n    globals: {\n      abortOnAssertionFailure: true,\n      abortOnElementLocateError: false,\n      waitForConditionPollInterval: 500,\n      waitForConditionTimeout: 5000,\n      throwOnMultipleElementsReturned: false,\n      suppressWarningsOnMultipleElementsReturned: true,\n      asyncHookTimeout: 20000,\n      unitTestsTimeout: 2000,\n      customReporterCallbackTimeout: 20000,\n      retryAssertionTimeout: 5000,\n      reuseBrowserSession: false,\n      reporter: [Function: reporter],\n      beforeTestSuite: [Function: beforeTestSuite],\n      afterTestSuite: [Function: afterTestSuite],\n      beforeTestCase: [Function: beforeTestCase],\n      afterTestCase: [Function: afterTestCase],\n      onBrowserNavigate: [Function: onBrowserNavigate],\n      onBrowserQuit: [Function: onBrowserQuit]\n    },\n    globals_path: '',\n    launchUrl: 'https://nightwatchjs.org',\n    launch_url: 'https://nightwatchjs.org',\n    live_output: false,\n    log_screenshot_data: false,\n    minimal_report_file_path: 'tests_output/minimal_report.json',\n    output: true,\n    output_folder: 'tests_output',\n    output_timestamp: false,\n    page_objects_path: [ 'node_modules/nightwatch/examples/pages/' ],\n    parallel_mode: false,\n    parallel_process_delay: 10,\n    persist_globals: false,\n    plugins: [ '@nightwatch/apitesting' ],\n    report_command_errors: false,\n    report_network_errors: true,\n    report_prefix: '',\n    reporter_options: {\n      output_folder: 'tests_output',\n      folder_format: null,\n      filename_format: null,\n      minimal_report_file_path: 'tests_output/minimal_report.json'\n    },\n    screenshots: {\n      enabled: false,\n      filename_format: [Function: filename_format],\n      path: '/home/ender/IdeaProjects/jobs/screens',\n      on_error: true,\n      on_failure: true\n    },\n    screenshotsPath: '/home/ender/IdeaProjects/jobs/screens',\n    selenium: {\n      start_process: false,\n      cli_args: {},\n      server_path: null,\n      log_path: './logs',\n      port: undefined,\n      check_process_delay: 500,\n      max_status_poll_tries: 15,\n      status_poll_interval: 200,\n      url: 'http://localhost:undefined'\n    },\n    silent: true,\n    skip_testcases_on_fail: true,\n    skipgroup: '',\n    skiptags: '',\n    src_folders: [],\n    start_session: false,\n    sync_test_names: true,\n    testEnv: 'api_testing',\n    testWorkersEnabled: false,\n    test_runner: { type: 'default', options: {} },\n    test_settings: {},\n    test_workers: { enabled: true, workers: 'auto' },\n    timestamp_format: '',\n    trace: {\n      enabled: false,\n      path: '',\n      filename_format: [Function: snapshot_file_format]\n    },\n    tsconfig_path: '',\n    unit_testing_mode: false,\n    unit_tests_mode: false,\n    usage_analytics: {\n      enabled: false,\n      log_path: './logs/analytics',\n      client_id: 'bff83f41-2870-4277-a64d-b240e72c288d'\n    },\n    use_child_process: false,\n    use_xpath: false,\n    webdriver: {\n      start_process: false,\n      cli_args: {},\n      server_path: '',\n      log_path: './logs',\n      log_file_name: '',\n      check_process_delay: 100,\n      max_status_poll_tries: 10,\n      status_poll_interval: 200,\n      process_create_timeout: 120000,\n      host: 'localhost',\n      port: 4444,\n      ssl: false,\n      proxy: undefined,\n      timeout_options: [Object],\n      default_path_prefix: '',\n      username: undefined,\n      access_key: undefined,\n      start_session: false,\n      url: 'http://localhost:undefined'\n    },\n    capabilities: { browserName: 'firefox', name: 'api testing' }\n  },\n  globals: {\n    abortOnAssertionFailure: true,\n    abortOnElementLocateError: false,\n    waitForConditionPollInterval: 500,\n    waitForConditionTimeout: 5000,\n    throwOnMultipleElementsReturned: false,\n    suppressWarningsOnMultipleElementsReturned: true,\n    asyncHookTimeout: 20000,\n    unitTestsTimeout: 2000,\n    customReporterCallbackTimeout: 20000,\n    retryAssertionTimeout: 5000,\n    reuseBrowserSession: false,\n    reporter: [Function: reporter],\n    beforeTestSuite: [Function: beforeTestSuite],\n    afterTestSuite: [Function: afterTestSuite],\n    beforeTestCase: [Function: beforeTestCase],\n    afterTestCase: [Function: afterTestCase],\n    onBrowserNavigate: [Function: onBrowserNavigate],\n    onBrowserQuit: [Function: onBrowserQuit]\n  },\n  createElement: [Function (anonymous)],\n  baseUrl: 'https://nightwatchjs.org',\n  launchUrl: 'https://nightwatchjs.org',\n  launch_url: 'https://nightwatchjs.org',\n  page: {\n    google: {\n      consent: [Function: bound pageObjectDefinition],\n      search: [Function: bound pageObjectDefinition],\n      searchResults: [Function: bound pageObjectDefinition]\n    },\n    nightwatchFeatures: [Function: bound pageObjectDefinition]\n  },\n  assert: {\n    fail: [Function: bound assertFn],\n    AssertionError: [Function: bound assertFn],\n    ok: [Function: bound assertFn],\n    equal: [Function: bound assertFn],\n    notEqual: [Function: bound assertFn],\n    deepEqual: [Function: bound assertFn],\n    notDeepEqual: [Function: bound assertFn],\n    deepStrictEqual: [Function: bound assertFn],\n    notDeepStrictEqual: [Function: bound assertFn],\n    strictEqual: [Function: bound assertFn],\n    notStrictEqual: [Function: bound assertFn],\n    throws: [Function: bound assertFn],\n    rejects: [Function: bound assertFn],\n    doesNotThrow: [Function: bound assertFn],\n    doesNotReject: [Function: bound assertFn],\n    ifError: [Function: bound assertFn],\n    match: [Function: bound assertFn],\n    doesNotMatch: [Function: bound assertFn],\n    CallTracker: [Function: bound assertFn],\n    strict: [Function: bound assertFn],\n    attributeContains: [Function: bound queuedCommandFn],\n    attributeEquals: [Function: bound queuedCommandFn],\n    attributeMatches: [Function: bound queuedCommandFn],\n    contains: [Function: bound queuedCommandFn],\n    containsText: [Function: bound queuedCommandFn],\n    cssClassNotPresent: [Function: bound queuedCommandFn],\n    cssClassPresent: [Function: bound queuedCommandFn],\n    cssProperty: [Function: bound queuedCommandFn],\n    domPropertyContains: [Function: bound queuedCommandFn],\n    domPropertyEquals: [Function: bound queuedCommandFn],\n    domPropertyMatches: [Function: bound queuedCommandFn],\n    elementNotPresent: [Function: bound queuedCommandFn],\n    elementPresent: [Function: bound queuedCommandFn],\n    elementsCount: [Function: bound queuedCommandFn],\n    enabled: [Function: bound queuedCommandFn],\n    hasAttribute: [Function: bound queuedCommandFn],\n    hasClass: [Function: bound queuedCommandFn],\n    hasDescendants: [Function: bound queuedCommandFn],\n    hidden: [Function: bound queuedCommandFn],\n    promisedValue: [Function: bound queuedCommandFn],\n    selected: [Function: bound queuedCommandFn],\n    textContains: [Function: bound queuedCommandFn],\n    textEquals: [Function: bound queuedCommandFn],\n    textMatches: [Function: bound queuedCommandFn],\n    title: [Function: bound queuedCommandFn],\n    titleContains: [Function: bound queuedCommandFn],\n    titleEquals: [Function: bound queuedCommandFn],\n    titleMatches: [Function: bound queuedCommandFn],\n    urlContains: [Function: bound queuedCommandFn],\n    urlEquals: [Function: bound queuedCommandFn],\n    urlMatches: [Function: bound queuedCommandFn],\n    value: [Function: bound queuedCommandFn],\n    valueContains: [Function: bound queuedCommandFn],\n    valueEquals: [Function: bound queuedCommandFn],\n    visible: [Function: bound queuedCommandFn]\n  },\n  verify: {\n    attributeContains: [Function: bound queuedCommandFn],\n    attributeEquals: [Function: bound queuedCommandFn],\n    attributeMatches: [Function: bound queuedCommandFn],\n    contains: [Function: bound queuedCommandFn],\n    containsText: [Function: bound queuedCommandFn],\n    cssClassNotPresent: [Function: bound queuedCommandFn],\n    cssClassPresent: [Function: bound queuedCommandFn],\n    cssProperty: [Function: bound queuedCommandFn],\n    domPropertyContains: [Function: bound queuedCommandFn],\n    domPropertyEquals: [Function: bound queuedCommandFn],\n    domPropertyMatches: [Function: bound queuedCommandFn],\n    elementNotPresent: [Function: bound queuedCommandFn],\n    elementPresent: [Function: bound queuedCommandFn],\n    elementsCount: [Function: bound queuedCommandFn],\n    enabled: [Function: bound queuedCommandFn],\n    hasAttribute: [Function: bound queuedCommandFn],\n    hasClass: [Function: bound queuedCommandFn],\n    hasDescendants: [Function: bound queuedCommandFn],\n    hidden: [Function: bound queuedCommandFn],\n    promisedValue: [Function: bound queuedCommandFn],\n    selected: [Function: bound queuedCommandFn],\n    textContains: [Function: bound queuedCommandFn],\n    textEquals: [Function: bound queuedCommandFn],\n    textMatches: [Function: bound queuedCommandFn],\n    title: [Function: bound queuedCommandFn],\n    titleContains: [Function: bound queuedCommandFn],\n    titleEquals: [Function: bound queuedCommandFn],\n    titleMatches: [Function: bound queuedCommandFn],\n    urlContains: [Function: bound queuedCommandFn],\n    urlEquals: [Function: bound queuedCommandFn],\n    urlMatches: [Function: bound queuedCommandFn],\n    value: [Function: bound queuedCommandFn],\n    valueContains: [Function: bound queuedCommandFn],\n    valueEquals: [Function: bound queuedCommandFn],\n    visible: [Function: bound queuedCommandFn]\n  },\n  ensure: {\n    elementTextMatches: [Function: bound assertFn],\n    elementTextContains: [Function: bound assertFn],\n    elementTextIs: [Function: bound assertFn],\n    elementIsNotSelected: [Function: bound assertFn],\n    elementIsSelected: [Function: bound assertFn],\n    elementIsDisabled: [Function: bound assertFn],\n    ableToSwitchToFrame: [Function: bound assertFn],\n    elementIsEnabled: [Function: bound assertFn],\n    elementIsNotVisible: [Function: bound assertFn],\n    elementIsVisible: [Function: bound assertFn],\n    stalenessOf: [Function: bound assertFn],\n    elementsLocated: [Function: bound assertFn],\n    elementLocated: [Function: bound assertFn],\n    urlMatches: [Function: bound assertFn],\n    urlContains: [Function: bound assertFn],\n    urlIs: [Function: bound assertFn],\n    titleMatches: [Function: bound assertFn],\n    titleContains: [Function: bound assertFn],\n    alertIsPresent: [Function: bound assertFn],\n    titleIs: [Function: bound assertFn]\n  },\n  chrome: {\n    launchApp: [Function: bound queuedCommandFn],\n    getNetworkConditions: [Function: bound queuedCommandFn],\n    setNetworkConditions: [Function: bound queuedCommandFn],\n    sendDevToolsCommand: [Function: bound queuedCommandFn],\n    sendAndGetDevToolsCommand: [Function: bound queuedCommandFn],\n    setPermission: [Function: bound queuedCommandFn],\n    setDownloadPath: [Function: bound queuedCommandFn],\n    getCastSinks: [Function: bound queuedCommandFn],\n    setCastSinkToUse: [Function: bound queuedCommandFn],\n    startCastTabMirroring: [Function: bound queuedCommandFn],\n    getCastIssueMessage: [Function: bound queuedCommandFn],\n    stopCasting: [Function: bound queuedCommandFn]\n  },\n  firefox: {\n    getContext: [Function: bound queuedCommandFn],\n    setContext: [Function: bound queuedCommandFn],\n    installAddon: [Function: bound queuedCommandFn],\n    uninstallAddon: [Function: bound queuedCommandFn]\n  },\n  driver: [Getter],\n  actions: [Function (anonymous)],\n  Keys: {\n    NULL: '',\n    CANCEL: '',\n    HELP: '',\n    BACK_SPACE: '',\n    TAB: '',\n    CLEAR: '',\n    RETURN: '',\n    ENTER: '',\n    SHIFT: '',\n    CONTROL: '',\n    ALT: '',\n    PAUSE: '',\n    ESCAPE: '',\n    SPACE: '',\n    PAGE_UP: '',\n    PAGE_DOWN: '',\n    END: '',\n    HOME: '',\n    ARROW_LEFT: '',\n    LEFT: '',\n    ARROW_UP: '',\n    UP: '',\n    ARROW_RIGHT: '',\n    RIGHT: '',\n    ARROW_DOWN: '',\n    DOWN: '',\n    INSERT: '',\n    DELETE: '',\n    SEMICOLON: '',\n    EQUALS: '',\n    NUMPAD0: '',\n    NUMPAD1: '',\n    NUMPAD2: '',\n    NUMPAD3: '',\n    NUMPAD4: '',\n    NUMPAD5: '',\n    NUMPAD6: '',\n    NUMPAD7: '',\n    NUMPAD8: '',\n    NUMPAD9: '',\n    MULTIPLY: '',\n    ADD: '',\n    SEPARATOR: '',\n    SUBTRACT: '',\n    DECIMAL: '',\n    DIVIDE: '',\n    F1: '',\n    F2: '',\n    F3: '',\n    F4: '',\n    F5: '',\n    F6: '',\n    F7: '',\n    F8: '',\n    F9: '',\n    F10: '',\n    F11: '',\n    F12: '',\n    COMMAND: '',\n    META: '',\n    ZENKAKU_HANKAKU: '',\n    chord: [Function (anonymous)]\n  },\n  expect: [Function (anonymous)] {\n    null: [Function: bound queuedCommandFn],\n    active: [Function: bound queuedCommandFn],\n    attribute: [Function: bound queuedCommandFn],\n    css: [Function: bound queuedCommandFn],\n    enabled: [Function: bound queuedCommandFn],\n    present: [Function: bound queuedCommandFn],\n    property: [Function: bound queuedCommandFn],\n    selected: [Function: bound queuedCommandFn],\n    text: [Function: bound queuedCommandFn],\n    type: [Function: bound queuedCommandFn],\n    value: [Function: bound queuedCommandFn],\n    visible: [Function: bound queuedCommandFn],\n    count: [Function: bound queuedCommandFn],\n    component: [Function: bound queuedCommandFn],\n    cookie: [Function: bound queuedCommandFn],\n    element: [Function: bound queuedCommandFn],\n    elements: [Function: bound queuedCommandFn],\n    title: [Function: bound queuedCommandFn],\n    url: [Function: bound queuedCommandFn]\n  },\n  acceptAlert: [Function: bound queuedCommandFn],\n  appium: {\n    getContext: [Function: bound queuedCommandFn],\n    getContexts: [Function: bound queuedCommandFn],\n    getCurrentActivity: [Function: bound queuedCommandFn],\n    getCurrentPackage: [Function: bound queuedCommandFn],\n    getGeolocation: [Function: bound queuedCommandFn],\n    getOrientation: [Function: bound queuedCommandFn],\n    hideKeyboard: [Function: bound queuedCommandFn],\n    isKeyboardShown: [Function: bound queuedCommandFn],\n    longPressKeyCode: [Function: bound queuedCommandFn],\n    pressKeyCode: [Function: bound queuedCommandFn],\n    setContext: [Function: bound queuedCommandFn],\n    setGeolocation: [Function: bound queuedCommandFn],\n    setOrientation: [Function: bound queuedCommandFn],\n    startActivity: [Function: bound queuedCommandFn]\n  },\n  back: [Function: bound queuedCommandFn],\n  closeWindow: [Function: bound queuedCommandFn],\n  contexts: [Function: bound queuedCommandFn],\n  cookie: [Function: bound queuedCommandFn],\n  currentContext: [Function: bound queuedCommandFn],\n  dismissAlert: [Function: bound queuedCommandFn],\n  element: [Function (anonymous)] {\n    findActive: [Function: findActive],\n    getActive: [Function: findActive]\n  },\n  elementActive: [Function: bound queuedCommandFn],\n  elementIdAttribute: [Function: bound queuedCommandFn],\n  elementIdClear: [Function: bound queuedCommandFn],\n  elementIdClick: [Function: bound queuedCommandFn],\n  elementIdCssProperty: [Function: bound queuedCommandFn],\n  elementIdDisplayed: [Function: bound queuedCommandFn],\n  elementIdDoubleClick: [Function: bound queuedCommandFn],\n  elementIdElement: [Function: bound queuedCommandFn],\n  elementIdElements: [Function: bound queuedCommandFn],\n  elementIdEnabled: [Function: bound queuedCommandFn],\n  elementIdEquals: [Function: bound queuedCommandFn],\n  elementIdLocation: [Function: bound queuedCommandFn],\n  elementIdLocationInView: [Function: bound queuedCommandFn],\n  elementIdName: [Function: bound queuedCommandFn],\n  elementIdProperty: [Function: bound queuedCommandFn],\n  elementIdSelected: [Function: bound queuedCommandFn],\n  elementIdSize: [Function: bound queuedCommandFn],\n  elementIdText: [Function: bound queuedCommandFn],\n  elementIdValue: [Function: bound queuedCommandFn],\n  elements: [Function: bound queuedCommandFn],\n  execute: [Function: bound queuedCommandFn],\n  executeScript: [Function: bound queuedCommandFn],\n  executeAsyncScript: [Function: bound queuedCommandFn],\n  executeAsync: [Function: bound queuedCommandFn],\n  forward: [Function: bound queuedCommandFn],\n  frame: [Function: bound queuedCommandFn],\n  frameParent: [Function: bound queuedCommandFn],\n  fullscreenWindow: [Function: bound queuedCommandFn],\n  getAlertText: [Function: bound queuedCommandFn],\n  getCurrentUrl: [Function: bound queuedCommandFn],\n  getOrientation: [Function: bound queuedCommandFn],\n  keys: [Function: bound queuedCommandFn],\n  minimizeWindow: [Function: bound queuedCommandFn],\n  mouseButtonClick: [Function: bound queuedCommandFn],\n  mouseButtonDown: [Function: bound queuedCommandFn],\n  mouseButtonUp: [Function: bound queuedCommandFn],\n  moveTo: [Function: bound queuedCommandFn],\n  navigateTo: [Function: bound queuedCommandFn],\n  openNewWindow: [Function: bound queuedCommandFn],\n  quit: [Function: bound queuedCommandFn],\n  refresh: [Function: bound queuedCommandFn],\n  releaseMouseButton: [Function: bound queuedCommandFn],\n  screenshot: [Function: bound queuedCommandFn],\n  session: [Function: bound queuedCommandFn],\n  sessionLog: [Function: bound queuedCommandFn],\n  sessionLogTypes: [Function: bound queuedCommandFn],\n  sessions: [Function: bound queuedCommandFn],\n  setAlertText: [Function: bound queuedCommandFn],\n  setContext: [Function: bound queuedCommandFn],\n  setOrientation: [Function: bound queuedCommandFn],\n  source: [Function: bound queuedCommandFn],\n  status: [Function: bound queuedCommandFn],\n  submit: [Function: bound queuedCommandFn],\n  switchToWindow: [Function: bound queuedCommandFn],\n  switchWindow: [Function: bound queuedCommandFn],\n  timeouts: [Function: bound queuedCommandFn],\n  timeoutsAsyncScript: [Function: bound queuedCommandFn],\n  timeoutsImplicitWait: [Function: bound queuedCommandFn],\n  title: [Function: bound queuedCommandFn],\n  url: [Function: bound queuedCommandFn],\n  waitUntil: [Function: bound queuedCommandFn],\n  windowHandle: [Function: bound queuedCommandFn],\n  windowHandles: [Function: bound queuedCommandFn],\n  windowMaximize: [Function: bound queuedCommandFn],\n  windowPosition: [Function: bound queuedCommandFn],\n  windowRect: [Function: bound queuedCommandFn],\n  windowSize: [Function: bound queuedCommandFn],\n  alerts: {\n    accept: [Function: bound queuedCommandFn],\n    dismiss: [Function: bound queuedCommandFn],\n    getText: [Function: bound queuedCommandFn],\n    setText: [Function: bound queuedCommandFn]\n  },\n  axeInject: [Function: bound queuedCommandFn],\n  axeRun: [Function: bound queuedCommandFn],\n  captureBrowserConsoleLogs: [Function: bound queuedCommandFn],\n  captureBrowserExceptions: [Function: bound queuedCommandFn],\n  captureNetworkRequests: [Function: bound queuedCommandFn],\n  cookies: {\n    delete: [Function: bound queuedCommandFn],\n    deleteAll: [Function: bound queuedCommandFn],\n    get: [Function: bound queuedCommandFn],\n    getAll: [Function: bound queuedCommandFn],\n    set: [Function: bound queuedCommandFn]\n  },\n  debug: [Function: bound queuedCommandFn],\n  deleteCookie: [Function: bound queuedCommandFn],\n  deleteCookies: [Function: bound queuedCommandFn],\n  document: {\n    injectScript: [Function: bound queuedCommandFn],\n    source: [Function: bound queuedCommandFn],\n    pageSource: [Function: bound queuedCommandFn]\n  },\n  enablePerformanceMetrics: [Function: bound queuedCommandFn],\n  end: [Function: bound queuedCommandFn],\n  getCookie: [Function: bound queuedCommandFn],\n  getCookies: [Function: bound queuedCommandFn],\n  getLog: [Function: bound queuedCommandFn],\n  getLogTypes: [Function: bound queuedCommandFn],\n  getPerformanceMetrics: [Function: bound queuedCommandFn],\n  getTitle: [Function: bound queuedCommandFn],\n  getWindowPosition: [Function: bound queuedCommandFn],\n  getWindowRect: [Function: bound queuedCommandFn],\n  getWindowSize: [Function: bound queuedCommandFn],\n  init: [Function: bound queuedCommandFn],\n  injectScript: [Function: bound queuedCommandFn],\n  isLogAvailable: [Function: bound queuedCommandFn],\n  maximizeWindow: [Function: bound queuedCommandFn],\n  mockNetworkResponse: [Function: bound queuedCommandFn],\n  pageSource: [Function: bound queuedCommandFn],\n  pause: [Function: bound queuedCommandFn],\n  perform: [Function: bound queuedCommandFn],\n  registerBasicAuth: [Function: bound queuedCommandFn],\n  resizeWindow: [Function: bound queuedCommandFn],\n  saveScreenshot: [Function: bound queuedCommandFn],\n  saveSnapshot: [Function: bound queuedCommandFn],\n  setCookie: [Function: bound queuedCommandFn],\n  setDeviceDimensions: [Function: bound queuedCommandFn],\n  setGeolocation: [Function: bound queuedCommandFn],\n  setNetworkConditions: [Function: bound queuedCommandFn],\n  setWindowPosition: [Function: bound queuedCommandFn],\n  setWindowRect: [Function: bound queuedCommandFn],\n  setWindowSize: [Function: bound queuedCommandFn],\n  takeHeapSnapshot: [Function: bound queuedCommandFn],\n  urlHash: [Function: bound queuedCommandFn],\n  useCss: [Function: bound queuedCommandFn],\n  useXpath: [Function: bound queuedCommandFn],\n  window: {\n    close: [Function: bound queuedCommandFn],\n    fullscreen: [Function: bound queuedCommandFn],\n    getAllHandles: [Function: bound queuedCommandFn],\n    getHandle: [Function: bound queuedCommandFn],\n    getPosition: [Function: bound queuedCommandFn],\n    getRect: [Function: bound queuedCommandFn],\n    getSize: [Function: bound queuedCommandFn],\n    maximize: [Function: bound queuedCommandFn],\n    minimize: [Function: bound queuedCommandFn],\n    open: [Function: bound queuedCommandFn],\n    openNew: [Function: bound queuedCommandFn],\n    setPosition: [Function: bound queuedCommandFn],\n    setRect: [Function: bound queuedCommandFn],\n    setSize: [Function: bound queuedCommandFn],\n    resize: [Function: bound queuedCommandFn],\n    switchTo: [Function: bound queuedCommandFn],\n    switch: [Function: bound queuedCommandFn]\n  },\n  within: [Function: bound withinDefinition],\n  clearValue: [Function: bound queuedCommandFn],\n  click: [Function: bound queuedCommandFn],\n  clickAndHold: [Function: bound queuedCommandFn],\n  doubleClick: [Function: bound queuedCommandFn],\n  dragAndDrop: [Function: bound queuedCommandFn],\n  findElement: [Function: bound queuedCommandFn],\n  findElements: [Function: bound queuedCommandFn],\n  getAccessibleName: [Function: bound queuedCommandFn],\n  getAriaRole: [Function: bound queuedCommandFn],\n  getAttribute: [Function: bound queuedCommandFn],\n  getElementAttribute: [Function: bound queuedCommandFn],\n  getCssProperty: [Function: bound queuedCommandFn],\n  getElementProperty: [Function: bound queuedCommandFn],\n  getElementRect: [Function: bound queuedCommandFn],\n  getElementSize: [Function: bound queuedCommandFn],\n  getFirstElementChild: [Function: bound queuedCommandFn],\n  getLastElementChild: [Function: bound queuedCommandFn],\n  getLocation: [Function: bound queuedCommandFn],\n  getLocationInView: [Function: bound queuedCommandFn],\n  getNextSibling: [Function: bound queuedCommandFn],\n  getPreviousSibling: [Function: bound queuedCommandFn],\n  getShadowRoot: [Function: bound queuedCommandFn],\n  getTagName: [Function: bound queuedCommandFn],\n  getText: [Function: bound queuedCommandFn],\n  getValue: [Function: bound queuedCommandFn],\n  hasDescendants: [Function: bound queuedCommandFn],\n  isEnabled: [Function: bound queuedCommandFn],\n  isPresent: [Function: bound queuedCommandFn],\n  isSelected: [Function: bound queuedCommandFn],\n  isVisible: [Function: bound queuedCommandFn],\n  moveToElement: [Function: bound queuedCommandFn],\n  rightClick: [Function: bound queuedCommandFn],\n  sendKeys: [Function: bound queuedCommandFn],\n  setAttribute: [Function: bound queuedCommandFn],\n  setPassword: [Function: bound queuedCommandFn],\n  sendKeysRedacted: [Function: bound queuedCommandFn],\n  setValue: [Function: bound queuedCommandFn],\n  submitForm: [Function: bound queuedCommandFn],\n  takeElementScreenshot: [Function: bound queuedCommandFn],\n  updateValue: [Function: bound queuedCommandFn],\n  uploadFile: [Function: bound queuedCommandFn],\n  waitForElementNotPresent: [Function: bound queuedCommandFn],\n  waitForElementNotVisible: [Function: bound queuedCommandFn],\n  waitForElementPresent: [Function: bound queuedCommandFn],\n  waitForElementVisible: [Function: bound queuedCommandFn],\n  angular: { getElementsInList: [Function: bound queuedCommandFn] },\n  strictClick: [Function: bound queuedCommandFn],\n  _axeInjectFunc: [Function: bound queuedCommandFn],\n  mockserver: { create: [Function: bound queuedCommandFn] },\n  supertest: { request: [Function: bound queuedCommandFn] }\n}\"\u001b[0m \u001b[0;90m(35ms)\u001b[0m","showDiff":false,"abortOnFailure":true,"namespace":"expect(<value>)"},"skippedAtRuntime":[],"skippedByUser":[],"skipped":[],"time":"0.6280","timeMs":628,"completed":{"amazon web testing":{"time":"0.3130","assertions":[{"name":"NightwatchAssertError","message":"expected NightwatchAPI{ …(193) } to equal 'Amazon.com: Online Shopping for Elect…' - expected \"Amazon.com: Online Shopping for Electronics, Apparel, Computers, Books, DVDs & more\" but got: \"NightwatchAPI {\n  capabilities: {},\n  currentTest: [Getter],\n  desiredCapabilities: { browserName: 'firefox', name: 'api testing' },\n  sessionId: null,\n  options: {\n    always_async_commands: false,\n    backwards_compatibility_mode: false,\n    baseUrl: 'https://nightwatchjs.org',\n    base_url: 'https://nightwatchjs.org',\n    custom_assertions_path: '',\n    custom_commands_path: [ 'node_modules/nightwatch/examples/custom-commands/' ],\n    default_reporter: [ 'junit', 'json', 'minimalJson', 'html' ],\n    desiredCapabilities: { browserName: 'firefox', name: 'api testing' },\n    detailed_output: true,\n    disable_colors: false,\n    disable_error_log: false,\n    disable_global_apis: false,\n    disable_global_expect: false,\n    disable_output_boxes: false,\n    disable_typescript: false,\n    dotenv: {},\n    element_command_retries: 3,\n    enable_fail_fast: false,\n    enable_v3_element_apis: true,\n    end_session_on_fail: true,\n    exclude: null,\n    filename_format: null,\n    filter: null,\n    folder_format: null,\n    globals: {\n      abortOnAssertionFailure: true,\n      abortOnElementLocateError: false,\n      waitForConditionPollInterval: 500,\n      waitForConditionTimeout: 5000,\n      throwOnMultipleElementsReturned: false,\n      suppressWarningsOnMultipleElementsReturned: true,\n      asyncHookTimeout: 20000,\n      unitTestsTimeout: 2000,\n      customReporterCallbackTimeout: 20000,\n      retryAssertionTimeout: 5000,\n      reuseBrowserSession: false,\n      reporter: [Function: reporter],\n      beforeTestSuite: [Function: beforeTestSuite],\n      afterTestSuite: [Function: afterTestSuite],\n      beforeTestCase: [Function: beforeTestCase],\n      afterTestCase: [Function: afterTestCase],\n      onBrowserNavigate: [Function: onBrowserNavigate],\n      onBrowserQuit: [Function: onBrowserQuit]\n    },\n    globals_path: '',\n    launchUrl: 'https://nightwatchjs.org',\n    launch_url: 'https://nightwatchjs.org',\n    live_output: false,\n    log_screenshot_data: false,\n    minimal_report_file_path: 'tests_output/minimal_report.json',\n    output: true,\n    output_folder: 'tests_output',\n    output_timestamp: false,\n    page_objects_path: [ 'node_modules/nightwatch/examples/pages/' ],\n    parallel_mode: false,\n    parallel_process_delay: 10,\n    persist_globals: false,\n    plugins: [ '@nightwatch/apitesting' ],\n    report_command_errors: false,\n    report_network_errors: true,\n    report_prefix: '',\n    reporter_options: {\n      output_folder: 'tests_output',\n      folder_format: null,\n      filename_format: null,\n      minimal_report_file_path: 'tests_output/minimal_report.json'\n    },\n    screenshots: {\n      enabled: false,\n      filename_format: [Function: filename_format],\n      path: '/home/ender/IdeaProjects/jobs/screens',\n      on_error: true,\n      on_failure: true\n    },\n    screenshotsPath: '/home/ender/IdeaProjects/jobs/screens',\n    selenium: {\n      start_process: false,\n      cli_args: {},\n      server_path: null,\n      log_path: './logs',\n      port: undefined,\n      check_process_delay: 500,\n      max_status_poll_tries: 15,\n      status_poll_interval: 200,\n      url: 'http://localhost:undefined'\n    },\n    silent: true,\n    skip_testcases_on_fail: true,\n    skipgroup: '',\n    skiptags: '',\n    src_folders: [],\n    start_session: false,\n    sync_test_names: true,\n    testEnv: 'api_testing',\n    testWorkersEnabled: false,\n    test_runner: { type: 'default', options: {} },\n    test_settings: {},\n    test_workers: { enabled: true, workers: 'auto' },\n    timestamp_format: '',\n    trace: {\n      enabled: false,\n      path: '',\n      filename_format: [Function: snapshot_file_format]\n    },\n    tsconfig_path: '',\n    unit_testing_mode: false,\n    unit_tests_mode: false,\n    usage_analytics: {\n      enabled: false,\n      log_path: './logs/analytics',\n      client_id: 'bff83f41-2870-4277-a64d-b240e72c288d'\n    },\n    use_child_process: false,\n    use_xpath: false,\n    webdriver: {\n      start_process: false,\n      cli_args: {},\n      server_path: '',\n      log_path: './logs',\n      log_file_name: '',\n      check_process_delay: 100,\n      max_status_poll_tries: 10,\n      status_poll_interval: 200,\n      process_create_timeout: 120000,\n      host: 'localhost',\n      port: 4444,\n      ssl: false,\n      proxy: undefined,\n      timeout_options: [Object],\n      default_path_prefix: '',\n      username: undefined,\n      access_key: undefined,\n      start_session: false,\n      url: 'http://localhost:undefined'\n    },\n    capabilities: { browserName: 'firefox', name: 'api testing' }\n  },\n  globals: {\n    abortOnAssertionFailure: true,\n    abortOnElementLocateError: false,\n    waitForConditionPollInterval: 500,\n    waitForConditionTimeout: 5000,\n    throwOnMultipleElementsReturned: false,\n    suppressWarningsOnMultipleElementsReturned: true,\n    asyncHookTimeout: 20000,\n    unitTestsTimeout: 2000,\n    customReporterCallbackTimeout: 20000,\n    retryAssertionTimeout: 5000,\n    reuseBrowserSession: false,\n    reporter: [Function: reporter],\n    beforeTestSuite: [Function: beforeTestSuite],\n    afterTestSuite: [Function: afterTestSuite],\n    beforeTestCase: [Function: beforeTestCase],\n    afterTestCase: [Function: afterTestCase],\n    onBrowserNavigate: [Function: onBrowserNavigate],\n    onBrowserQuit: [Function: onBrowserQuit]\n  },\n  createElement: [Function (anonymous)],\n  baseUrl: 'https://nightwatchjs.org',\n  launchUrl: 'https://nightwatchjs.org',\n  launch_url: 'https://nightwatchjs.org',\n  page: {\n    google: {\n      consent: [Function: bound pageObjectDefinition],\n      search: [Function: bound pageObjectDefinition],\n      searchResults: [Function: bound pageObjectDefinition]\n    },\n    nightwatchFeatures: [Function: bound pageObjectDefinition]\n  },\n  assert: {\n    fail: [Function: bound assertFn],\n    AssertionError: [Function: bound assertFn],\n    ok: [Function: bound assertFn],\n    equal: [Function: bound assertFn],\n    notEqual: [Function: bound assertFn],\n    deepEqual: [Function: bound assertFn],\n    notDeepEqual: [Function: bound assertFn],\n    deepStrictEqual: [Function: bound assertFn],\n    notDeepStrictEqual: [Function: bound assertFn],\n    strictEqual: [Function: bound assertFn],\n    notStrictEqual: [Function: bound assertFn],\n    throws: [Function: bound assertFn],\n    rejects: [Function: bound assertFn],\n    doesNotThrow: [Function: bound assertFn],\n    doesNotReject: [Function: bound assertFn],\n    ifError: [Function: bound assertFn],\n    match: [Function: bound assertFn],\n    doesNotMatch: [Function: bound assertFn],\n    CallTracker: [Function: bound assertFn],\n    strict: [Function: bound assertFn],\n    attributeContains: [Function: bound queuedCommandFn],\n    attributeEquals: [Function: bound queuedCommandFn],\n    attributeMatches: [Function: bound queuedCommandFn],\n    contains: [Function: bound queuedCommandFn],\n    containsText: [Function: bound queuedCommandFn],\n    cssClassNotPresent: [Function: bound queuedCommandFn],\n    cssClassPresent: [Function: bound queuedCommandFn],\n    cssProperty: [Function: bound queuedCommandFn],\n    domPropertyContains: [Function: bound queuedCommandFn],\n    domPropertyEquals: [Function: bound queuedCommandFn],\n    domPropertyMatches: [Function: bound queuedCommandFn],\n    elementNotPresent: [Function: bound queuedCommandFn],\n    elementPresent: [Function: bound queuedCommandFn],\n    elementsCount: [Function: bound queuedCommandFn],\n    enabled: [Function: bound queuedCommandFn],\n    hasAttribute: [Function: bound queuedCommandFn],\n    hasClass: [Function: bound queuedCommandFn],\n    hasDescendants: [Function: bound queuedCommandFn],\n    hidden: [Function: bound queuedCommandFn],\n    promisedValue: [Function: bound queuedCommandFn],\n    selected: [Function: bound queuedCommandFn],\n    textContains: [Function: bound queuedCommandFn],\n    textEquals: [Function: bound queuedCommandFn],\n    textMatches: [Function: bound queuedCommandFn],\n    title: [Function: bound queuedCommandFn],\n    titleContains: [Function: bound queuedCommandFn],\n    titleEquals: [Function: bound queuedCommandFn],\n    titleMatches: [Function: bound queuedCommandFn],\n    urlContains: [Function: bound queuedCommandFn],\n    urlEquals: [Function: bound queuedCommandFn],\n    urlMatches: [Function: bound queuedCommandFn],\n    value: [Function: bound queuedCommandFn],\n    valueContains: [Function: bound queuedCommandFn],\n    valueEquals: [Function: bound queuedCommandFn],\n    visible: [Function: bound queuedCommandFn]\n  },\n  verify: {\n    attributeContains: [Function: bound queuedCommandFn],\n    attributeEquals: [Function: bound queuedCommandFn],\n    attributeMatches: [Function: bound queuedCommandFn],\n    contains: [Function: bound queuedCommandFn],\n    containsText: [Function: bound queuedCommandFn],\n    cssClassNotPresent: [Function: bound queuedCommandFn],\n    cssClassPresent: [Function: bound queuedCommandFn],\n    cssProperty: [Function: bound queuedCommandFn],\n    domPropertyContains: [Function: bound queuedCommandFn],\n    domPropertyEquals: [Function: bound queuedCommandFn],\n    domPropertyMatches: [Function: bound queuedCommandFn],\n    elementNotPresent: [Function: bound queuedCommandFn],\n    elementPresent: [Function: bound queuedCommandFn],\n    elementsCount: [Function: bound queuedCommandFn],\n    enabled: [Function: bound queuedCommandFn],\n    hasAttribute: [Function: bound queuedCommandFn],\n    hasClass: [Function: bound queuedCommandFn],\n    hasDescendants: [Function: bound queuedCommandFn],\n    hidden: [Function: bound queuedCommandFn],\n    promisedValue: [Function: bound queuedCommandFn],\n    selected: [Function: bound queuedCommandFn],\n    textContains: [Function: bound queuedCommandFn],\n    textEquals: [Function: bound queuedCommandFn],\n    textMatches: [Function: bound queuedCommandFn],\n    title: [Function: bound queuedCommandFn],\n    titleContains: [Function: bound queuedCommandFn],\n    titleEquals: [Function: bound queuedCommandFn],\n    titleMatches: [Function: bound queuedCommandFn],\n    urlContains: [Function: bound queuedCommandFn],\n    urlEquals: [Function: bound queuedCommandFn],\n    urlMatches: [Function: bound queuedCommandFn],\n    value: [Function: bound queuedCommandFn],\n    valueContains: [Function: bound queuedCommandFn],\n    valueEquals: [Function: bound queuedCommandFn],\n    visible: [Function: bound queuedCommandFn]\n  },\n  ensure: {\n    elementTextMatches: [Function: bound assertFn],\n    elementTextContains: [Function: bound assertFn],\n    elementTextIs: [Function: bound assertFn],\n    elementIsNotSelected: [Function: bound assertFn],\n    elementIsSelected: [Function: bound assertFn],\n    elementIsDisabled: [Function: bound assertFn],\n    ableToSwitchToFrame: [Function: bound assertFn],\n    elementIsEnabled: [Function: bound assertFn],\n    elementIsNotVisible: [Function: bound assertFn],\n    elementIsVisible: [Function: bound assertFn],\n    stalenessOf: [Function: bound assertFn],\n    elementsLocated: [Function: bound assertFn],\n    elementLocated: [Function: bound assertFn],\n    urlMatches: [Function: bound assertFn],\n    urlContains: [Function: bound assertFn],\n    urlIs: [Function: bound assertFn],\n    titleMatches: [Function: bound assertFn],\n    titleContains: [Function: bound assertFn],\n    alertIsPresent: [Function: bound assertFn],\n    titleIs: [Function: bound assertFn]\n  },\n  chrome: {\n    launchApp: [Function: bound queuedCommandFn],\n    getNetworkConditions: [Function: bound queuedCommandFn],\n    setNetworkConditions: [Function: bound queuedCommandFn],\n    sendDevToolsCommand: [Function: bound queuedCommandFn],\n    sendAndGetDevToolsCommand: [Function: bound queuedCommandFn],\n    setPermission: [Function: bound queuedCommandFn],\n    setDownloadPath: [Function: bound queuedCommandFn],\n    getCastSinks: [Function: bound queuedCommandFn],\n    setCastSinkToUse: [Function: bound queuedCommandFn],\n    startCastTabMirroring: [Function: bound queuedCommandFn],\n    getCastIssueMessage: [Function: bound queuedCommandFn],\n    stopCasting: [Function: bound queuedCommandFn]\n  },\n  firefox: {\n    getContext: [Function: bound queuedCommandFn],\n    setContext: [Function: bound queuedCommandFn],\n    installAddon: [Function: bound queuedCommandFn],\n    uninstallAddon: [Function: bound queuedCommandFn]\n  },\n  driver: [Getter],\n  actions: [Function (anonymous)],\n  Keys: {\n    NULL: '',\n    CANCEL: '',\n    HELP: '',\n    BACK_SPACE: '',\n    TAB: '',\n    CLEAR: '',\n    RETURN: '',\n    ENTER: '',\n    SHIFT: '',\n    CONTROL: '',\n    ALT: '',\n    PAUSE: '',\n    ESCAPE: '',\n    SPACE: '',\n    PAGE_UP: '',\n    PAGE_DOWN: '',\n    END: '',\n    HOME: '',\n    ARROW_LEFT: '',\n    LEFT: '',\n    ARROW_UP: '',\n    UP: '',\n    ARROW_RIGHT: '',\n    RIGHT: '',\n    ARROW_DOWN: '',\n    DOWN: '',\n    INSERT: '',\n    DELETE: '',\n    SEMICOLON: '',\n    EQUALS: '',\n    NUMPAD0: '',\n    NUMPAD1: '',\n    NUMPAD2: '',\n    NUMPAD3: '',\n    NUMPAD4: '',\n    NUMPAD5: '',\n    NUMPAD6: '',\n    NUMPAD7: '',\n    NUMPAD8: '',\n    NUMPAD9: '',\n    MULTIPLY: '',\n    ADD: '',\n    SEPARATOR: '',\n    SUBTRACT: '',\n    DECIMAL: '',\n    DIVIDE: '',\n    F1: '',\n    F2: '',\n    F3: '',\n    F4: '',\n    F5: '',\n    F6: '',\n    F7: '',\n    F8: '',\n    F9: '',\n    F10: '',\n    F11: '',\n    F12: '',\n    COMMAND: '',\n    META: '',\n    ZENKAKU_HANKAKU: '',\n    chord: [Function (anonymous)]\n  },\n  expect: [Function (anonymous)] {\n    null: [Function: bound queuedCommandFn],\n    active: [Function: bound queuedCommandFn],\n    attribute: [Function: bound queuedCommandFn],\n    css: [Function: bound queuedCommandFn],\n    enabled: [Function: bound queuedCommandFn],\n    present: [Function: bound queuedCommandFn],\n    property: [Function: bound queuedCommandFn],\n    selected: [Function: bound queuedCommandFn],\n    text: [Function: bound queuedCommandFn],\n    type: [Function: bound queuedCommandFn],\n    value: [Function: bound queuedCommandFn],\n    visible: [Function: bound queuedCommandFn],\n    count: [Function: bound queuedCommandFn],\n    component: [Function: bound queuedCommandFn],\n    cookie: [Function: bound queuedCommandFn],\n    element: [Function: bound queuedCommandFn],\n    elements: [Function: bound queuedCommandFn],\n    title: [Function: bound queuedCommandFn],\n    url: [Function: bound queuedCommandFn]\n  },\n  acceptAlert: [Function: bound queuedCommandFn],\n  appium: {\n    getContext: [Function: bound queuedCommandFn],\n    getContexts: [Function: bound queuedCommandFn],\n    getCurrentActivity: [Function: bound queuedCommandFn],\n    getCurrentPackage: [Function: bound queuedCommandFn],\n    getGeolocation: [Function: bound queuedCommandFn],\n    getOrientation: [Function: bound queuedCommandFn],\n    hideKeyboard: [Function: bound queuedCommandFn],\n    isKeyboardShown: [Function: bound queuedCommandFn],\n    longPressKeyCode: [Function: bound queuedCommandFn],\n    pressKeyCode: [Function: bound queuedCommandFn],\n    setContext: [Function: bound queuedCommandFn],\n    setGeolocation: [Function: bound queuedCommandFn],\n    setOrientation: [Function: bound queuedCommandFn],\n    startActivity: [Function: bound queuedCommandFn]\n  },\n  back: [Function: bound queuedCommandFn],\n  closeWindow: [Function: bound queuedCommandFn],\n  contexts: [Function: bound queuedCommandFn],\n  cookie: [Function: bound queuedCommandFn],\n  currentContext: [Function: bound queuedCommandFn],\n  dismissAlert: [Function: bound queuedCommandFn],\n  element: [Function (anonymous)] {\n    findActive: [Function: findActive],\n    getActive: [Function: findActive]\n  },\n  elementActive: [Function: bound queuedCommandFn],\n  elementIdAttribute: [Function: bound queuedCommandFn],\n  elementIdClear: [Function: bound queuedCommandFn],\n  elementIdClick: [Function: bound queuedCommandFn],\n  elementIdCssProperty: [Function: bound queuedCommandFn],\n  elementIdDisplayed: [Function: bound queuedCommandFn],\n  elementIdDoubleClick: [Function: bound queuedCommandFn],\n  elementIdElement: [Function: bound queuedCommandFn],\n  elementIdElements: [Function: bound queuedCommandFn],\n  elementIdEnabled: [Function: bound queuedCommandFn],\n  elementIdEquals: [Function: bound queuedCommandFn],\n  elementIdLocation: [Function: bound queuedCommandFn],\n  elementIdLocationInView: [Function: bound queuedCommandFn],\n  elementIdName: [Function: bound queuedCommandFn],\n  elementIdProperty: [Function: bound queuedCommandFn],\n  elementIdSelected: [Function: bound queuedCommandFn],\n  elementIdSize: [Function: bound queuedCommandFn],\n  elementIdText: [Function: bound queuedCommandFn],\n  elementIdValue: [Function: bound queuedCommandFn],\n  elements: [Function: bound queuedCommandFn],\n  execute: [Function: bound queuedCommandFn],\n  executeScript: [Function: bound queuedCommandFn],\n  executeAsyncScript: [Function: bound queuedCommandFn],\n  executeAsync: [Function: bound queuedCommandFn],\n  forward: [Function: bound queuedCommandFn],\n  frame: [Function: bound queuedCommandFn],\n  frameParent: [Function: bound queuedCommandFn],\n  fullscreenWindow: [Function: bound queuedCommandFn],\n  getAlertText: [Function: bound queuedCommandFn],\n  getCurrentUrl: [Function: bound queuedCommandFn],\n  getOrientation: [Function: bound queuedCommandFn],\n  keys: [Function: bound queuedCommandFn],\n  minimizeWindow: [Function: bound queuedCommandFn],\n  mouseButtonClick: [Function: bound queuedCommandFn],\n  mouseButtonDown: [Function: bound queuedCommandFn],\n  mouseButtonUp: [Function: bound queuedCommandFn],\n  moveTo: [Function: bound queuedCommandFn],\n  navigateTo: [Function: bound queuedCommandFn],\n  openNewWindow: [Function: bound queuedCommandFn],\n  quit: [Function: bound queuedCommandFn],\n  refresh: [Function: bound queuedCommandFn],\n  releaseMouseButton: [Function: bound queuedCommandFn],\n  screenshot: [Function: bound queuedCommandFn],\n  session: [Function: bound queuedCommandFn],\n  sessionLog: [Function: bound queuedCommandFn],\n  sessionLogTypes: [Function: bound queuedCommandFn],\n  sessions: [Function: bound queuedCommandFn],\n  setAlertText: [Function: bound queuedCommandFn],\n  setContext: [Function: bound queuedCommandFn],\n  setOrientation: [Function: bound queuedCommandFn],\n  source: [Function: bound queuedCommandFn],\n  status: [Function: bound queuedCommandFn],\n  submit: [Function: bound queuedCommandFn],\n  switchToWindow: [Function: bound queuedCommandFn],\n  switchWindow: [Function: bound queuedCommandFn],\n  timeouts: [Function: bound queuedCommandFn],\n  timeoutsAsyncScript: [Function: bound queuedCommandFn],\n  timeoutsImplicitWait: [Function: bound queuedCommandFn],\n  title: [Function: bound queuedCommandFn],\n  url: [Function: bound queuedCommandFn],\n  waitUntil: [Function: bound queuedCommandFn],\n  windowHandle: [Function: bound queuedCommandFn],\n  windowHandles: [Function: bound queuedCommandFn],\n  windowMaximize: [Function: bound queuedCommandFn],\n  windowPosition: [Function: bound queuedCommandFn],\n  windowRect: [Function: bound queuedCommandFn],\n  windowSize: [Function: bound queuedCommandFn],\n  alerts: {\n    accept: [Function: bound queuedCommandFn],\n    dismiss: [Function: bound queuedCommandFn],\n    getText: [Function: bound queuedCommandFn],\n    setText: [Function: bound queuedCommandFn]\n  },\n  axeInject: [Function: bound queuedCommandFn],\n  axeRun: [Function: bound queuedCommandFn],\n  captureBrowserConsoleLogs: [Function: bound queuedCommandFn],\n  captureBrowserExceptions: [Function: bound queuedCommandFn],\n  captureNetworkRequests: [Function: bound queuedCommandFn],\n  cookies: {\n    delete: [Function: bound queuedCommandFn],\n    deleteAll: [Function: bound queuedCommandFn],\n    get: [Function: bound queuedCommandFn],\n    getAll: [Function: bound queuedCommandFn],\n    set: [Function: bound queuedCommandFn]\n  },\n  debug: [Function: bound queuedCommandFn],\n  deleteCookie: [Function: bound queuedCommandFn],\n  deleteCookies: [Function: bound queuedCommandFn],\n  document: {\n    injectScript: [Function: bound queuedCommandFn],\n    source: [Function: bound queuedCommandFn],\n    pageSource: [Function: bound queuedCommandFn]\n  },\n  enablePerformanceMetrics: [Function: bound queuedCommandFn],\n  end: [Function: bound queuedCommandFn],\n  getCookie: [Function: bound queuedCommandFn],\n  getCookies: [Function: bound queuedCommandFn],\n  getLog: [Function: bound queuedCommandFn],\n  getLogTypes: [Function: bound queuedCommandFn],\n  getPerformanceMetrics: [Function: bound queuedCommandFn],\n  getTitle: [Function: bound queuedCommandFn],\n  getWindowPosition: [Function: bound queuedCommandFn],\n  getWindowRect: [Function: bound queuedCommandFn],\n  getWindowSize: [Function: bound queuedCommandFn],\n  init: [Function: bound queuedCommandFn],\n  injectScript: [Function: bound queuedCommandFn],\n  isLogAvailable: [Function: bound queuedCommandFn],\n  maximizeWindow: [Function: bound queuedCommandFn],\n  mockNetworkResponse: [Function: bound queuedCommandFn],\n  pageSource: [Function: bound queuedCommandFn],\n  pause: [Function: bound queuedCommandFn],\n  perform: [Function: bound queuedCommandFn],\n  registerBasicAuth: [Function: bound queuedCommandFn],\n  resizeWindow: [Function: bound queuedCommandFn],\n  saveScreenshot: [Function: bound queuedCommandFn],\n  saveSnapshot: [Function: bound queuedCommandFn],\n  setCookie: [Function: bound queuedCommandFn],\n  setDeviceDimensions: [Function: bound queuedCommandFn],\n  setGeolocation: [Function: bound queuedCommandFn],\n  setNetworkConditions: [Function: bound queuedCommandFn],\n  setWindowPosition: [Function: bound queuedCommandFn],\n  setWindowRect: [Function: bound queuedCommandFn],\n  setWindowSize: [Function: bound queuedCommandFn],\n  takeHeapSnapshot: [Function: bound queuedCommandFn],\n  urlHash: [Function: bound queuedCommandFn],\n  useCss: [Function: bound queuedCommandFn],\n  useXpath: [Function: bound queuedCommandFn],\n  window: {\n    close: [Function: bound queuedCommandFn],\n    fullscreen: [Function: bound queuedCommandFn],\n    getAllHandles: [Function: bound queuedCommandFn],\n    getHandle: [Function: bound queuedCommandFn],\n    getPosition: [Function: bound queuedCommandFn],\n    getRect: [Function: bound queuedCommandFn],\n    getSize: [Function: bound queuedCommandFn],\n    maximize: [Function: bound queuedCommandFn],\n    minimize: [Function: bound queuedCommandFn],\n    open: [Function: bound queuedCommandFn],\n    openNew: [Function: bound queuedCommandFn],\n    setPosition: [Function: bound queuedCommandFn],\n    setRect: [Function: bound queuedCommandFn],\n    setSize: [Function: bound queuedCommandFn],\n    resize: [Function: bound queuedCommandFn],\n    switchTo: [Function: bound queuedCommandFn],\n    switch: [Function: bound queuedCommandFn]\n  },\n  within: [Function: bound withinDefinition],\n  clearValue: [Function: bound queuedCommandFn],\n  click: [Function: bound queuedCommandFn],\n  clickAndHold: [Function: bound queuedCommandFn],\n  doubleClick: [Function: bound queuedCommandFn],\n  dragAndDrop: [Function: bound queuedCommandFn],\n  findElement: [Function: bound queuedCommandFn],\n  findElements: [Function: bound queuedCommandFn],\n  getAccessibleName: [Function: bound queuedCommandFn],\n  getAriaRole: [Function: bound queuedCommandFn],\n  getAttribute: [Function: bound queuedCommandFn],\n  getElementAttribute: [Function: bound queuedCommandFn],\n  getCssProperty: [Function: bound queuedCommandFn],\n  getElementProperty: [Function: bound queuedCommandFn],\n  getElementRect: [Function: bound queuedCommandFn],\n  getElementSize: [Function: bound queuedCommandFn],\n  getFirstElementChild: [Function: bound queuedCommandFn],\n  getLastElementChild: [Function: bound queuedCommandFn],\n  getLocation: [Function: bound queuedCommandFn],\n  getLocationInView: [Function: bound queuedCommandFn],\n  getNextSibling: [Function: bound queuedCommandFn],\n  getPreviousSibling: [Function: bound queuedCommandFn],\n  getShadowRoot: [Function: bound queuedCommandFn],\n  getTagName: [Function: bound queuedCommandFn],\n  getText: [Function: bound queuedCommandFn],\n  getValue: [Function: bound queuedCommandFn],\n  hasDescendants: [Function: bound queuedCommandFn],\n  isEnabled: [Function: bound queuedCommandFn],\n  isPresent: [Function: bound queuedCommandFn],\n  isSelected: [Function: bound queuedCommandFn],\n  isVisible: [Function: bound queuedCommandFn],\n  moveToElement: [Function: bound queuedCommandFn],\n  rightClick: [Function: bound queuedCommandFn],\n  sendKeys: [Function: bound queuedCommandFn],\n  setAttribute: [Function: bound queuedCommandFn],\n  setPassword: [Function: bound queuedCommandFn],\n  sendKeysRedacted: [Function: bound queuedCommandFn],\n  setValue: [Function: bound queuedCommandFn],\n  submitForm: [Function: bound queuedCommandFn],\n  takeElementScreenshot: [Function: bound queuedCommandFn],\n  updateValue: [Function: bound queuedCommandFn],\n  uploadFile: [Function: bound queuedCommandFn],\n  waitForElementNotPresent: [Function: bound queuedCommandFn],\n  waitForElementNotVisible: [Function: bound queuedCommandFn],\n  waitForElementPresent: [Function: bound queuedCommandFn],\n  waitForElementVisible: [Function: bound queuedCommandFn],\n  angular: { getElementsInList: [Function: bound queuedCommandFn] },\n  strictClick: [Function: bound queuedCommandFn],\n  _axeInjectFunc: [Function: bound queuedCommandFn],\n  mockserver: { create: [Function: bound queuedCommandFn] },\n  supertest: { request: [Function: bound queuedCommandFn] }\n}\" (35ms)","stackTrace":"","fullMsg":"expected NightwatchAPI{ …(193) } to equal 'Amazon.com: Online Shopping for Elect…' - expected \u001b[0;32m\"Amazon.com: Online Shopping for Electronics, Apparel, Computers, Books, DVDs & more\"\u001b[0m but got: \u001b[0;31m\"NightwatchAPI {\n  capabilities: {},\n  currentTest: [Getter],\n  desiredCapabilities: { browserName: 'firefox', name: 'api testing' },\n  sessionId: null,\n  options: {\n    always_async_commands: false,\n    backwards_compatibility_mode: false,\n    baseUrl: 'https://nightwatchjs.org',\n    base_url: 'https://nightwatchjs.org',\n    custom_assertions_path: '',\n    custom_commands_path: [ 'node_modules/nightwatch/examples/custom-commands/' ],\n    default_reporter: [ 'junit', 'json', 'minimalJson', 'html' ],\n    desiredCapabilities: { browserName: 'firefox', name: 'api testing' },\n    detailed_output: true,\n    disable_colors: false,\n    disable_error_log: false,\n    disable_global_apis: false,\n    disable_global_expect: false,\n    disable_output_boxes: false,\n    disable_typescript: false,\n    dotenv: {},\n    element_command_retries: 3,\n    enable_fail_fast: false,\n    enable_v3_element_apis: true,\n    end_session_on_fail: true,\n    exclude: null,\n    filename_format: null,\n    filter: null,\n    folder_format: null,\n    globals: {\n      abortOnAssertionFailure: true,\n      abortOnElementLocateError: false,\n      waitForConditionPollInterval: 500,\n      waitForConditionTimeout: 5000,\n      throwOnMultipleElementsReturned: false,\n      suppressWarningsOnMultipleElementsReturned: true,\n      asyncHookTimeout: 20000,\n      unitTestsTimeout: 2000,\n      customReporterCallbackTimeout: 20000,\n      retryAssertionTimeout: 5000,\n      reuseBrowserSession: false,\n      reporter: [Function: reporter],\n      beforeTestSuite: [Function: beforeTestSuite],\n      afterTestSuite: [Function: afterTestSuite],\n      beforeTestCase: [Function: beforeTestCase],\n      afterTestCase: [Function: afterTestCase],\n      onBrowserNavigate: [Function: onBrowserNavigate],\n      onBrowserQuit: [Function: onBrowserQuit]\n    },\n    globals_path: '',\n    launchUrl: 'https://nightwatchjs.org',\n    launch_url: 'https://nightwatchjs.org',\n    live_output: false,\n    log_screenshot_data: false,\n    minimal_report_file_path: 'tests_output/minimal_report.json',\n    output: true,\n    output_folder: 'tests_output',\n    output_timestamp: false,\n    page_objects_path: [ 'node_modules/nightwatch/examples/pages/' ],\n    parallel_mode: false,\n    parallel_process_delay: 10,\n    persist_globals: false,\n    plugins: [ '@nightwatch/apitesting' ],\n    report_command_errors: false,\n    report_network_errors: true,\n    report_prefix: '',\n    reporter_options: {\n      output_folder: 'tests_output',\n      folder_format: null,\n      filename_format: null,\n      minimal_report_file_path: 'tests_output/minimal_report.json'\n    },\n    screenshots: {\n      enabled: false,\n      filename_format: [Function: filename_format],\n      path: '/home/ender/IdeaProjects/jobs/screens',\n      on_error: true,\n      on_failure: true\n    },\n    screenshotsPath: '/home/ender/IdeaProjects/jobs/screens',\n    selenium: {\n      start_process: false,\n      cli_args: {},\n      server_path: null,\n      log_path: './logs',\n      port: undefined,\n      check_process_delay: 500,\n      max_status_poll_tries: 15,\n      status_poll_interval: 200,\n      url: 'http://localhost:undefined'\n    },\n    silent: true,\n    skip_testcases_on_fail: true,\n    skipgroup: '',\n    skiptags: '',\n    src_folders: [],\n    start_session: false,\n    sync_test_names: true,\n    testEnv: 'api_testing',\n    testWorkersEnabled: false,\n    test_runner: { type: 'default', options: {} },\n    test_settings: {},\n    test_workers: { enabled: true, workers: 'auto' },\n    timestamp_format: '',\n    trace: {\n      enabled: false,\n      path: '',\n      filename_format: [Function: snapshot_file_format]\n    },\n    tsconfig_path: '',\n    unit_testing_mode: false,\n    unit_tests_mode: false,\n    usage_analytics: {\n      enabled: false,\n      log_path: './logs/analytics',\n      client_id: 'bff83f41-2870-4277-a64d-b240e72c288d'\n    },\n    use_child_process: false,\n    use_xpath: false,\n    webdriver: {\n      start_process: false,\n      cli_args: {},\n      server_path: '',\n      log_path: './logs',\n      log_file_name: '',\n      check_process_delay: 100,\n      max_status_poll_tries: 10,\n      status_poll_interval: 200,\n      process_create_timeout: 120000,\n      host: 'localhost',\n      port: 4444,\n      ssl: false,\n      proxy: undefined,\n      timeout_options: [Object],\n      default_path_prefix: '',\n      username: undefined,\n      access_key: undefined,\n      start_session: false,\n      url: 'http://localhost:undefined'\n    },\n    capabilities: { browserName: 'firefox', name: 'api testing' }\n  },\n  globals: {\n    abortOnAssertionFailure: true,\n    abortOnElementLocateError: false,\n    waitForConditionPollInterval: 500,\n    waitForConditionTimeout: 5000,\n    throwOnMultipleElementsReturned: false,\n    suppressWarningsOnMultipleElementsReturned: true,\n    asyncHookTimeout: 20000,\n    unitTestsTimeout: 2000,\n    customReporterCallbackTimeout: 20000,\n    retryAssertionTimeout: 5000,\n    reuseBrowserSession: false,\n    reporter: [Function: reporter],\n    beforeTestSuite: [Function: beforeTestSuite],\n    afterTestSuite: [Function: afterTestSuite],\n    beforeTestCase: [Function: beforeTestCase],\n    afterTestCase: [Function: afterTestCase],\n    onBrowserNavigate: [Function: onBrowserNavigate],\n    onBrowserQuit: [Function: onBrowserQuit]\n  },\n  createElement: [Function (anonymous)],\n  baseUrl: 'https://nightwatchjs.org',\n  launchUrl: 'https://nightwatchjs.org',\n  launch_url: 'https://nightwatchjs.org',\n  page: {\n    google: {\n      consent: [Function: bound pageObjectDefinition],\n      search: [Function: bound pageObjectDefinition],\n      searchResults: [Function: bound pageObjectDefinition]\n    },\n    nightwatchFeatures: [Function: bound pageObjectDefinition]\n  },\n  assert: {\n    fail: [Function: bound assertFn],\n    AssertionError: [Function: bound assertFn],\n    ok: [Function: bound assertFn],\n    equal: [Function: bound assertFn],\n    notEqual: [Function: bound assertFn],\n    deepEqual: [Function: bound assertFn],\n    notDeepEqual: [Function: bound assertFn],\n    deepStrictEqual: [Function: bound assertFn],\n    notDeepStrictEqual: [Function: bound assertFn],\n    strictEqual: [Function: bound assertFn],\n    notStrictEqual: [Function: bound assertFn],\n    throws: [Function: bound assertFn],\n    rejects: [Function: bound assertFn],\n    doesNotThrow: [Function: bound assertFn],\n    doesNotReject: [Function: bound assertFn],\n    ifError: [Function: bound assertFn],\n    match: [Function: bound assertFn],\n    doesNotMatch: [Function: bound assertFn],\n    CallTracker: [Function: bound assertFn],\n    strict: [Function: bound assertFn],\n    attributeContains: [Function: bound queuedCommandFn],\n    attributeEquals: [Function: bound queuedCommandFn],\n    attributeMatches: [Function: bound queuedCommandFn],\n    contains: [Function: bound queuedCommandFn],\n    containsText: [Function: bound queuedCommandFn],\n    cssClassNotPresent: [Function: bound queuedCommandFn],\n    cssClassPresent: [Function: bound queuedCommandFn],\n    cssProperty: [Function: bound queuedCommandFn],\n    domPropertyContains: [Function: bound queuedCommandFn],\n    domPropertyEquals: [Function: bound queuedCommandFn],\n    domPropertyMatches: [Function: bound queuedCommandFn],\n    elementNotPresent: [Function: bound queuedCommandFn],\n    elementPresent: [Function: bound queuedCommandFn],\n    elementsCount: [Function: bound queuedCommandFn],\n    enabled: [Function: bound queuedCommandFn],\n    hasAttribute: [Function: bound queuedCommandFn],\n    hasClass: [Function: bound queuedCommandFn],\n    hasDescendants: [Function: bound queuedCommandFn],\n    hidden: [Function: bound queuedCommandFn],\n    promisedValue: [Function: bound queuedCommandFn],\n    selected: [Function: bound queuedCommandFn],\n    textContains: [Function: bound queuedCommandFn],\n    textEquals: [Function: bound queuedCommandFn],\n    textMatches: [Function: bound queuedCommandFn],\n    title: [Function: bound queuedCommandFn],\n    titleContains: [Function: bound queuedCommandFn],\n    titleEquals: [Function: bound queuedCommandFn],\n    titleMatches: [Function: bound queuedCommandFn],\n    urlContains: [Function: bound queuedCommandFn],\n    urlEquals: [Function: bound queuedCommandFn],\n    urlMatches: [Function: bound queuedCommandFn],\n    value: [Function: bound queuedCommandFn],\n    valueContains: [Function: bound queuedCommandFn],\n    valueEquals: [Function: bound queuedCommandFn],\n    visible: [Function: bound queuedCommandFn]\n  },\n  verify: {\n    attributeContains: [Function: bound queuedCommandFn],\n    attributeEquals: [Function: bound queuedCommandFn],\n    attributeMatches: [Function: bound queuedCommandFn],\n    contains: [Function: bound queuedCommandFn],\n    containsText: [Function: bound queuedCommandFn],\n    cssClassNotPresent: [Function: bound queuedCommandFn],\n    cssClassPresent: [Function: bound queuedCommandFn],\n    cssProperty: [Function: bound queuedCommandFn],\n    domPropertyContains: [Function: bound queuedCommandFn],\n    domPropertyEquals: [Function: bound queuedCommandFn],\n    domPropertyMatches: [Function: bound queuedCommandFn],\n    elementNotPresent: [Function: bound queuedCommandFn],\n    elementPresent: [Function: bound queuedCommandFn],\n    elementsCount: [Function: bound queuedCommandFn],\n    enabled: [Function: bound queuedCommandFn],\n    hasAttribute: [Function: bound queuedCommandFn],\n    hasClass: [Function: bound queuedCommandFn],\n    hasDescendants: [Function: bound queuedCommandFn],\n    hidden: [Function: bound queuedCommandFn],\n    promisedValue: [Function: bound queuedCommandFn],\n    selected: [Function: bound queuedCommandFn],\n    textContains: [Function: bound queuedCommandFn],\n    textEquals: [Function: bound queuedCommandFn],\n    textMatches: [Function: bound queuedCommandFn],\n    title: [Function: bound queuedCommandFn],\n    titleContains: [Function: bound queuedCommandFn],\n    titleEquals: [Function: bound queuedCommandFn],\n    titleMatches: [Function: bound queuedCommandFn],\n    urlContains: [Function: bound queuedCommandFn],\n    urlEquals: [Function: bound queuedCommandFn],\n    urlMatches: [Function: bound queuedCommandFn],\n    value: [Function: bound queuedCommandFn],\n    valueContains: [Function: bound queuedCommandFn],\n    valueEquals: [Function: bound queuedCommandFn],\n    visible: [Function: bound queuedCommandFn]\n  },\n  ensure: {\n    elementTextMatches: [Function: bound assertFn],\n    elementTextContains: [Function: bound assertFn],\n    elementTextIs: [Function: bound assertFn],\n    elementIsNotSelected: [Function: bound assertFn],\n    elementIsSelected: [Function: bound assertFn],\n    elementIsDisabled: [Function: bound assertFn],\n    ableToSwitchToFrame: [Function: bound assertFn],\n    elementIsEnabled: [Function: bound assertFn],\n    elementIsNotVisible: [Function: bound assertFn],\n    elementIsVisible: [Function: bound assertFn],\n    stalenessOf: [Function: bound assertFn],\n    elementsLocated: [Function: bound assertFn],\n    elementLocated: [Function: bound assertFn],\n    urlMatches: [Function: bound assertFn],\n    urlContains: [Function: bound assertFn],\n    urlIs: [Function: bound assertFn],\n    titleMatches: [Function: bound assertFn],\n    titleContains: [Function: bound assertFn],\n    alertIsPresent: [Function: bound assertFn],\n    titleIs: [Function: bound assertFn]\n  },\n  chrome: {\n    launchApp: [Function: bound queuedCommandFn],\n    getNetworkConditions: [Function: bound queuedCommandFn],\n    setNetworkConditions: [Function: bound queuedCommandFn],\n    sendDevToolsCommand: [Function: bound queuedCommandFn],\n    sendAndGetDevToolsCommand: [Function: bound queuedCommandFn],\n    setPermission: [Function: bound queuedCommandFn],\n    setDownloadPath: [Function: bound queuedCommandFn],\n    getCastSinks: [Function: bound queuedCommandFn],\n    setCastSinkToUse: [Function: bound queuedCommandFn],\n    startCastTabMirroring: [Function: bound queuedCommandFn],\n    getCastIssueMessage: [Function: bound queuedCommandFn],\n    stopCasting: [Function: bound queuedCommandFn]\n  },\n  firefox: {\n    getContext: [Function: bound queuedCommandFn],\n    setContext: [Function: bound queuedCommandFn],\n    installAddon: [Function: bound queuedCommandFn],\n    uninstallAddon: [Function: bound queuedCommandFn]\n  },\n  driver: [Getter],\n  actions: [Function (anonymous)],\n  Keys: {\n    NULL: '',\n    CANCEL: '',\n    HELP: '',\n    BACK_SPACE: '',\n    TAB: '',\n    CLEAR: '',\n    RETURN: '',\n    ENTER: '',\n    SHIFT: '',\n    CONTROL: '',\n    ALT: '',\n    PAUSE: '',\n    ESCAPE: '',\n    SPACE: '',\n    PAGE_UP: '',\n    PAGE_DOWN: '',\n    END: '',\n    HOME: '',\n    ARROW_LEFT: '',\n    LEFT: '',\n    ARROW_UP: '',\n    UP: '',\n    ARROW_RIGHT: '',\n    RIGHT: '',\n    ARROW_DOWN: '',\n    DOWN: '',\n    INSERT: '',\n    DELETE: '',\n    SEMICOLON: '',\n    EQUALS: '',\n    NUMPAD0: '',\n    NUMPAD1: '',\n    NUMPAD2: '',\n    NUMPAD3: '',\n    NUMPAD4: '',\n    NUMPAD5: '',\n    NUMPAD6: '',\n    NUMPAD7: '',\n    NUMPAD8: '',\n    NUMPAD9: '',\n    MULTIPLY: '',\n    ADD: '',\n    SEPARATOR: '',\n    SUBTRACT: '',\n    DECIMAL: '',\n    DIVIDE: '',\n    F1: '',\n    F2: '',\n    F3: '',\n    F4: '',\n    F5: '',\n    F6: '',\n    F7: '',\n    F8: '',\n    F9: '',\n    F10: '',\n    F11: '',\n    F12: '',\n    COMMAND: '',\n    META: '',\n    ZENKAKU_HANKAKU: '',\n    chord: [Function (anonymous)]\n  },\n  expect: [Function (anonymous)] {\n    null: [Function: bound queuedCommandFn],\n    active: [Function: bound queuedCommandFn],\n    attribute: [Function: bound queuedCommandFn],\n    css: [Function: bound queuedCommandFn],\n    enabled: [Function: bound queuedCommandFn],\n    present: [Function: bound queuedCommandFn],\n    property: [Function: bound queuedCommandFn],\n    selected: [Function: bound queuedCommandFn],\n    text: [Function: bound queuedCommandFn],\n    type: [Function: bound queuedCommandFn],\n    value: [Function: bound queuedCommandFn],\n    visible: [Function: bound queuedCommandFn],\n    count: [Function: bound queuedCommandFn],\n    component: [Function: bound queuedCommandFn],\n    cookie: [Function: bound queuedCommandFn],\n    element: [Function: bound queuedCommandFn],\n    elements: [Function: bound queuedCommandFn],\n    title: [Function: bound queuedCommandFn],\n    url: [Function: bound queuedCommandFn]\n  },\n  acceptAlert: [Function: bound queuedCommandFn],\n  appium: {\n    getContext: [Function: bound queuedCommandFn],\n    getContexts: [Function: bound queuedCommandFn],\n    getCurrentActivity: [Function: bound queuedCommandFn],\n    getCurrentPackage: [Function: bound queuedCommandFn],\n    getGeolocation: [Function: bound queuedCommandFn],\n    getOrientation: [Function: bound queuedCommandFn],\n    hideKeyboard: [Function: bound queuedCommandFn],\n    isKeyboardShown: [Function: bound queuedCommandFn],\n    longPressKeyCode: [Function: bound queuedCommandFn],\n    pressKeyCode: [Function: bound queuedCommandFn],\n    setContext: [Function: bound queuedCommandFn],\n    setGeolocation: [Function: bound queuedCommandFn],\n    setOrientation: [Function: bound queuedCommandFn],\n    startActivity: [Function: bound queuedCommandFn]\n  },\n  back: [Function: bound queuedCommandFn],\n  closeWindow: [Function: bound queuedCommandFn],\n  contexts: [Function: bound queuedCommandFn],\n  cookie: [Function: bound queuedCommandFn],\n  currentContext: [Function: bound queuedCommandFn],\n  dismissAlert: [Function: bound queuedCommandFn],\n  element: [Function (anonymous)] {\n    findActive: [Function: findActive],\n    getActive: [Function: findActive]\n  },\n  elementActive: [Function: bound queuedCommandFn],\n  elementIdAttribute: [Function: bound queuedCommandFn],\n  elementIdClear: [Function: bound queuedCommandFn],\n  elementIdClick: [Function: bound queuedCommandFn],\n  elementIdCssProperty: [Function: bound queuedCommandFn],\n  elementIdDisplayed: [Function: bound queuedCommandFn],\n  elementIdDoubleClick: [Function: bound queuedCommandFn],\n  elementIdElement: [Function: bound queuedCommandFn],\n  elementIdElements: [Function: bound queuedCommandFn],\n  elementIdEnabled: [Function: bound queuedCommandFn],\n  elementIdEquals: [Function: bound queuedCommandFn],\n  elementIdLocation: [Function: bound queuedCommandFn],\n  elementIdLocationInView: [Function: bound queuedCommandFn],\n  elementIdName: [Function: bound queuedCommandFn],\n  elementIdProperty: [Function: bound queuedCommandFn],\n  elementIdSelected: [Function: bound queuedCommandFn],\n  elementIdSize: [Function: bound queuedCommandFn],\n  elementIdText: [Function: bound queuedCommandFn],\n  elementIdValue: [Function: bound queuedCommandFn],\n  elements: [Function: bound queuedCommandFn],\n  execute: [Function: bound queuedCommandFn],\n  executeScript: [Function: bound queuedCommandFn],\n  executeAsyncScript: [Function: bound queuedCommandFn],\n  executeAsync: [Function: bound queuedCommandFn],\n  forward: [Function: bound queuedCommandFn],\n  frame: [Function: bound queuedCommandFn],\n  frameParent: [Function: bound queuedCommandFn],\n  fullscreenWindow: [Function: bound queuedCommandFn],\n  getAlertText: [Function: bound queuedCommandFn],\n  getCurrentUrl: [Function: bound queuedCommandFn],\n  getOrientation: [Function: bound queuedCommandFn],\n  keys: [Function: bound queuedCommandFn],\n  minimizeWindow: [Function: bound queuedCommandFn],\n  mouseButtonClick: [Function: bound queuedCommandFn],\n  mouseButtonDown: [Function: bound queuedCommandFn],\n  mouseButtonUp: [Function: bound queuedCommandFn],\n  moveTo: [Function: bound queuedCommandFn],\n  navigateTo: [Function: bound queuedCommandFn],\n  openNewWindow: [Function: bound queuedCommandFn],\n  quit: [Function: bound queuedCommandFn],\n  refresh: [Function: bound queuedCommandFn],\n  releaseMouseButton: [Function: bound queuedCommandFn],\n  screenshot: [Function: bound queuedCommandFn],\n  session: [Function: bound queuedCommandFn],\n  sessionLog: [Function: bound queuedCommandFn],\n  sessionLogTypes: [Function: bound queuedCommandFn],\n  sessions: [Function: bound queuedCommandFn],\n  setAlertText: [Function: bound queuedCommandFn],\n  setContext: [Function: bound queuedCommandFn],\n  setOrientation: [Function: bound queuedCommandFn],\n  source: [Function: bound queuedCommandFn],\n  status: [Function: bound queuedCommandFn],\n  submit: [Function: bound queuedCommandFn],\n  switchToWindow: [Function: bound queuedCommandFn],\n  switchWindow: [Function: bound queuedCommandFn],\n  timeouts: [Function: bound queuedCommandFn],\n  timeoutsAsyncScript: [Function: bound queuedCommandFn],\n  timeoutsImplicitWait: [Function: bound queuedCommandFn],\n  title: [Function: bound queuedCommandFn],\n  url: [Function: bound queuedCommandFn],\n  waitUntil: [Function: bound queuedCommandFn],\n  windowHandle: [Function: bound queuedCommandFn],\n  windowHandles: [Function: bound queuedCommandFn],\n  windowMaximize: [Function: bound queuedCommandFn],\n  windowPosition: [Function: bound queuedCommandFn],\n  windowRect: [Function: bound queuedCommandFn],\n  windowSize: [Function: bound queuedCommandFn],\n  alerts: {\n    accept: [Function: bound queuedCommandFn],\n    dismiss: [Function: bound queuedCommandFn],\n    getText: [Function: bound queuedCommandFn],\n    setText: [Function: bound queuedCommandFn]\n  },\n  axeInject: [Function: bound queuedCommandFn],\n  axeRun: [Function: bound queuedCommandFn],\n  captureBrowserConsoleLogs: [Function: bound queuedCommandFn],\n  captureBrowserExceptions: [Function: bound queuedCommandFn],\n  captureNetworkRequests: [Function: bound queuedCommandFn],\n  cookies: {\n    delete: [Function: bound queuedCommandFn],\n    deleteAll: [Function: bound queuedCommandFn],\n    get: [Function: bound queuedCommandFn],\n    getAll: [Function: bound queuedCommandFn],\n    set: [Function: bound queuedCommandFn]\n  },\n  debug: [Function: bound queuedCommandFn],\n  deleteCookie: [Function: bound queuedCommandFn],\n  deleteCookies: [Function: bound queuedCommandFn],\n  document: {\n    injectScript: [Function: bound queuedCommandFn],\n    source: [Function: bound queuedCommandFn],\n    pageSource: [Function: bound queuedCommandFn]\n  },\n  enablePerformanceMetrics: [Function: bound queuedCommandFn],\n  end: [Function: bound queuedCommandFn],\n  getCookie: [Function: bound queuedCommandFn],\n  getCookies: [Function: bound queuedCommandFn],\n  getLog: [Function: bound queuedCommandFn],\n  getLogTypes: [Function: bound queuedCommandFn],\n  getPerformanceMetrics: [Function: bound queuedCommandFn],\n  getTitle: [Function: bound queuedCommandFn],\n  getWindowPosition: [Function: bound queuedCommandFn],\n  getWindowRect: [Function: bound queuedCommandFn],\n  getWindowSize: [Function: bound queuedCommandFn],\n  init: [Function: bound queuedCommandFn],\n  injectScript: [Function: bound queuedCommandFn],\n  isLogAvailable: [Function: bound queuedCommandFn],\n  maximizeWindow: [Function: bound queuedCommandFn],\n  mockNetworkResponse: [Function: bound queuedCommandFn],\n  pageSource: [Function: bound queuedCommandFn],\n  pause: [Function: bound queuedCommandFn],\n  perform: [Function: bound queuedCommandFn],\n  registerBasicAuth: [Function: bound queuedCommandFn],\n  resizeWindow: [Function: bound queuedCommandFn],\n  saveScreenshot: [Function: bound queuedCommandFn],\n  saveSnapshot: [Function: bound queuedCommandFn],\n  setCookie: [Function: bound queuedCommandFn],\n  setDeviceDimensions: [Function: bound queuedCommandFn],\n  setGeolocation: [Function: bound queuedCommandFn],\n  setNetworkConditions: [Function: bound queuedCommandFn],\n  setWindowPosition: [Function: bound queuedCommandFn],\n  setWindowRect: [Function: bound queuedCommandFn],\n  setWindowSize: [Function: bound queuedCommandFn],\n  takeHeapSnapshot: [Function: bound queuedCommandFn],\n  urlHash: [Function: bound queuedCommandFn],\n  useCss: [Function: bound queuedCommandFn],\n  useXpath: [Function: bound queuedCommandFn],\n  window: {\n    close: [Function: bound queuedCommandFn],\n    fullscreen: [Function: bound queuedCommandFn],\n    getAllHandles: [Function: bound queuedCommandFn],\n    getHandle: [Function: bound queuedCommandFn],\n    getPosition: [Function: bound queuedCommandFn],\n    getRect: [Function: bound queuedCommandFn],\n    getSize: [Function: bound queuedCommandFn],\n    maximize: [Function: bound queuedCommandFn],\n    minimize: [Function: bound queuedCommandFn],\n    open: [Function: bound queuedCommandFn],\n    openNew: [Function: bound queuedCommandFn],\n    setPosition: [Function: bound queuedCommandFn],\n    setRect: [Function: bound queuedCommandFn],\n    setSize: [Function: bound queuedCommandFn],\n    resize: [Function: bound queuedCommandFn],\n    switchTo: [Function: bound queuedCommandFn],\n    switch: [Function: bound queuedCommandFn]\n  },\n  within: [Function: bound withinDefinition],\n  clearValue: [Function: bound queuedCommandFn],\n  click: [Function: bound queuedCommandFn],\n  clickAndHold: [Function: bound queuedCommandFn],\n  doubleClick: [Function: bound queuedCommandFn],\n  dragAndDrop: [Function: bound queuedCommandFn],\n  findElement: [Function: bound queuedCommandFn],\n  findElements: [Function: bound queuedCommandFn],\n  getAccessibleName: [Function: bound queuedCommandFn],\n  getAriaRole: [Function: bound queuedCommandFn],\n  getAttribute: [Function: bound queuedCommandFn],\n  getElementAttribute: [Function: bound queuedCommandFn],\n  getCssProperty: [Function: bound queuedCommandFn],\n  getElementProperty: [Function: bound queuedCommandFn],\n  getElementRect: [Function: bound queuedCommandFn],\n  getElementSize: [Function: bound queuedCommandFn],\n  getFirstElementChild: [Function: bound queuedCommandFn],\n  getLastElementChild: [Function: bound queuedCommandFn],\n  getLocation: [Function: bound queuedCommandFn],\n  getLocationInView: [Function: bound queuedCommandFn],\n  getNextSibling: [Function: bound queuedCommandFn],\n  getPreviousSibling: [Function: bound queuedCommandFn],\n  getShadowRoot: [Function: bound queuedCommandFn],\n  getTagName: [Function: bound queuedCommandFn],\n  getText: [Function: bound queuedCommandFn],\n  getValue: [Function: bound queuedCommandFn],\n  hasDescendants: [Function: bound queuedCommandFn],\n  isEnabled: [Function: bound queuedCommandFn],\n  isPresent: [Function: bound queuedCommandFn],\n  isSelected: [Function: bound queuedCommandFn],\n  isVisible: [Function: bound queuedCommandFn],\n  moveToElement: [Function: bound queuedCommandFn],\n  rightClick: [Function: bound queuedCommandFn],\n  sendKeys: [Function: bound queuedCommandFn],\n  setAttribute: [Function: bound queuedCommandFn],\n  setPassword: [Function: bound queuedCommandFn],\n  sendKeysRedacted: [Function: bound queuedCommandFn],\n  setValue: [Function: bound queuedCommandFn],\n  submitForm: [Function: bound queuedCommandFn],\n  takeElementScreenshot: [Function: bound queuedCommandFn],\n  updateValue: [Function: bound queuedCommandFn],\n  uploadFile: [Function: bound queuedCommandFn],\n  waitForElementNotPresent: [Function: bound queuedCommandFn],\n  waitForElementNotVisible: [Function: bound queuedCommandFn],\n  waitForElementPresent: [Function: bound queuedCommandFn],\n  waitForElementVisible: [Function: bound queuedCommandFn],\n  angular: { getElementsInList: [Function: bound queuedCommandFn] },\n  strictClick: [Function: bound queuedCommandFn],\n  _axeInjectFunc: [Function: bound queuedCommandFn],\n  mockserver: { create: [Function: bound queuedCommandFn] },\n  supertest: { request: [Function: bound queuedCommandFn] }\n}\"\u001b[0m \u001b[0;90m(35ms)\u001b[0m","failure":"Expected \"Amazon.com: Online Shopping for Electronics, Apparel, Computers, Books, DVDs & more\" but got: \"Nightwatch API\""}],"commands":[],"passed":0,"errors":0,"failed":1,"skipped":0,"tests":1,"status":"fail","startTimestamp":"Fri, 23 Jun 2023 16:52:35 GMT","httpOutput":[],"steps":[],"stackTrace":"","testcases":{"amazon web testing":{"time":"0.3130","assertions":[{"name":"NightwatchAssertError","message":"expected NightwatchAPI{ …(193) } to equal 'Amazon.com: Online Shopping for Elect…' - expected \"Amazon.com: Online Shopping for Electronics, Apparel, Computers, Books, DVDs & more\" but got: \"NightwatchAPI {\n  capabilities: {},\n  currentTest: [Getter],\n  desiredCapabilities: { browserName: 'firefox', name: 'api testing' },\n  sessionId: null,\n  options: {\n    always_async_commands: false,\n    backwards_compatibility_mode: false,\n    baseUrl: 'https://nightwatchjs.org',\n    base_url: 'https://nightwatchjs.org',\n    custom_assertions_path: '',\n    custom_commands_path: [ 'node_modules/nightwatch/examples/custom-commands/' ],\n    default_reporter: [ 'junit', 'json', 'minimalJson', 'html' ],\n    desiredCapabilities: { browserName: 'firefox', name: 'api testing' },\n    detailed_output: true,\n    disable_colors: false,\n    disable_error_log: false,\n    disable_global_apis: false,\n    disable_global_expect: false,\n    disable_output_boxes: false,\n    disable_typescript: false,\n    dotenv: {},\n    element_command_retries: 3,\n    enable_fail_fast: false,\n    enable_v3_element_apis: true,\n    end_session_on_fail: true,\n    exclude: null,\n    filename_format: null,\n    filter: null,\n    folder_format: null,\n    globals: {\n      abortOnAssertionFailure: true,\n      abortOnElementLocateError: false,\n      waitForConditionPollInterval: 500,\n      waitForConditionTimeout: 5000,\n      throwOnMultipleElementsReturned: false,\n      suppressWarningsOnMultipleElementsReturned: true,\n      asyncHookTimeout: 20000,\n      unitTestsTimeout: 2000,\n      customReporterCallbackTimeout: 20000,\n      retryAssertionTimeout: 5000,\n      reuseBrowserSession: false,\n      reporter: [Function: reporter],\n      beforeTestSuite: [Function: beforeTestSuite],\n      afterTestSuite: [Function: afterTestSuite],\n      beforeTestCase: [Function: beforeTestCase],\n      afterTestCase: [Function: afterTestCase],\n      onBrowserNavigate: [Function: onBrowserNavigate],\n      onBrowserQuit: [Function: onBrowserQuit]\n    },\n    globals_path: '',\n    launchUrl: 'https://nightwatchjs.org',\n    launch_url: 'https://nightwatchjs.org',\n    live_output: false,\n    log_screenshot_data: false,\n    minimal_report_file_path: 'tests_output/minimal_report.json',\n    output: true,\n    output_folder: 'tests_output',\n    output_timestamp: false,\n    page_objects_path: [ 'node_modules/nightwatch/examples/pages/' ],\n    parallel_mode: false,\n    parallel_process_delay: 10,\n    persist_globals: false,\n    plugins: [ '@nightwatch/apitesting' ],\n    report_command_errors: false,\n    report_network_errors: true,\n    report_prefix: '',\n    reporter_options: {\n      output_folder: 'tests_output',\n      folder_format: null,\n      filename_format: null,\n      minimal_report_file_path: 'tests_output/minimal_report.json'\n    },\n    screenshots: {\n      enabled: false,\n      filename_format: [Function: filename_format],\n      path: '/home/ender/IdeaProjects/jobs/screens',\n      on_error: true,\n      on_failure: true\n    },\n    screenshotsPath: '/home/ender/IdeaProjects/jobs/screens',\n    selenium: {\n      start_process: false,\n      cli_args: {},\n      server_path: null,\n      log_path: './logs',\n      port: undefined,\n      check_process_delay: 500,\n      max_status_poll_tries: 15,\n      status_poll_interval: 200,\n      url: 'http://localhost:undefined'\n    },\n    silent: true,\n    skip_testcases_on_fail: true,\n    skipgroup: '',\n    skiptags: '',\n    src_folders: [],\n    start_session: false,\n    sync_test_names: true,\n    testEnv: 'api_testing',\n    testWorkersEnabled: false,\n    test_runner: { type: 'default', options: {} },\n    test_settings: {},\n    test_workers: { enabled: true, workers: 'auto' },\n    timestamp_format: '',\n    trace: {\n      enabled: false,\n      path: '',\n      filename_format: [Function: snapshot_file_format]\n    },\n    tsconfig_path: '',\n    unit_testing_mode: false,\n    unit_tests_mode: false,\n    usage_analytics: {\n      enabled: false,\n      log_path: './logs/analytics',\n      client_id: 'bff83f41-2870-4277-a64d-b240e72c288d'\n    },\n    use_child_process: false,\n    use_xpath: false,\n    webdriver: {\n      start_process: false,\n      cli_args: {},\n      server_path: '',\n      log_path: './logs',\n      log_file_name: '',\n      check_process_delay: 100,\n      max_status_poll_tries: 10,\n      status_poll_interval: 200,\n      process_create_timeout: 120000,\n      host: 'localhost',\n      port: 4444,\n      ssl: false,\n      proxy: undefined,\n      timeout_options: [Object],\n      default_path_prefix: '',\n      username: undefined,\n      access_key: undefined,\n      start_session: false,\n      url: 'http://localhost:undefined'\n    },\n    capabilities: { browserName: 'firefox', name: 'api testing' }\n  },\n  globals: {\n    abortOnAssertionFailure: true,\n    abortOnElementLocateError: false,\n    waitForConditionPollInterval: 500,\n    waitForConditionTimeout: 5000,\n    throwOnMultipleElementsReturned: false,\n    suppressWarningsOnMultipleElementsReturned: true,\n    asyncHookTimeout: 20000,\n    unitTestsTimeout: 2000,\n    customReporterCallbackTimeout: 20000,\n    retryAssertionTimeout: 5000,\n    reuseBrowserSession: false,\n    reporter: [Function: reporter],\n    beforeTestSuite: [Function: beforeTestSuite],\n    afterTestSuite: [Function: afterTestSuite],\n    beforeTestCase: [Function: beforeTestCase],\n    afterTestCase: [Function: afterTestCase],\n    onBrowserNavigate: [Function: onBrowserNavigate],\n    onBrowserQuit: [Function: onBrowserQuit]\n  },\n  createElement: [Function (anonymous)],\n  baseUrl: 'https://nightwatchjs.org',\n  launchUrl: 'https://nightwatchjs.org',\n  launch_url: 'https://nightwatchjs.org',\n  page: {\n    google: {\n      consent: [Function: bound pageObjectDefinition],\n      search: [Function: bound pageObjectDefinition],\n      searchResults: [Function: bound pageObjectDefinition]\n    },\n    nightwatchFeatures: [Function: bound pageObjectDefinition]\n  },\n  assert: {\n    fail: [Function: bound assertFn],\n    AssertionError: [Function: bound assertFn],\n    ok: [Function: bound assertFn],\n    equal: [Function: bound assertFn],\n    notEqual: [Function: bound assertFn],\n    deepEqual: [Function: bound assertFn],\n    notDeepEqual: [Function: bound assertFn],\n    deepStrictEqual: [Function: bound assertFn],\n    notDeepStrictEqual: [Function: bound assertFn],\n    strictEqual: [Function: bound assertFn],\n    notStrictEqual: [Function: bound assertFn],\n    throws: [Function: bound assertFn],\n    rejects: [Function: bound assertFn],\n    doesNotThrow: [Function: bound assertFn],\n    doesNotReject: [Function: bound assertFn],\n    ifError: [Function: bound assertFn],\n    match: [Function: bound assertFn],\n    doesNotMatch: [Function: bound assertFn],\n    CallTracker: [Function: bound assertFn],\n    strict: [Function: bound assertFn],\n    attributeContains: [Function: bound queuedCommandFn],\n    attributeEquals: [Function: bound queuedCommandFn],\n    attributeMatches: [Function: bound queuedCommandFn],\n    contains: [Function: bound queuedCommandFn],\n    containsText: [Function: bound queuedCommandFn],\n    cssClassNotPresent: [Function: bound queuedCommandFn],\n    cssClassPresent: [Function: bound queuedCommandFn],\n    cssProperty: [Function: bound queuedCommandFn],\n    domPropertyContains: [Function: bound queuedCommandFn],\n    domPropertyEquals: [Function: bound queuedCommandFn],\n    domPropertyMatches: [Function: bound queuedCommandFn],\n    elementNotPresent: [Function: bound queuedCommandFn],\n    elementPresent: [Function: bound queuedCommandFn],\n    elementsCount: [Function: bound queuedCommandFn],\n    enabled: [Function: bound queuedCommandFn],\n    hasAttribute: [Function: bound queuedCommandFn],\n    hasClass: [Function: bound queuedCommandFn],\n    hasDescendants: [Function: bound queuedCommandFn],\n    hidden: [Function: bound queuedCommandFn],\n    promisedValue: [Function: bound queuedCommandFn],\n    selected: [Function: bound queuedCommandFn],\n    textContains: [Function: bound queuedCommandFn],\n    textEquals: [Function: bound queuedCommandFn],\n    textMatches: [Function: bound queuedCommandFn],\n    title: [Function: bound queuedCommandFn],\n    titleContains: [Function: bound queuedCommandFn],\n    titleEquals: [Function: bound queuedCommandFn],\n    titleMatches: [Function: bound queuedCommandFn],\n    urlContains: [Function: bound queuedCommandFn],\n    urlEquals: [Function: bound queuedCommandFn],\n    urlMatches: [Function: bound queuedCommandFn],\n    value: [Function: bound queuedCommandFn],\n    valueContains: [Function: bound queuedCommandFn],\n    valueEquals: [Function: bound queuedCommandFn],\n    visible: [Function: bound queuedCommandFn]\n  },\n  verify: {\n    attributeContains: [Function: bound queuedCommandFn],\n    attributeEquals: [Function: bound queuedCommandFn],\n    attributeMatches: [Function: bound queuedCommandFn],\n    contains: [Function: bound queuedCommandFn],\n    containsText: [Function: bound queuedCommandFn],\n    cssClassNotPresent: [Function: bound queuedCommandFn],\n    cssClassPresent: [Function: bound queuedCommandFn],\n    cssProperty: [Function: bound queuedCommandFn],\n    domPropertyContains: [Function: bound queuedCommandFn],\n    domPropertyEquals: [Function: bound queuedCommandFn],\n    domPropertyMatches: [Function: bound queuedCommandFn],\n    elementNotPresent: [Function: bound queuedCommandFn],\n    elementPresent: [Function: bound queuedCommandFn],\n    elementsCount: [Function: bound queuedCommandFn],\n    enabled: [Function: bound queuedCommandFn],\n    hasAttribute: [Function: bound queuedCommandFn],\n    hasClass: [Function: bound queuedCommandFn],\n    hasDescendants: [Function: bound queuedCommandFn],\n    hidden: [Function: bound queuedCommandFn],\n    promisedValue: [Function: bound queuedCommandFn],\n    selected: [Function: bound queuedCommandFn],\n    textContains: [Function: bound queuedCommandFn],\n    textEquals: [Function: bound queuedCommandFn],\n    textMatches: [Function: bound queuedCommandFn],\n    title: [Function: bound queuedCommandFn],\n    titleContains: [Function: bound queuedCommandFn],\n    titleEquals: [Function: bound queuedCommandFn],\n    titleMatches: [Function: bound queuedCommandFn],\n    urlContains: [Function: bound queuedCommandFn],\n    urlEquals: [Function: bound queuedCommandFn],\n    urlMatches: [Function: bound queuedCommandFn],\n    value: [Function: bound queuedCommandFn],\n    valueContains: [Function: bound queuedCommandFn],\n    valueEquals: [Function: bound queuedCommandFn],\n    visible: [Function: bound queuedCommandFn]\n  },\n  ensure: {\n    elementTextMatches: [Function: bound assertFn],\n    elementTextContains: [Function: bound assertFn],\n    elementTextIs: [Function: bound assertFn],\n    elementIsNotSelected: [Function: bound assertFn],\n    elementIsSelected: [Function: bound assertFn],\n    elementIsDisabled: [Function: bound assertFn],\n    ableToSwitchToFrame: [Function: bound assertFn],\n    elementIsEnabled: [Function: bound assertFn],\n    elementIsNotVisible: [Function: bound assertFn],\n    elementIsVisible: [Function: bound assertFn],\n    stalenessOf: [Function: bound assertFn],\n    elementsLocated: [Function: bound assertFn],\n    elementLocated: [Function: bound assertFn],\n    urlMatches: [Function: bound assertFn],\n    urlContains: [Function: bound assertFn],\n    urlIs: [Function: bound assertFn],\n    titleMatches: [Function: bound assertFn],\n    titleContains: [Function: bound assertFn],\n    alertIsPresent: [Function: bound assertFn],\n    titleIs: [Function: bound assertFn]\n  },\n  chrome: {\n    launchApp: [Function: bound queuedCommandFn],\n    getNetworkConditions: [Function: bound queuedCommandFn],\n    setNetworkConditions: [Function: bound queuedCommandFn],\n    sendDevToolsCommand: [Function: bound queuedCommandFn],\n    sendAndGetDevToolsCommand: [Function: bound queuedCommandFn],\n    setPermission: [Function: bound queuedCommandFn],\n    setDownloadPath: [Function: bound queuedCommandFn],\n    getCastSinks: [Function: bound queuedCommandFn],\n    setCastSinkToUse: [Function: bound queuedCommandFn],\n    startCastTabMirroring: [Function: bound queuedCommandFn],\n    getCastIssueMessage: [Function: bound queuedCommandFn],\n    stopCasting: [Function: bound queuedCommandFn]\n  },\n  firefox: {\n    getContext: [Function: bound queuedCommandFn],\n    setContext: [Function: bound queuedCommandFn],\n    installAddon: [Function: bound queuedCommandFn],\n    uninstallAddon: [Function: bound queuedCommandFn]\n  },\n  driver: [Getter],\n  actions: [Function (anonymous)],\n  Keys: {\n    NULL: '',\n    CANCEL: '',\n    HELP: '',\n    BACK_SPACE: '',\n    TAB: '',\n    CLEAR: '',\n    RETURN: '',\n    ENTER: '',\n    SHIFT: '',\n    CONTROL: '',\n    ALT: '',\n    PAUSE: '',\n    ESCAPE: '',\n    SPACE: '',\n    PAGE_UP: '',\n    PAGE_DOWN: '',\n    END: '',\n    HOME: '',\n    ARROW_LEFT: '',\n    LEFT: '',\n    ARROW_UP: '',\n    UP: '',\n    ARROW_RIGHT: '',\n    RIGHT: '',\n    ARROW_DOWN: '',\n    DOWN: '',\n    INSERT: '',\n    DELETE: '',\n    SEMICOLON: '',\n    EQUALS: '',\n    NUMPAD0: '',\n    NUMPAD1: '',\n    NUMPAD2: '',\n    NUMPAD3: '',\n    NUMPAD4: '',\n    NUMPAD5: '',\n    NUMPAD6: '',\n    NUMPAD7: '',\n    NUMPAD8: '',\n    NUMPAD9: '',\n    MULTIPLY: '',\n    ADD: '',\n    SEPARATOR: '',\n    SUBTRACT: '',\n    DECIMAL: '',\n    DIVIDE: '',\n    F1: '',\n    F2: '',\n    F3: '',\n    F4: '',\n    F5: '',\n    F6: '',\n    F7: '',\n    F8: '',\n    F9: '',\n    F10: '',\n    F11: '',\n    F12: '',\n    COMMAND: '',\n    META: '',\n    ZENKAKU_HANKAKU: '',\n    chord: [Function (anonymous)]\n  },\n  expect: [Function (anonymous)] {\n    null: [Function: bound queuedCommandFn],\n    active: [Function: bound queuedCommandFn],\n    attribute: [Function: bound queuedCommandFn],\n    css: [Function: bound queuedCommandFn],\n    enabled: [Function: bound queuedCommandFn],\n    present: [Function: bound queuedCommandFn],\n    property: [Function: bound queuedCommandFn],\n    selected: [Function: bound queuedCommandFn],\n    text: [Function: bound queuedCommandFn],\n    type: [Function: bound queuedCommandFn],\n    value: [Function: bound queuedCommandFn],\n    visible: [Function: bound queuedCommandFn],\n    count: [Function: bound queuedCommandFn],\n    component: [Function: bound queuedCommandFn],\n    cookie: [Function: bound queuedCommandFn],\n    element: [Function: bound queuedCommandFn],\n    elements: [Function: bound queuedCommandFn],\n    title: [Function: bound queuedCommandFn],\n    url: [Function: bound queuedCommandFn]\n  },\n  acceptAlert: [Function: bound queuedCommandFn],\n  appium: {\n    getContext: [Function: bound queuedCommandFn],\n    getContexts: [Function: bound queuedCommandFn],\n    getCurrentActivity: [Function: bound queuedCommandFn],\n    getCurrentPackage: [Function: bound queuedCommandFn],\n    getGeolocation: [Function: bound queuedCommandFn],\n    getOrientation: [Function: bound queuedCommandFn],\n    hideKeyboard: [Function: bound queuedCommandFn],\n    isKeyboardShown: [Function: bound queuedCommandFn],\n    longPressKeyCode: [Function: bound queuedCommandFn],\n    pressKeyCode: [Function: bound queuedCommandFn],\n    setContext: [Function: bound queuedCommandFn],\n    setGeolocation: [Function: bound queuedCommandFn],\n    setOrientation: [Function: bound queuedCommandFn],\n    startActivity: [Function: bound queuedCommandFn]\n  },\n  back: [Function: bound queuedCommandFn],\n  closeWindow: [Function: bound queuedCommandFn],\n  contexts: [Function: bound queuedCommandFn],\n  cookie: [Function: bound queuedCommandFn],\n  currentContext: [Function: bound queuedCommandFn],\n  dismissAlert: [Function: bound queuedCommandFn],\n  element: [Function (anonymous)] {\n    findActive: [Function: findActive],\n    getActive: [Function: findActive]\n  },\n  elementActive: [Function: bound queuedCommandFn],\n  elementIdAttribute: [Function: bound queuedCommandFn],\n  elementIdClear: [Function: bound queuedCommandFn],\n  elementIdClick: [Function: bound queuedCommandFn],\n  elementIdCssProperty: [Function: bound queuedCommandFn],\n  elementIdDisplayed: [Function: bound queuedCommandFn],\n  elementIdDoubleClick: [Function: bound queuedCommandFn],\n  elementIdElement: [Function: bound queuedCommandFn],\n  elementIdElements: [Function: bound queuedCommandFn],\n  elementIdEnabled: [Function: bound queuedCommandFn],\n  elementIdEquals: [Function: bound queuedCommandFn],\n  elementIdLocation: [Function: bound queuedCommandFn],\n  elementIdLocationInView: [Function: bound queuedCommandFn],\n  elementIdName: [Function: bound queuedCommandFn],\n  elementIdProperty: [Function: bound queuedCommandFn],\n  elementIdSelected: [Function: bound queuedCommandFn],\n  elementIdSize: [Function: bound queuedCommandFn],\n  elementIdText: [Function: bound queuedCommandFn],\n  elementIdValue: [Function: bound queuedCommandFn],\n  elements: [Function: bound queuedCommandFn],\n  execute: [Function: bound queuedCommandFn],\n  executeScript: [Function: bound queuedCommandFn],\n  executeAsyncScript: [Function: bound queuedCommandFn],\n  executeAsync: [Function: bound queuedCommandFn],\n  forward: [Function: bound queuedCommandFn],\n  frame: [Function: bound queuedCommandFn],\n  frameParent: [Function: bound queuedCommandFn],\n  fullscreenWindow: [Function: bound queuedCommandFn],\n  getAlertText: [Function: bound queuedCommandFn],\n  getCurrentUrl: [Function: bound queuedCommandFn],\n  getOrientation: [Function: bound queuedCommandFn],\n  keys: [Function: bound queuedCommandFn],\n  minimizeWindow: [Function: bound queuedCommandFn],\n  mouseButtonClick: [Function: bound queuedCommandFn],\n  mouseButtonDown: [Function: bound queuedCommandFn],\n  mouseButtonUp: [Function: bound queuedCommandFn],\n  moveTo: [Function: bound queuedCommandFn],\n  navigateTo: [Function: bound queuedCommandFn],\n  openNewWindow: [Function: bound queuedCommandFn],\n  quit: [Function: bound queuedCommandFn],\n  refresh: [Function: bound queuedCommandFn],\n  releaseMouseButton: [Function: bound queuedCommandFn],\n  screenshot: [Function: bound queuedCommandFn],\n  session: [Function: bound queuedCommandFn],\n  sessionLog: [Function: bound queuedCommandFn],\n  sessionLogTypes: [Function: bound queuedCommandFn],\n  sessions: [Function: bound queuedCommandFn],\n  setAlertText: [Function: bound queuedCommandFn],\n  setContext: [Function: bound queuedCommandFn],\n  setOrientation: [Function: bound queuedCommandFn],\n  source: [Function: bound queuedCommandFn],\n  status: [Function: bound queuedCommandFn],\n  submit: [Function: bound queuedCommandFn],\n  switchToWindow: [Function: bound queuedCommandFn],\n  switchWindow: [Function: bound queuedCommandFn],\n  timeouts: [Function: bound queuedCommandFn],\n  timeoutsAsyncScript: [Function: bound queuedCommandFn],\n  timeoutsImplicitWait: [Function: bound queuedCommandFn],\n  title: [Function: bound queuedCommandFn],\n  url: [Function: bound queuedCommandFn],\n  waitUntil: [Function: bound queuedCommandFn],\n  windowHandle: [Function: bound queuedCommandFn],\n  windowHandles: [Function: bound queuedCommandFn],\n  windowMaximize: [Function: bound queuedCommandFn],\n  windowPosition: [Function: bound queuedCommandFn],\n  windowRect: [Function: bound queuedCommandFn],\n  windowSize: [Function: bound queuedCommandFn],\n  alerts: {\n    accept: [Function: bound queuedCommandFn],\n    dismiss: [Function: bound queuedCommandFn],\n    getText: [Function: bound queuedCommandFn],\n    setText: [Function: bound queuedCommandFn]\n  },\n  axeInject: [Function: bound queuedCommandFn],\n  axeRun: [Function: bound queuedCommandFn],\n  captureBrowserConsoleLogs: [Function: bound queuedCommandFn],\n  captureBrowserExceptions: [Function: bound queuedCommandFn],\n  captureNetworkRequests: [Function: bound queuedCommandFn],\n  cookies: {\n    delete: [Function: bound queuedCommandFn],\n    deleteAll: [Function: bound queuedCommandFn],\n    get: [Function: bound queuedCommandFn],\n    getAll: [Function: bound queuedCommandFn],\n    set: [Function: bound queuedCommandFn]\n  },\n  debug: [Function: bound queuedCommandFn],\n  deleteCookie: [Function: bound queuedCommandFn],\n  deleteCookies: [Function: bound queuedCommandFn],\n  document: {\n    injectScript: [Function: bound queuedCommandFn],\n    source: [Function: bound queuedCommandFn],\n    pageSource: [Function: bound queuedCommandFn]\n  },\n  enablePerformanceMetrics: [Function: bound queuedCommandFn],\n  end: [Function: bound queuedCommandFn],\n  getCookie: [Function: bound queuedCommandFn],\n  getCookies: [Function: bound queuedCommandFn],\n  getLog: [Function: bound queuedCommandFn],\n  getLogTypes: [Function: bound queuedCommandFn],\n  getPerformanceMetrics: [Function: bound queuedCommandFn],\n  getTitle: [Function: bound queuedCommandFn],\n  getWindowPosition: [Function: bound queuedCommandFn],\n  getWindowRect: [Function: bound queuedCommandFn],\n  getWindowSize: [Function: bound queuedCommandFn],\n  init: [Function: bound queuedCommandFn],\n  injectScript: [Function: bound queuedCommandFn],\n  isLogAvailable: [Function: bound queuedCommandFn],\n  maximizeWindow: [Function: bound queuedCommandFn],\n  mockNetworkResponse: [Function: bound queuedCommandFn],\n  pageSource: [Function: bound queuedCommandFn],\n  pause: [Function: bound queuedCommandFn],\n  perform: [Function: bound queuedCommandFn],\n  registerBasicAuth: [Function: bound queuedCommandFn],\n  resizeWindow: [Function: bound queuedCommandFn],\n  saveScreenshot: [Function: bound queuedCommandFn],\n  saveSnapshot: [Function: bound queuedCommandFn],\n  setCookie: [Function: bound queuedCommandFn],\n  setDeviceDimensions: [Function: bound queuedCommandFn],\n  setGeolocation: [Function: bound queuedCommandFn],\n  setNetworkConditions: [Function: bound queuedCommandFn],\n  setWindowPosition: [Function: bound queuedCommandFn],\n  setWindowRect: [Function: bound queuedCommandFn],\n  setWindowSize: [Function: bound queuedCommandFn],\n  takeHeapSnapshot: [Function: bound queuedCommandFn],\n  urlHash: [Function: bound queuedCommandFn],\n  useCss: [Function: bound queuedCommandFn],\n  useXpath: [Function: bound queuedCommandFn],\n  window: {\n    close: [Function: bound queuedCommandFn],\n    fullscreen: [Function: bound queuedCommandFn],\n    getAllHandles: [Function: bound queuedCommandFn],\n    getHandle: [Function: bound queuedCommandFn],\n    getPosition: [Function: bound queuedCommandFn],\n    getRect: [Function: bound queuedCommandFn],\n    getSize: [Function: bound queuedCommandFn],\n    maximize: [Function: bound queuedCommandFn],\n    minimize: [Function: bound queuedCommandFn],\n    open: [Function: bound queuedCommandFn],\n    openNew: [Function: bound queuedCommandFn],\n    setPosition: [Function: bound queuedCommandFn],\n    setRect: [Function: bound queuedCommandFn],\n    setSize: [Function: bound queuedCommandFn],\n    resize: [Function: bound queuedCommandFn],\n    switchTo: [Function: bound queuedCommandFn],\n    switch: [Function: bound queuedCommandFn]\n  },\n  within: [Function: bound withinDefinition],\n  clearValue: [Function: bound queuedCommandFn],\n  click: [Function: bound queuedCommandFn],\n  clickAndHold: [Function: bound queuedCommandFn],\n  doubleClick: [Function: bound queuedCommandFn],\n  dragAndDrop: [Function: bound queuedCommandFn],\n  findElement: [Function: bound queuedCommandFn],\n  findElements: [Function: bound queuedCommandFn],\n  getAccessibleName: [Function: bound queuedCommandFn],\n  getAriaRole: [Function: bound queuedCommandFn],\n  getAttribute: [Function: bound queuedCommandFn],\n  getElementAttribute: [Function: bound queuedCommandFn],\n  getCssProperty: [Function: bound queuedCommandFn],\n  getElementProperty: [Function: bound queuedCommandFn],\n  getElementRect: [Function: bound queuedCommandFn],\n  getElementSize: [Function: bound queuedCommandFn],\n  getFirstElementChild: [Function: bound queuedCommandFn],\n  getLastElementChild: [Function: bound queuedCommandFn],\n  getLocation: [Function: bound queuedCommandFn],\n  getLocationInView: [Function: bound queuedCommandFn],\n  getNextSibling: [Function: bound queuedCommandFn],\n  getPreviousSibling: [Function: bound queuedCommandFn],\n  getShadowRoot: [Function: bound queuedCommandFn],\n  getTagName: [Function: bound queuedCommandFn],\n  getText: [Function: bound queuedCommandFn],\n  getValue: [Function: bound queuedCommandFn],\n  hasDescendants: [Function: bound queuedCommandFn],\n  isEnabled: [Function: bound queuedCommandFn],\n  isPresent: [Function: bound queuedCommandFn],\n  isSelected: [Function: bound queuedCommandFn],\n  isVisible: [Function: bound queuedCommandFn],\n  moveToElement: [Function: bound queuedCommandFn],\n  rightClick: [Function: bound queuedCommandFn],\n  sendKeys: [Function: bound queuedCommandFn],\n  setAttribute: [Function: bound queuedCommandFn],\n  setPassword: [Function: bound queuedCommandFn],\n  sendKeysRedacted: [Function: bound queuedCommandFn],\n  setValue: [Function: bound queuedCommandFn],\n  submitForm: [Function: bound queuedCommandFn],\n  takeElementScreenshot: [Function: bound queuedCommandFn],\n  updateValue: [Function: bound queuedCommandFn],\n  uploadFile: [Function: bound queuedCommandFn],\n  waitForElementNotPresent: [Function: bound queuedCommandFn],\n  waitForElementNotVisible: [Function: bound queuedCommandFn],\n  waitForElementPresent: [Function: bound queuedCommandFn],\n  waitForElementVisible: [Function: bound queuedCommandFn],\n  angular: { getElementsInList: [Function: bound queuedCommandFn] },\n  strictClick: [Function: bound queuedCommandFn],\n  _axeInjectFunc: [Function: bound queuedCommandFn],\n  mockserver: { create: [Function: bound queuedCommandFn] },\n  supertest: { request: [Function: bound queuedCommandFn] }\n}\" (35ms)","stackTrace":"","fullMsg":"expected NightwatchAPI{ …(193) } to equal 'Amazon.com: Online Shopping for Elect…' - expected \u001b[0;32m\"Amazon.com: Online Shopping for Electronics, Apparel, Computers, Books, DVDs & more\"\u001b[0m but got: \u001b[0;31m\"NightwatchAPI {\n  capabilities: {},\n  currentTest: [Getter],\n  desiredCapabilities: { browserName: 'firefox', name: 'api testing' },\n  sessionId: null,\n  options: {\n    always_async_commands: false,\n    backwards_compatibility_mode: false,\n    baseUrl: 'https://nightwatchjs.org',\n    base_url: 'https://nightwatchjs.org',\n    custom_assertions_path: '',\n    custom_commands_path: [ 'node_modules/nightwatch/examples/custom-commands/' ],\n    default_reporter: [ 'junit', 'json', 'minimalJson', 'html' ],\n    desiredCapabilities: { browserName: 'firefox', name: 'api testing' },\n    detailed_output: true,\n    disable_colors: false,\n    disable_error_log: false,\n    disable_global_apis: false,\n    disable_global_expect: false,\n    disable_output_boxes: false,\n    disable_typescript: false,\n    dotenv: {},\n    element_command_retries: 3,\n    enable_fail_fast: false,\n    enable_v3_element_apis: true,\n    end_session_on_fail: true,\n    exclude: null,\n    filename_format: null,\n    filter: null,\n    folder_format: null,\n    globals: {\n      abortOnAssertionFailure: true,\n      abortOnElementLocateError: false,\n      waitForConditionPollInterval: 500,\n      waitForConditionTimeout: 5000,\n      throwOnMultipleElementsReturned: false,\n      suppressWarningsOnMultipleElementsReturned: true,\n      asyncHookTimeout: 20000,\n      unitTestsTimeout: 2000,\n      customReporterCallbackTimeout: 20000,\n      retryAssertionTimeout: 5000,\n      reuseBrowserSession: false,\n      reporter: [Function: reporter],\n      beforeTestSuite: [Function: beforeTestSuite],\n      afterTestSuite: [Function: afterTestSuite],\n      beforeTestCase: [Function: beforeTestCase],\n      afterTestCase: [Function: afterTestCase],\n      onBrowserNavigate: [Function: onBrowserNavigate],\n      onBrowserQuit: [Function: onBrowserQuit]\n    },\n    globals_path: '',\n    launchUrl: 'https://nightwatchjs.org',\n    launch_url: 'https://nightwatchjs.org',\n    live_output: false,\n    log_screenshot_data: false,\n    minimal_report_file_path: 'tests_output/minimal_report.json',\n    output: true,\n    output_folder: 'tests_output',\n    output_timestamp: false,\n    page_objects_path: [ 'node_modules/nightwatch/examples/pages/' ],\n    parallel_mode: false,\n    parallel_process_delay: 10,\n    persist_globals: false,\n    plugins: [ '@nightwatch/apitesting' ],\n    report_command_errors: false,\n    report_network_errors: true,\n    report_prefix: '',\n    reporter_options: {\n      output_folder: 'tests_output',\n      folder_format: null,\n      filename_format: null,\n      minimal_report_file_path: 'tests_output/minimal_report.json'\n    },\n    screenshots: {\n      enabled: false,\n      filename_format: [Function: filename_format],\n      path: '/home/ender/IdeaProjects/jobs/screens',\n      on_error: true,\n      on_failure: true\n    },\n    screenshotsPath: '/home/ender/IdeaProjects/jobs/screens',\n    selenium: {\n      start_process: false,\n      cli_args: {},\n      server_path: null,\n      log_path: './logs',\n      port: undefined,\n      check_process_delay: 500,\n      max_status_poll_tries: 15,\n      status_poll_interval: 200,\n      url: 'http://localhost:undefined'\n    },\n    silent: true,\n    skip_testcases_on_fail: true,\n    skipgroup: '',\n    skiptags: '',\n    src_folders: [],\n    start_session: false,\n    sync_test_names: true,\n    testEnv: 'api_testing',\n    testWorkersEnabled: false,\n    test_runner: { type: 'default', options: {} },\n    test_settings: {},\n    test_workers: { enabled: true, workers: 'auto' },\n    timestamp_format: '',\n    trace: {\n      enabled: false,\n      path: '',\n      filename_format: [Function: snapshot_file_format]\n    },\n    tsconfig_path: '',\n    unit_testing_mode: false,\n    unit_tests_mode: false,\n    usage_analytics: {\n      enabled: false,\n      log_path: './logs/analytics',\n      client_id: 'bff83f41-2870-4277-a64d-b240e72c288d'\n    },\n    use_child_process: false,\n    use_xpath: false,\n    webdriver: {\n      start_process: false,\n      cli_args: {},\n      server_path: '',\n      log_path: './logs',\n      log_file_name: '',\n      check_process_delay: 100,\n      max_status_poll_tries: 10,\n      status_poll_interval: 200,\n      process_create_timeout: 120000,\n      host: 'localhost',\n      port: 4444,\n      ssl: false,\n      proxy: undefined,\n      timeout_options: [Object],\n      default_path_prefix: '',\n      username: undefined,\n      access_key: undefined,\n      start_session: false,\n      url: 'http://localhost:undefined'\n    },\n    capabilities: { browserName: 'firefox', name: 'api testing' }\n  },\n  globals: {\n    abortOnAssertionFailure: true,\n    abortOnElementLocateError: false,\n    waitForConditionPollInterval: 500,\n    waitForConditionTimeout: 5000,\n    throwOnMultipleElementsReturned: false,\n    suppressWarningsOnMultipleElementsReturned: true,\n    asyncHookTimeout: 20000,\n    unitTestsTimeout: 2000,\n    customReporterCallbackTimeout: 20000,\n    retryAssertionTimeout: 5000,\n    reuseBrowserSession: false,\n    reporter: [Function: reporter],\n    beforeTestSuite: [Function: beforeTestSuite],\n    afterTestSuite: [Function: afterTestSuite],\n    beforeTestCase: [Function: beforeTestCase],\n    afterTestCase: [Function: afterTestCase],\n    onBrowserNavigate: [Function: onBrowserNavigate],\n    onBrowserQuit: [Function: onBrowserQuit]\n  },\n  createElement: [Function (anonymous)],\n  baseUrl: 'https://nightwatchjs.org',\n  launchUrl: 'https://nightwatchjs.org',\n  launch_url: 'https://nightwatchjs.org',\n  page: {\n    google: {\n      consent: [Function: bound pageObjectDefinition],\n      search: [Function: bound pageObjectDefinition],\n      searchResults: [Function: bound pageObjectDefinition]\n    },\n    nightwatchFeatures: [Function: bound pageObjectDefinition]\n  },\n  assert: {\n    fail: [Function: bound assertFn],\n    AssertionError: [Function: bound assertFn],\n    ok: [Function: bound assertFn],\n    equal: [Function: bound assertFn],\n    notEqual: [Function: bound assertFn],\n    deepEqual: [Function: bound assertFn],\n    notDeepEqual: [Function: bound assertFn],\n    deepStrictEqual: [Function: bound assertFn],\n    notDeepStrictEqual: [Function: bound assertFn],\n    strictEqual: [Function: bound assertFn],\n    notStrictEqual: [Function: bound assertFn],\n    throws: [Function: bound assertFn],\n    rejects: [Function: bound assertFn],\n    doesNotThrow: [Function: bound assertFn],\n    doesNotReject: [Function: bound assertFn],\n    ifError: [Function: bound assertFn],\n    match: [Function: bound assertFn],\n    doesNotMatch: [Function: bound assertFn],\n    CallTracker: [Function: bound assertFn],\n    strict: [Function: bound assertFn],\n    attributeContains: [Function: bound queuedCommandFn],\n    attributeEquals: [Function: bound queuedCommandFn],\n    attributeMatches: [Function: bound queuedCommandFn],\n    contains: [Function: bound queuedCommandFn],\n    containsText: [Function: bound queuedCommandFn],\n    cssClassNotPresent: [Function: bound queuedCommandFn],\n    cssClassPresent: [Function: bound queuedCommandFn],\n    cssProperty: [Function: bound queuedCommandFn],\n    domPropertyContains: [Function: bound queuedCommandFn],\n    domPropertyEquals: [Function: bound queuedCommandFn],\n    domPropertyMatches: [Function: bound queuedCommandFn],\n    elementNotPresent: [Function: bound queuedCommandFn],\n    elementPresent: [Function: bound queuedCommandFn],\n    elementsCount: [Function: bound queuedCommandFn],\n    enabled: [Function: bound queuedCommandFn],\n    hasAttribute: [Function: bound queuedCommandFn],\n    hasClass: [Function: bound queuedCommandFn],\n    hasDescendants: [Function: bound queuedCommandFn],\n    hidden: [Function: bound queuedCommandFn],\n    promisedValue: [Function: bound queuedCommandFn],\n    selected: [Function: bound queuedCommandFn],\n    textContains: [Function: bound queuedCommandFn],\n    textEquals: [Function: bound queuedCommandFn],\n    textMatches: [Function: bound queuedCommandFn],\n    title: [Function: bound queuedCommandFn],\n    titleContains: [Function: bound queuedCommandFn],\n    titleEquals: [Function: bound queuedCommandFn],\n    titleMatches: [Function: bound queuedCommandFn],\n    urlContains: [Function: bound queuedCommandFn],\n    urlEquals: [Function: bound queuedCommandFn],\n    urlMatches: [Function: bound queuedCommandFn],\n    value: [Function: bound queuedCommandFn],\n    valueContains: [Function: bound queuedCommandFn],\n    valueEquals: [Function: bound queuedCommandFn],\n    visible: [Function: bound queuedCommandFn]\n  },\n  verify: {\n    attributeContains: [Function: bound queuedCommandFn],\n    attributeEquals: [Function: bound queuedCommandFn],\n    attributeMatches: [Function: bound queuedCommandFn],\n    contains: [Function: bound queuedCommandFn],\n    containsText: [Function: bound queuedCommandFn],\n    cssClassNotPresent: [Function: bound queuedCommandFn],\n    cssClassPresent: [Function: bound queuedCommandFn],\n    cssProperty: [Function: bound queuedCommandFn],\n    domPropertyContains: [Function: bound queuedCommandFn],\n    domPropertyEquals: [Function: bound queuedCommandFn],\n    domPropertyMatches: [Function: bound queuedCommandFn],\n    elementNotPresent: [Function: bound queuedCommandFn],\n    elementPresent: [Function: bound queuedCommandFn],\n    elementsCount: [Function: bound queuedCommandFn],\n    enabled: [Function: bound queuedCommandFn],\n    hasAttribute: [Function: bound queuedCommandFn],\n    hasClass: [Function: bound queuedCommandFn],\n    hasDescendants: [Function: bound queuedCommandFn],\n    hidden: [Function: bound queuedCommandFn],\n    promisedValue: [Function: bound queuedCommandFn],\n    selected: [Function: bound queuedCommandFn],\n    textContains: [Function: bound queuedCommandFn],\n    textEquals: [Function: bound queuedCommandFn],\n    textMatches: [Function: bound queuedCommandFn],\n    title: [Function: bound queuedCommandFn],\n    titleContains: [Function: bound queuedCommandFn],\n    titleEquals: [Function: bound queuedCommandFn],\n    titleMatches: [Function: bound queuedCommandFn],\n    urlContains: [Function: bound queuedCommandFn],\n    urlEquals: [Function: bound queuedCommandFn],\n    urlMatches: [Function: bound queuedCommandFn],\n    value: [Function: bound queuedCommandFn],\n    valueContains: [Function: bound queuedCommandFn],\n    valueEquals: [Function: bound queuedCommandFn],\n    visible: [Function: bound queuedCommandFn]\n  },\n  ensure: {\n    elementTextMatches: [Function: bound assertFn],\n    elementTextContains: [Function: bound assertFn],\n    elementTextIs: [Function: bound assertFn],\n    elementIsNotSelected: [Function: bound assertFn],\n    elementIsSelected: [Function: bound assertFn],\n    elementIsDisabled: [Function: bound assertFn],\n    ableToSwitchToFrame: [Function: bound assertFn],\n    elementIsEnabled: [Function: bound assertFn],\n    elementIsNotVisible: [Function: bound assertFn],\n    elementIsVisible: [Function: bound assertFn],\n    stalenessOf: [Function: bound assertFn],\n    elementsLocated: [Function: bound assertFn],\n    elementLocated: [Function: bound assertFn],\n    urlMatches: [Function: bound assertFn],\n    urlContains: [Function: bound assertFn],\n    urlIs: [Function: bound assertFn],\n    titleMatches: [Function: bound assertFn],\n    titleContains: [Function: bound assertFn],\n    alertIsPresent: [Function: bound assertFn],\n    titleIs: [Function: bound assertFn]\n  },\n  chrome: {\n    launchApp: [Function: bound queuedCommandFn],\n    getNetworkConditions: [Function: bound queuedCommandFn],\n    setNetworkConditions: [Function: bound queuedCommandFn],\n    sendDevToolsCommand: [Function: bound queuedCommandFn],\n    sendAndGetDevToolsCommand: [Function: bound queuedCommandFn],\n    setPermission: [Function: bound queuedCommandFn],\n    setDownloadPath: [Function: bound queuedCommandFn],\n    getCastSinks: [Function: bound queuedCommandFn],\n    setCastSinkToUse: [Function: bound queuedCommandFn],\n    startCastTabMirroring: [Function: bound queuedCommandFn],\n    getCastIssueMessage: [Function: bound queuedCommandFn],\n    stopCasting: [Function: bound queuedCommandFn]\n  },\n  firefox: {\n    getContext: [Function: bound queuedCommandFn],\n    setContext: [Function: bound queuedCommandFn],\n    installAddon: [Function: bound queuedCommandFn],\n    uninstallAddon: [Function: bound queuedCommandFn]\n  },\n  driver: [Getter],\n  actions: [Function (anonymous)],\n  Keys: {\n    NULL: '',\n    CANCEL: '',\n    HELP: '',\n    BACK_SPACE: '',\n    TAB: '',\n    CLEAR: '',\n    RETURN: '',\n    ENTER: '',\n    SHIFT: '',\n    CONTROL: '',\n    ALT: '',\n    PAUSE: '',\n    ESCAPE: '',\n    SPACE: '',\n    PAGE_UP: '',\n    PAGE_DOWN: '',\n    END: '',\n    HOME: '',\n    ARROW_LEFT: '',\n    LEFT: '',\n    ARROW_UP: '',\n    UP: '',\n    ARROW_RIGHT: '',\n    RIGHT: '',\n    ARROW_DOWN: '',\n    DOWN: '',\n    INSERT: '',\n    DELETE: '',\n    SEMICOLON: '',\n    EQUALS: '',\n    NUMPAD0: '',\n    NUMPAD1: '',\n    NUMPAD2: '',\n    NUMPAD3: '',\n    NUMPAD4: '',\n    NUMPAD5: '',\n    NUMPAD6: '',\n    NUMPAD7: '',\n    NUMPAD8: '',\n    NUMPAD9: '',\n    MULTIPLY: '',\n    ADD: '',\n    SEPARATOR: '',\n    SUBTRACT: '',\n    DECIMAL: '',\n    DIVIDE: '',\n    F1: '',\n    F2: '',\n    F3: '',\n    F4: '',\n    F5: '',\n    F6: '',\n    F7: '',\n    F8: '',\n    F9: '',\n    F10: '',\n    F11: '',\n    F12: '',\n    COMMAND: '',\n    META: '',\n    ZENKAKU_HANKAKU: '',\n    chord: [Function (anonymous)]\n  },\n  expect: [Function (anonymous)] {\n    null: [Function: bound queuedCommandFn],\n    active: [Function: bound queuedCommandFn],\n    attribute: [Function: bound queuedCommandFn],\n    css: [Function: bound queuedCommandFn],\n    enabled: [Function: bound queuedCommandFn],\n    present: [Function: bound queuedCommandFn],\n    property: [Function: bound queuedCommandFn],\n    selected: [Function: bound queuedCommandFn],\n    text: [Function: bound queuedCommandFn],\n    type: [Function: bound queuedCommandFn],\n    value: [Function: bound queuedCommandFn],\n    visible: [Function: bound queuedCommandFn],\n    count: [Function: bound queuedCommandFn],\n    component: [Function: bound queuedCommandFn],\n    cookie: [Function: bound queuedCommandFn],\n    element: [Function: bound queuedCommandFn],\n    elements: [Function: bound queuedCommandFn],\n    title: [Function: bound queuedCommandFn],\n    url: [Function: bound queuedCommandFn]\n  },\n  acceptAlert: [Function: bound queuedCommandFn],\n  appium: {\n    getContext: [Function: bound queuedCommandFn],\n    getContexts: [Function: bound queuedCommandFn],\n    getCurrentActivity: [Function: bound queuedCommandFn],\n    getCurrentPackage: [Function: bound queuedCommandFn],\n    getGeolocation: [Function: bound queuedCommandFn],\n    getOrientation: [Function: bound queuedCommandFn],\n    hideKeyboard: [Function: bound queuedCommandFn],\n    isKeyboardShown: [Function: bound queuedCommandFn],\n    longPressKeyCode: [Function: bound queuedCommandFn],\n    pressKeyCode: [Function: bound queuedCommandFn],\n    setContext: [Function: bound queuedCommandFn],\n    setGeolocation: [Function: bound queuedCommandFn],\n    setOrientation: [Function: bound queuedCommandFn],\n    startActivity: [Function: bound queuedCommandFn]\n  },\n  back: [Function: bound queuedCommandFn],\n  closeWindow: [Function: bound queuedCommandFn],\n  contexts: [Function: bound queuedCommandFn],\n  cookie: [Function: bound queuedCommandFn],\n  currentContext: [Function: bound queuedCommandFn],\n  dismissAlert: [Function: bound queuedCommandFn],\n  element: [Function (anonymous)] {\n    findActive: [Function: findActive],\n    getActive: [Function: findActive]\n  },\n  elementActive: [Function: bound queuedCommandFn],\n  elementIdAttribute: [Function: bound queuedCommandFn],\n  elementIdClear: [Function: bound queuedCommandFn],\n  elementIdClick: [Function: bound queuedCommandFn],\n  elementIdCssProperty: [Function: bound queuedCommandFn],\n  elementIdDisplayed: [Function: bound queuedCommandFn],\n  elementIdDoubleClick: [Function: bound queuedCommandFn],\n  elementIdElement: [Function: bound queuedCommandFn],\n  elementIdElements: [Function: bound queuedCommandFn],\n  elementIdEnabled: [Function: bound queuedCommandFn],\n  elementIdEquals: [Function: bound queuedCommandFn],\n  elementIdLocation: [Function: bound queuedCommandFn],\n  elementIdLocationInView: [Function: bound queuedCommandFn],\n  elementIdName: [Function: bound queuedCommandFn],\n  elementIdProperty: [Function: bound queuedCommandFn],\n  elementIdSelected: [Function: bound queuedCommandFn],\n  elementIdSize: [Function: bound queuedCommandFn],\n  elementIdText: [Function: bound queuedCommandFn],\n  elementIdValue: [Function: bound queuedCommandFn],\n  elements: [Function: bound queuedCommandFn],\n  execute: [Function: bound queuedCommandFn],\n  executeScript: [Function: bound queuedCommandFn],\n  executeAsyncScript: [Function: bound queuedCommandFn],\n  executeAsync: [Function: bound queuedCommandFn],\n  forward: [Function: bound queuedCommandFn],\n  frame: [Function: bound queuedCommandFn],\n  frameParent: [Function: bound queuedCommandFn],\n  fullscreenWindow: [Function: bound queuedCommandFn],\n  getAlertText: [Function: bound queuedCommandFn],\n  getCurrentUrl: [Function: bound queuedCommandFn],\n  getOrientation: [Function: bound queuedCommandFn],\n  keys: [Function: bound queuedCommandFn],\n  minimizeWindow: [Function: bound queuedCommandFn],\n  mouseButtonClick: [Function: bound queuedCommandFn],\n  mouseButtonDown: [Function: bound queuedCommandFn],\n  mouseButtonUp: [Function: bound queuedCommandFn],\n  moveTo: [Function: bound queuedCommandFn],\n  navigateTo: [Function: bound queuedCommandFn],\n  openNewWindow: [Function: bound queuedCommandFn],\n  quit: [Function: bound queuedCommandFn],\n  refresh: [Function: bound queuedCommandFn],\n  releaseMouseButton: [Function: bound queuedCommandFn],\n  screenshot: [Function: bound queuedCommandFn],\n  session: [Function: bound queuedCommandFn],\n  sessionLog: [Function: bound queuedCommandFn],\n  sessionLogTypes: [Function: bound queuedCommandFn],\n  sessions: [Function: bound queuedCommandFn],\n  setAlertText: [Function: bound queuedCommandFn],\n  setContext: [Function: bound queuedCommandFn],\n  setOrientation: [Function: bound queuedCommandFn],\n  source: [Function: bound queuedCommandFn],\n  status: [Function: bound queuedCommandFn],\n  submit: [Function: bound queuedCommandFn],\n  switchToWindow: [Function: bound queuedCommandFn],\n  switchWindow: [Function: bound queuedCommandFn],\n  timeouts: [Function: bound queuedCommandFn],\n  timeoutsAsyncScript: [Function: bound queuedCommandFn],\n  timeoutsImplicitWait: [Function: bound queuedCommandFn],\n  title: [Function: bound queuedCommandFn],\n  url: [Function: bound queuedCommandFn],\n  waitUntil: [Function: bound queuedCommandFn],\n  windowHandle: [Function: bound queuedCommandFn],\n  windowHandles: [Function: bound queuedCommandFn],\n  windowMaximize: [Function: bound queuedCommandFn],\n  windowPosition: [Function: bound queuedCommandFn],\n  windowRect: [Function: bound queuedCommandFn],\n  windowSize: [Function: bound queuedCommandFn],\n  alerts: {\n    accept: [Function: bound queuedCommandFn],\n    dismiss: [Function: bound queuedCommandFn],\n    getText: [Function: bound queuedCommandFn],\n    setText: [Function: bound queuedCommandFn]\n  },\n  axeInject: [Function: bound queuedCommandFn],\n  axeRun: [Function: bound queuedCommandFn],\n  captureBrowserConsoleLogs: [Function: bound queuedCommandFn],\n  captureBrowserExceptions: [Function: bound queuedCommandFn],\n  captureNetworkRequests: [Function: bound queuedCommandFn],\n  cookies: {\n    delete: [Function: bound queuedCommandFn],\n    deleteAll: [Function: bound queuedCommandFn],\n    get: [Function: bound queuedCommandFn],\n    getAll: [Function: bound queuedCommandFn],\n    set: [Function: bound queuedCommandFn]\n  },\n  debug: [Function: bound queuedCommandFn],\n  deleteCookie: [Function: bound queuedCommandFn],\n  deleteCookies: [Function: bound queuedCommandFn],\n  document: {\n    injectScript: [Function: bound queuedCommandFn],\n    source: [Function: bound queuedCommandFn],\n    pageSource: [Function: bound queuedCommandFn]\n  },\n  enablePerformanceMetrics: [Function: bound queuedCommandFn],\n  end: [Function: bound queuedCommandFn],\n  getCookie: [Function: bound queuedCommandFn],\n  getCookies: [Function: bound queuedCommandFn],\n  getLog: [Function: bound queuedCommandFn],\n  getLogTypes: [Function: bound queuedCommandFn],\n  getPerformanceMetrics: [Function: bound queuedCommandFn],\n  getTitle: [Function: bound queuedCommandFn],\n  getWindowPosition: [Function: bound queuedCommandFn],\n  getWindowRect: [Function: bound queuedCommandFn],\n  getWindowSize: [Function: bound queuedCommandFn],\n  init: [Function: bound queuedCommandFn],\n  injectScript: [Function: bound queuedCommandFn],\n  isLogAvailable: [Function: bound queuedCommandFn],\n  maximizeWindow: [Function: bound queuedCommandFn],\n  mockNetworkResponse: [Function: bound queuedCommandFn],\n  pageSource: [Function: bound queuedCommandFn],\n  pause: [Function: bound queuedCommandFn],\n  perform: [Function: bound queuedCommandFn],\n  registerBasicAuth: [Function: bound queuedCommandFn],\n  resizeWindow: [Function: bound queuedCommandFn],\n  saveScreenshot: [Function: bound queuedCommandFn],\n  saveSnapshot: [Function: bound queuedCommandFn],\n  setCookie: [Function: bound queuedCommandFn],\n  setDeviceDimensions: [Function: bound queuedCommandFn],\n  setGeolocation: [Function: bound queuedCommandFn],\n  setNetworkConditions: [Function: bound queuedCommandFn],\n  setWindowPosition: [Function: bound queuedCommandFn],\n  setWindowRect: [Function: bound queuedCommandFn],\n  setWindowSize: [Function: bound queuedCommandFn],\n  takeHeapSnapshot: [Function: bound queuedCommandFn],\n  urlHash: [Function: bound queuedCommandFn],\n  useCss: [Function: bound queuedCommandFn],\n  useXpath: [Function: bound queuedCommandFn],\n  window: {\n    close: [Function: bound queuedCommandFn],\n    fullscreen: [Function: bound queuedCommandFn],\n    getAllHandles: [Function: bound queuedCommandFn],\n    getHandle: [Function: bound queuedCommandFn],\n    getPosition: [Function: bound queuedCommandFn],\n    getRect: [Function: bound queuedCommandFn],\n    getSize: [Function: bound queuedCommandFn],\n    maximize: [Function: bound queuedCommandFn],\n    minimize: [Function: bound queuedCommandFn],\n    open: [Function: bound queuedCommandFn],\n    openNew: [Function: bound queuedCommandFn],\n    setPosition: [Function: bound queuedCommandFn],\n    setRect: [Function: bound queuedCommandFn],\n    setSize: [Function: bound queuedCommandFn],\n    resize: [Function: bound queuedCommandFn],\n    switchTo: [Function: bound queuedCommandFn],\n    switch: [Function: bound queuedCommandFn]\n  },\n  within: [Function: bound withinDefinition],\n  clearValue: [Function: bound queuedCommandFn],\n  click: [Function: bound queuedCommandFn],\n  clickAndHold: [Function: bound queuedCommandFn],\n  doubleClick: [Function: bound queuedCommandFn],\n  dragAndDrop: [Function: bound queuedCommandFn],\n  findElement: [Function: bound queuedCommandFn],\n  findElements: [Function: bound queuedCommandFn],\n  getAccessibleName: [Function: bound queuedCommandFn],\n  getAriaRole: [Function: bound queuedCommandFn],\n  getAttribute: [Function: bound queuedCommandFn],\n  getElementAttribute: [Function: bound queuedCommandFn],\n  getCssProperty: [Function: bound queuedCommandFn],\n  getElementProperty: [Function: bound queuedCommandFn],\n  getElementRect: [Function: bound queuedCommandFn],\n  getElementSize: [Function: bound queuedCommandFn],\n  getFirstElementChild: [Function: bound queuedCommandFn],\n  getLastElementChild: [Function: bound queuedCommandFn],\n  getLocation: [Function: bound queuedCommandFn],\n  getLocationInView: [Function: bound queuedCommandFn],\n  getNextSibling: [Function: bound queuedCommandFn],\n  getPreviousSibling: [Function: bound queuedCommandFn],\n  getShadowRoot: [Function: bound queuedCommandFn],\n  getTagName: [Function: bound queuedCommandFn],\n  getText: [Function: bound queuedCommandFn],\n  getValue: [Function: bound queuedCommandFn],\n  hasDescendants: [Function: bound queuedCommandFn],\n  isEnabled: [Function: bound queuedCommandFn],\n  isPresent: [Function: bound queuedCommandFn],\n  isSelected: [Function: bound queuedCommandFn],\n  isVisible: [Function: bound queuedCommandFn],\n  moveToElement: [Function: bound queuedCommandFn],\n  rightClick: [Function: bound queuedCommandFn],\n  sendKeys: [Function: bound queuedCommandFn],\n  setAttribute: [Function: bound queuedCommandFn],\n  setPassword: [Function: bound queuedCommandFn],\n  sendKeysRedacted: [Function: bound queuedCommandFn],\n  setValue: [Function: bound queuedCommandFn],\n  submitForm: [Function: bound queuedCommandFn],\n  takeElementScreenshot: [Function: bound queuedCommandFn],\n  updateValue: [Function: bound queuedCommandFn],\n  uploadFile: [Function: bound queuedCommandFn],\n  waitForElementNotPresent: [Function: bound queuedCommandFn],\n  waitForElementNotVisible: [Function: bound queuedCommandFn],\n  waitForElementPresent: [Function: bound queuedCommandFn],\n  waitForElementVisible: [Function: bound queuedCommandFn],\n  angular: { getElementsInList: [Function: bound queuedCommandFn] },\n  strictClick: [Function: bound queuedCommandFn],\n  _axeInjectFunc: [Function: bound queuedCommandFn],\n  mockserver: { create: [Function: bound queuedCommandFn] },\n  supertest: { request: [Function: bound queuedCommandFn] }\n}\"\u001b[0m \u001b[0;90m(35ms)\u001b[0m","failure":"Expected \"Amazon.com: Online Shopping for Electronics, Apparel, Computers, Books, DVDs & more\" but got: \"Nightwatch API\""}],"tests":1,"commands":[],"passed":0,"errors":0,"failed":1,"skipped":0,"status":"fail","startTimestamp":"Fri, 23 Jun 2023 16:52:35 GMT","httpOutput":[],"steps":[],"stackTrace":"","lastError":{"name":"NightwatchAssertError","message":"expected NightwatchAPI{ …(193) } to equal 'Amazon.com: Online Shopping for Elect…' - expected \u001b[0;32m\"Amazon.com: Online Shopping for Electronics, Apparel, Computers, Books, DVDs & more\"\u001b[0m but got: \u001b[0;31m\"NightwatchAPI {\n  capabilities: {},\n  currentTest: [Getter],\n  desiredCapabilities: { browserName: 'firefox', name: 'api testing' },\n  sessionId: null,\n  options: {\n    always_async_commands: false,\n    backwards_compatibility_mode: false,\n    baseUrl: 'https://nightwatchjs.org',\n    base_url: 'https://nightwatchjs.org',\n    custom_assertions_path: '',\n    custom_commands_path: [ 'node_modules/nightwatch/examples/custom-commands/' ],\n    default_reporter: [ 'junit', 'json', 'minimalJson', 'html' ],\n    desiredCapabilities: { browserName: 'firefox', name: 'api testing' },\n    detailed_output: true,\n    disable_colors: false,\n    disable_error_log: false,\n    disable_global_apis: false,\n    disable_global_expect: false,\n    disable_output_boxes: false,\n    disable_typescript: false,\n    dotenv: {},\n    element_command_retries: 3,\n    enable_fail_fast: false,\n    enable_v3_element_apis: true,\n    end_session_on_fail: true,\n    exclude: null,\n    filename_format: null,\n    filter: null,\n    folder_format: null,\n    globals: {\n      abortOnAssertionFailure: true,\n      abortOnElementLocateError: false,\n      waitForConditionPollInterval: 500,\n      waitForConditionTimeout: 5000,\n      throwOnMultipleElementsReturned: false,\n      suppressWarningsOnMultipleElementsReturned: true,\n      asyncHookTimeout: 20000,\n      unitTestsTimeout: 2000,\n      customReporterCallbackTimeout: 20000,\n      retryAssertionTimeout: 5000,\n      reuseBrowserSession: false,\n      reporter: [Function: reporter],\n      beforeTestSuite: [Function: beforeTestSuite],\n      afterTestSuite: [Function: afterTestSuite],\n      beforeTestCase: [Function: beforeTestCase],\n      afterTestCase: [Function: afterTestCase],\n      onBrowserNavigate: [Function: onBrowserNavigate],\n      onBrowserQuit: [Function: onBrowserQuit]\n    },\n    globals_path: '',\n    launchUrl: 'https://nightwatchjs.org',\n    launch_url: 'https://nightwatchjs.org',\n    live_output: false,\n    log_screenshot_data: false,\n    minimal_report_file_path: 'tests_output/minimal_report.json',\n    output: true,\n    output_folder: 'tests_output',\n    output_timestamp: false,\n    page_objects_path: [ 'node_modules/nightwatch/examples/pages/' ],\n    parallel_mode: false,\n    parallel_process_delay: 10,\n    persist_globals: false,\n    plugins: [ '@nightwatch/apitesting' ],\n    report_command_errors: false,\n    report_network_errors: true,\n    report_prefix: '',\n    reporter_options: {\n      output_folder: 'tests_output',\n      folder_format: null,\n      filename_format: null,\n      minimal_report_file_path: 'tests_output/minimal_report.json'\n    },\n    screenshots: {\n      enabled: false,\n      filename_format: [Function: filename_format],\n      path: '/home/ender/IdeaProjects/jobs/screens',\n      on_error: true,\n      on_failure: true\n    },\n    screenshotsPath: '/home/ender/IdeaProjects/jobs/screens',\n    selenium: {\n      start_process: false,\n      cli_args: {},\n      server_path: null,\n      log_path: './logs',\n      port: undefined,\n      check_process_delay: 500,\n      max_status_poll_tries: 15,\n      status_poll_interval: 200,\n      url: 'http://localhost:undefined'\n    },\n    silent: true,\n    skip_testcases_on_fail: true,\n    skipgroup: '',\n    skiptags: '',\n    src_folders: [],\n    start_session: false,\n    sync_test_names: true,\n    testEnv: 'api_testing',\n    testWorkersEnabled: false,\n    test_runner: { type: 'default', options: {} },\n    test_settings: {},\n    test_workers: { enabled: true, workers: 'auto' },\n    timestamp_format: '',\n    trace: {\n      enabled: false,\n      path: '',\n      filename_format: [Function: snapshot_file_format]\n    },\n    tsconfig_path: '',\n    unit_testing_mode: false,\n    unit_tests_mode: false,\n    usage_analytics: {\n      enabled: false,\n      log_path: './logs/analytics',\n      client_id: 'bff83f41-2870-4277-a64d-b240e72c288d'\n    },\n    use_child_process: false,\n    use_xpath: false,\n    webdriver: {\n      start_process: false,\n      cli_args: {},\n      server_path: '',\n      log_path: './logs',\n      log_file_name: '',\n      check_process_delay: 100,\n      max_status_poll_tries: 10,\n      status_poll_interval: 200,\n      process_create_timeout: 120000,\n      host: 'localhost',\n      port: 4444,\n      ssl: false,\n      proxy: undefined,\n      timeout_options: [Object],\n      default_path_prefix: '',\n      username: undefined,\n      access_key: undefined,\n      start_session: false,\n      url: 'http://localhost:undefined'\n    },\n    capabilities: { browserName: 'firefox', name: 'api testing' }\n  },\n  globals: {\n    abortOnAssertionFailure: true,\n    abortOnElementLocateError: false,\n    waitForConditionPollInterval: 500,\n    waitForConditionTimeout: 5000,\n    throwOnMultipleElementsReturned: false,\n    suppressWarningsOnMultipleElementsReturned: true,\n    asyncHookTimeout: 20000,\n    unitTestsTimeout: 2000,\n    customReporterCallbackTimeout: 20000,\n    retryAssertionTimeout: 5000,\n    reuseBrowserSession: false,\n    reporter: [Function: reporter],\n    beforeTestSuite: [Function: beforeTestSuite],\n    afterTestSuite: [Function: afterTestSuite],\n    beforeTestCase: [Function: beforeTestCase],\n    afterTestCase: [Function: afterTestCase],\n    onBrowserNavigate: [Function: onBrowserNavigate],\n    onBrowserQuit: [Function: onBrowserQuit]\n  },\n  createElement: [Function (anonymous)],\n  baseUrl: 'https://nightwatchjs.org',\n  launchUrl: 'https://nightwatchjs.org',\n  launch_url: 'https://nightwatchjs.org',\n  page: {\n    google: {\n      consent: [Function: bound pageObjectDefinition],\n      search: [Function: bound pageObjectDefinition],\n      searchResults: [Function: bound pageObjectDefinition]\n    },\n    nightwatchFeatures: [Function: bound pageObjectDefinition]\n  },\n  assert: {\n    fail: [Function: bound assertFn],\n    AssertionError: [Function: bound assertFn],\n    ok: [Function: bound assertFn],\n    equal: [Function: bound assertFn],\n    notEqual: [Function: bound assertFn],\n    deepEqual: [Function: bound assertFn],\n    notDeepEqual: [Function: bound assertFn],\n    deepStrictEqual: [Function: bound assertFn],\n    notDeepStrictEqual: [Function: bound assertFn],\n    strictEqual: [Function: bound assertFn],\n    notStrictEqual: [Function: bound assertFn],\n    throws: [Function: bound assertFn],\n    rejects: [Function: bound assertFn],\n    doesNotThrow: [Function: bound assertFn],\n    doesNotReject: [Function: bound assertFn],\n    ifError: [Function: bound assertFn],\n    match: [Function: bound assertFn],\n    doesNotMatch: [Function: bound assertFn],\n    CallTracker: [Function: bound assertFn],\n    strict: [Function: bound assertFn],\n    attributeContains: [Function: bound queuedCommandFn],\n    attributeEquals: [Function: bound queuedCommandFn],\n    attributeMatches: [Function: bound queuedCommandFn],\n    contains: [Function: bound queuedCommandFn],\n    containsText: [Function: bound queuedCommandFn],\n    cssClassNotPresent: [Function: bound queuedCommandFn],\n    cssClassPresent: [Function: bound queuedCommandFn],\n    cssProperty: [Function: bound queuedCommandFn],\n    domPropertyContains: [Function: bound queuedCommandFn],\n    domPropertyEquals: [Function: bound queuedCommandFn],\n    domPropertyMatches: [Function: bound queuedCommandFn],\n    elementNotPresent: [Function: bound queuedCommandFn],\n    elementPresent: [Function: bound queuedCommandFn],\n    elementsCount: [Function: bound queuedCommandFn],\n    enabled: [Function: bound queuedCommandFn],\n    hasAttribute: [Function: bound queuedCommandFn],\n    hasClass: [Function: bound queuedCommandFn],\n    hasDescendants: [Function: bound queuedCommandFn],\n    hidden: [Function: bound queuedCommandFn],\n    promisedValue: [Function: bound queuedCommandFn],\n    selected: [Function: bound queuedCommandFn],\n    textContains: [Function: bound queuedCommandFn],\n    textEquals: [Function: bound queuedCommandFn],\n    textMatches: [Function: bound queuedCommandFn],\n    title: [Function: bound queuedCommandFn],\n    titleContains: [Function: bound queuedCommandFn],\n    titleEquals: [Function: bound queuedCommandFn],\n    titleMatches: [Function: bound queuedCommandFn],\n    urlContains: [Function: bound queuedCommandFn],\n    urlEquals: [Function: bound queuedCommandFn],\n    urlMatches: [Function: bound queuedCommandFn],\n    value: [Function: bound queuedCommandFn],\n    valueContains: [Function: bound queuedCommandFn],\n    valueEquals: [Function: bound queuedCommandFn],\n    visible: [Function: bound queuedCommandFn]\n  },\n  verify: {\n    attributeContains: [Function: bound queuedCommandFn],\n    attributeEquals: [Function: bound queuedCommandFn],\n    attributeMatches: [Function: bound queuedCommandFn],\n    contains: [Function: bound queuedCommandFn],\n    containsText: [Function: bound queuedCommandFn],\n    cssClassNotPresent: [Function: bound queuedCommandFn],\n    cssClassPresent: [Function: bound queuedCommandFn],\n    cssProperty: [Function: bound queuedCommandFn],\n    domPropertyContains: [Function: bound queuedCommandFn],\n    domPropertyEquals: [Function: bound queuedCommandFn],\n    domPropertyMatches: [Function: bound queuedCommandFn],\n    elementNotPresent: [Function: bound queuedCommandFn],\n    elementPresent: [Function: bound queuedCommandFn],\n    elementsCount: [Function: bound queuedCommandFn],\n    enabled: [Function: bound queuedCommandFn],\n    hasAttribute: [Function: bound queuedCommandFn],\n    hasClass: [Function: bound queuedCommandFn],\n    hasDescendants: [Function: bound queuedCommandFn],\n    hidden: [Function: bound queuedCommandFn],\n    promisedValue: [Function: bound queuedCommandFn],\n    selected: [Function: bound queuedCommandFn],\n    textContains: [Function: bound queuedCommandFn],\n    textEquals: [Function: bound queuedCommandFn],\n    textMatches: [Function: bound queuedCommandFn],\n    title: [Function: bound queuedCommandFn],\n    titleContains: [Function: bound queuedCommandFn],\n    titleEquals: [Function: bound queuedCommandFn],\n    titleMatches: [Function: bound queuedCommandFn],\n    urlContains: [Function: bound queuedCommandFn],\n    urlEquals: [Function: bound queuedCommandFn],\n    urlMatches: [Function: bound queuedCommandFn],\n    value: [Function: bound queuedCommandFn],\n    valueContains: [Function: bound queuedCommandFn],\n    valueEquals: [Function: bound queuedCommandFn],\n    visible: [Function: bound queuedCommandFn]\n  },\n  ensure: {\n    elementTextMatches: [Function: bound assertFn],\n    elementTextContains: [Function: bound assertFn],\n    elementTextIs: [Function: bound assertFn],\n    elementIsNotSelected: [Function: bound assertFn],\n    elementIsSelected: [Function: bound assertFn],\n    elementIsDisabled: [Function: bound assertFn],\n    ableToSwitchToFrame: [Function: bound assertFn],\n    elementIsEnabled: [Function: bound assertFn],\n    elementIsNotVisible: [Function: bound assertFn],\n    elementIsVisible: [Function: bound assertFn],\n    stalenessOf: [Function: bound assertFn],\n    elementsLocated: [Function: bound assertFn],\n    elementLocated: [Function: bound assertFn],\n    urlMatches: [Function: bound assertFn],\n    urlContains: [Function: bound assertFn],\n    urlIs: [Function: bound assertFn],\n    titleMatches: [Function: bound assertFn],\n    titleContains: [Function: bound assertFn],\n    alertIsPresent: [Function: bound assertFn],\n    titleIs: [Function: bound assertFn]\n  },\n  chrome: {\n    launchApp: [Function: bound queuedCommandFn],\n    getNetworkConditions: [Function: bound queuedCommandFn],\n    setNetworkConditions: [Function: bound queuedCommandFn],\n    sendDevToolsCommand: [Function: bound queuedCommandFn],\n    sendAndGetDevToolsCommand: [Function: bound queuedCommandFn],\n    setPermission: [Function: bound queuedCommandFn],\n    setDownloadPath: [Function: bound queuedCommandFn],\n    getCastSinks: [Function: bound queuedCommandFn],\n    setCastSinkToUse: [Function: bound queuedCommandFn],\n    startCastTabMirroring: [Function: bound queuedCommandFn],\n    getCastIssueMessage: [Function: bound queuedCommandFn],\n    stopCasting: [Function: bound queuedCommandFn]\n  },\n  firefox: {\n    getContext: [Function: bound queuedCommandFn],\n    setContext: [Function: bound queuedCommandFn],\n    installAddon: [Function: bound queuedCommandFn],\n    uninstallAddon: [Function: bound queuedCommandFn]\n  },\n  driver: [Getter],\n  actions: [Function (anonymous)],\n  Keys: {\n    NULL: '',\n    CANCEL: '',\n    HELP: '',\n    BACK_SPACE: '',\n    TAB: '',\n    CLEAR: '',\n    RETURN: '',\n    ENTER: '',\n    SHIFT: '',\n    CONTROL: '',\n    ALT: '',\n    PAUSE: '',\n    ESCAPE: '',\n    SPACE: '',\n    PAGE_UP: '',\n    PAGE_DOWN: '',\n    END: '',\n    HOME: '',\n    ARROW_LEFT: '',\n    LEFT: '',\n    ARROW_UP: '',\n    UP: '',\n    ARROW_RIGHT: '',\n    RIGHT: '',\n    ARROW_DOWN: '',\n    DOWN: '',\n    INSERT: '',\n    DELETE: '',\n    SEMICOLON: '',\n    EQUALS: '',\n    NUMPAD0: '',\n    NUMPAD1: '',\n    NUMPAD2: '',\n    NUMPAD3: '',\n    NUMPAD4: '',\n    NUMPAD5: '',\n    NUMPAD6: '',\n    NUMPAD7: '',\n    NUMPAD8: '',\n    NUMPAD9: '',\n    MULTIPLY: '',\n    ADD: '',\n    SEPARATOR: '',\n    SUBTRACT: '',\n    DECIMAL: '',\n    DIVIDE: '',\n    F1: '',\n    F2: '',\n    F3: '',\n    F4: '',\n    F5: '',\n    F6: '',\n    F7: '',\n    F8: '',\n    F9: '',\n    F10: '',\n    F11: '',\n    F12: '',\n    COMMAND: '',\n    META: '',\n    ZENKAKU_HANKAKU: '',\n    chord: [Function (anonymous)]\n  },\n  expect: [Function (anonymous)] {\n    null: [Function: bound queuedCommandFn],\n    active: [Function: bound queuedCommandFn],\n    attribute: [Function: bound queuedCommandFn],\n    css: [Function: bound queuedCommandFn],\n    enabled: [Function: bound queuedCommandFn],\n    present: [Function: bound queuedCommandFn],\n    property: [Function: bound queuedCommandFn],\n    selected: [Function: bound queuedCommandFn],\n    text: [Function: bound queuedCommandFn],\n    type: [Function: bound queuedCommandFn],\n    value: [Function: bound queuedCommandFn],\n    visible: [Function: bound queuedCommandFn],\n    count: [Function: bound queuedCommandFn],\n    component: [Function: bound queuedCommandFn],\n    cookie: [Function: bound queuedCommandFn],\n    element: [Function: bound queuedCommandFn],\n    elements: [Function: bound queuedCommandFn],\n    title: [Function: bound queuedCommandFn],\n    url: [Function: bound queuedCommandFn]\n  },\n  acceptAlert: [Function: bound queuedCommandFn],\n  appium: {\n    getContext: [Function: bound queuedCommandFn],\n    getContexts: [Function: bound queuedCommandFn],\n    getCurrentActivity: [Function: bound queuedCommandFn],\n    getCurrentPackage: [Function: bound queuedCommandFn],\n    getGeolocation: [Function: bound queuedCommandFn],\n    getOrientation: [Function: bound queuedCommandFn],\n    hideKeyboard: [Function: bound queuedCommandFn],\n    isKeyboardShown: [Function: bound queuedCommandFn],\n    longPressKeyCode: [Function: bound queuedCommandFn],\n    pressKeyCode: [Function: bound queuedCommandFn],\n    setContext: [Function: bound queuedCommandFn],\n    setGeolocation: [Function: bound queuedCommandFn],\n    setOrientation: [Function: bound queuedCommandFn],\n    startActivity: [Function: bound queuedCommandFn]\n  },\n  back: [Function: bound queuedCommandFn],\n  closeWindow: [Function: bound queuedCommandFn],\n  contexts: [Function: bound queuedCommandFn],\n  cookie: [Function: bound queuedCommandFn],\n  currentContext: [Function: bound queuedCommandFn],\n  dismissAlert: [Function: bound queuedCommandFn],\n  element: [Function (anonymous)] {\n    findActive: [Function: findActive],\n    getActive: [Function: findActive]\n  },\n  elementActive: [Function: bound queuedCommandFn],\n  elementIdAttribute: [Function: bound queuedCommandFn],\n  elementIdClear: [Function: bound queuedCommandFn],\n  elementIdClick: [Function: bound queuedCommandFn],\n  elementIdCssProperty: [Function: bound queuedCommandFn],\n  elementIdDisplayed: [Function: bound queuedCommandFn],\n  elementIdDoubleClick: [Function: bound queuedCommandFn],\n  elementIdElement: [Function: bound queuedCommandFn],\n  elementIdElements: [Function: bound queuedCommandFn],\n  elementIdEnabled: [Function: bound queuedCommandFn],\n  elementIdEquals: [Function: bound queuedCommandFn],\n  elementIdLocation: [Function: bound queuedCommandFn],\n  elementIdLocationInView: [Function: bound queuedCommandFn],\n  elementIdName: [Function: bound queuedCommandFn],\n  elementIdProperty: [Function: bound queuedCommandFn],\n  elementIdSelected: [Function: bound queuedCommandFn],\n  elementIdSize: [Function: bound queuedCommandFn],\n  elementIdText: [Function: bound queuedCommandFn],\n  elementIdValue: [Function: bound queuedCommandFn],\n  elements: [Function: bound queuedCommandFn],\n  execute: [Function: bound queuedCommandFn],\n  executeScript: [Function: bound queuedCommandFn],\n  executeAsyncScript: [Function: bound queuedCommandFn],\n  executeAsync: [Function: bound queuedCommandFn],\n  forward: [Function: bound queuedCommandFn],\n  frame: [Function: bound queuedCommandFn],\n  frameParent: [Function: bound queuedCommandFn],\n  fullscreenWindow: [Function: bound queuedCommandFn],\n  getAlertText: [Function: bound queuedCommandFn],\n  getCurrentUrl: [Function: bound queuedCommandFn],\n  getOrientation: [Function: bound queuedCommandFn],\n  keys: [Function: bound queuedCommandFn],\n  minimizeWindow: [Function: bound queuedCommandFn],\n  mouseButtonClick: [Function: bound queuedCommandFn],\n  mouseButtonDown: [Function: bound queuedCommandFn],\n  mouseButtonUp: [Function: bound queuedCommandFn],\n  moveTo: [Function: bound queuedCommandFn],\n  navigateTo: [Function: bound queuedCommandFn],\n  openNewWindow: [Function: bound queuedCommandFn],\n  quit: [Function: bound queuedCommandFn],\n  refresh: [Function: bound queuedCommandFn],\n  releaseMouseButton: [Function: bound queuedCommandFn],\n  screenshot: [Function: bound queuedCommandFn],\n  session: [Function: bound queuedCommandFn],\n  sessionLog: [Function: bound queuedCommandFn],\n  sessionLogTypes: [Function: bound queuedCommandFn],\n  sessions: [Function: bound queuedCommandFn],\n  setAlertText: [Function: bound queuedCommandFn],\n  setContext: [Function: bound queuedCommandFn],\n  setOrientation: [Function: bound queuedCommandFn],\n  source: [Function: bound queuedCommandFn],\n  status: [Function: bound queuedCommandFn],\n  submit: [Function: bound queuedCommandFn],\n  switchToWindow: [Function: bound queuedCommandFn],\n  switchWindow: [Function: bound queuedCommandFn],\n  timeouts: [Function: bound queuedCommandFn],\n  timeoutsAsyncScript: [Function: bound queuedCommandFn],\n  timeoutsImplicitWait: [Function: bound queuedCommandFn],\n  title: [Function: bound queuedCommandFn],\n  url: [Function: bound queuedCommandFn],\n  waitUntil: [Function: bound queuedCommandFn],\n  windowHandle: [Function: bound queuedCommandFn],\n  windowHandles: [Function: bound queuedCommandFn],\n  windowMaximize: [Function: bound queuedCommandFn],\n  windowPosition: [Function: bound queuedCommandFn],\n  windowRect: [Function: bound queuedCommandFn],\n  windowSize: [Function: bound queuedCommandFn],\n  alerts: {\n    accept: [Function: bound queuedCommandFn],\n    dismiss: [Function: bound queuedCommandFn],\n    getText: [Function: bound queuedCommandFn],\n    setText: [Function: bound queuedCommandFn]\n  },\n  axeInject: [Function: bound queuedCommandFn],\n  axeRun: [Function: bound queuedCommandFn],\n  captureBrowserConsoleLogs: [Function: bound queuedCommandFn],\n  captureBrowserExceptions: [Function: bound queuedCommandFn],\n  captureNetworkRequests: [Function: bound queuedCommandFn],\n  cookies: {\n    delete: [Function: bound queuedCommandFn],\n    deleteAll: [Function: bound queuedCommandFn],\n    get: [Function: bound queuedCommandFn],\n    getAll: [Function: bound queuedCommandFn],\n    set: [Function: bound queuedCommandFn]\n  },\n  debug: [Function: bound queuedCommandFn],\n  deleteCookie: [Function: bound queuedCommandFn],\n  deleteCookies: [Function: bound queuedCommandFn],\n  document: {\n    injectScript: [Function: bound queuedCommandFn],\n    source: [Function: bound queuedCommandFn],\n    pageSource: [Function: bound queuedCommandFn]\n  },\n  enablePerformanceMetrics: [Function: bound queuedCommandFn],\n  end: [Function: bound queuedCommandFn],\n  getCookie: [Function: bound queuedCommandFn],\n  getCookies: [Function: bound queuedCommandFn],\n  getLog: [Function: bound queuedCommandFn],\n  getLogTypes: [Function: bound queuedCommandFn],\n  getPerformanceMetrics: [Function: bound queuedCommandFn],\n  getTitle: [Function: bound queuedCommandFn],\n  getWindowPosition: [Function: bound queuedCommandFn],\n  getWindowRect: [Function: bound queuedCommandFn],\n  getWindowSize: [Function: bound queuedCommandFn],\n  init: [Function: bound queuedCommandFn],\n  injectScript: [Function: bound queuedCommandFn],\n  isLogAvailable: [Function: bound queuedCommandFn],\n  maximizeWindow: [Function: bound queuedCommandFn],\n  mockNetworkResponse: [Function: bound queuedCommandFn],\n  pageSource: [Function: bound queuedCommandFn],\n  pause: [Function: bound queuedCommandFn],\n  perform: [Function: bound queuedCommandFn],\n  registerBasicAuth: [Function: bound queuedCommandFn],\n  resizeWindow: [Function: bound queuedCommandFn],\n  saveScreenshot: [Function: bound queuedCommandFn],\n  saveSnapshot: [Function: bound queuedCommandFn],\n  setCookie: [Function: bound queuedCommandFn],\n  setDeviceDimensions: [Function: bound queuedCommandFn],\n  setGeolocation: [Function: bound queuedCommandFn],\n  setNetworkConditions: [Function: bound queuedCommandFn],\n  setWindowPosition: [Function: bound queuedCommandFn],\n  setWindowRect: [Function: bound queuedCommandFn],\n  setWindowSize: [Function: bound queuedCommandFn],\n  takeHeapSnapshot: [Function: bound queuedCommandFn],\n  urlHash: [Function: bound queuedCommandFn],\n  useCss: [Function: bound queuedCommandFn],\n  useXpath: [Function: bound queuedCommandFn],\n  window: {\n    close: [Function: bound queuedCommandFn],\n    fullscreen: [Function: bound queuedCommandFn],\n    getAllHandles: [Function: bound queuedCommandFn],\n    getHandle: [Function: bound queuedCommandFn],\n    getPosition: [Function: bound queuedCommandFn],\n    getRect: [Function: bound queuedCommandFn],\n    getSize: [Function: bound queuedCommandFn],\n    maximize: [Function: bound queuedCommandFn],\n    minimize: [Function: bound queuedCommandFn],\n    open: [Function: bound queuedCommandFn],\n    openNew: [Function: bound queuedCommandFn],\n    setPosition: [Function: bound queuedCommandFn],\n    setRect: [Function: bound queuedCommandFn],\n    setSize: [Function: bound queuedCommandFn],\n    resize: [Function: bound queuedCommandFn],\n    switchTo: [Function: bound queuedCommandFn],\n    switch: [Function: bound queuedCommandFn]\n  },\n  within: [Function: bound withinDefinition],\n  clearValue: [Function: bound queuedCommandFn],\n  click: [Function: bound queuedCommandFn],\n  clickAndHold: [Function: bound queuedCommandFn],\n  doubleClick: [Function: bound queuedCommandFn],\n  dragAndDrop: [Function: bound queuedCommandFn],\n  findElement: [Function: bound queuedCommandFn],\n  findElements: [Function: bound queuedCommandFn],\n  getAccessibleName: [Function: bound queuedCommandFn],\n  getAriaRole: [Function: bound queuedCommandFn],\n  getAttribute: [Function: bound queuedCommandFn],\n  getElementAttribute: [Function: bound queuedCommandFn],\n  getCssProperty: [Function: bound queuedCommandFn],\n  getElementProperty: [Function: bound queuedCommandFn],\n  getElementRect: [Function: bound queuedCommandFn],\n  getElementSize: [Function: bound queuedCommandFn],\n  getFirstElementChild: [Function: bound queuedCommandFn],\n  getLastElementChild: [Function: bound queuedCommandFn],\n  getLocation: [Function: bound queuedCommandFn],\n  getLocationInView: [Function: bound queuedCommandFn],\n  getNextSibling: [Function: bound queuedCommandFn],\n  getPreviousSibling: [Function: bound queuedCommandFn],\n  getShadowRoot: [Function: bound queuedCommandFn],\n  getTagName: [Function: bound queuedCommandFn],\n  getText: [Function: bound queuedCommandFn],\n  getValue: [Function: bound queuedCommandFn],\n  hasDescendants: [Function: bound queuedCommandFn],\n  isEnabled: [Function: bound queuedCommandFn],\n  isPresent: [Function: bound queuedCommandFn],\n  isSelected: [Function: bound queuedCommandFn],\n  isVisible: [Function: bound queuedCommandFn],\n  moveToElement: [Function: bound queuedCommandFn],\n  rightClick: [Function: bound queuedCommandFn],\n  sendKeys: [Function: bound queuedCommandFn],\n  setAttribute: [Function: bound queuedCommandFn],\n  setPassword: [Function: bound queuedCommandFn],\n  sendKeysRedacted: [Function: bound queuedCommandFn],\n  setValue: [Function: bound queuedCommandFn],\n  submitForm: [Function: bound queuedCommandFn],\n  takeElementScreenshot: [Function: bound queuedCommandFn],\n  updateValue: [Function: bound queuedCommandFn],\n  uploadFile: [Function: bound queuedCommandFn],\n  waitForElementNotPresent: [Function: bound queuedCommandFn],\n  waitForElementNotVisible: [Function: bound queuedCommandFn],\n  waitForElementPresent: [Function: bound queuedCommandFn],\n  waitForElementVisible: [Function: bound queuedCommandFn],\n  angular: { getElementsInList: [Function: bound queuedCommandFn] },\n  strictClick: [Function: bound queuedCommandFn],\n  _axeInjectFunc: [Function: bound queuedCommandFn],\n  mockserver: { create: [Function: bound queuedCommandFn] },\n  supertest: { request: [Function: bound queuedCommandFn] }\n}\"\u001b[0m \u001b[0;90m(35ms)\u001b[0m","showDiff":false,"abortOnFailure":true,"namespace":"expect(<value>)"},"timeMs":313,"endTimestamp":"Fri, 23 Jun 2023 16:52:35 GMT"}},"lastError":{"name":"NightwatchAssertError","message":"expected NightwatchAPI{ …(193) } to equal 'Amazon.com: Online Shopping for Elect…' - expected \u001b[0;32m\"Amazon.com: Online Shopping for Electronics, Apparel, Computers, Books, DVDs & more\"\u001b[0m but got: \u001b[0;31m\"NightwatchAPI {\n  capabilities: {},\n  currentTest: [Getter],\n  desiredCapabilities: { browserName: 'firefox', name: 'api testing' },\n  sessionId: null,\n  options: {\n    always_async_commands: false,\n    backwards_compatibility_mode: false,\n    baseUrl: 'https://nightwatchjs.org',\n    base_url: 'https://nightwatchjs.org',\n    custom_assertions_path: '',\n    custom_commands_path: [ 'node_modules/nightwatch/examples/custom-commands/' ],\n    default_reporter: [ 'junit', 'json', 'minimalJson', 'html' ],\n    desiredCapabilities: { browserName: 'firefox', name: 'api testing' },\n    detailed_output: true,\n    disable_colors: false,\n    disable_error_log: false,\n    disable_global_apis: false,\n    disable_global_expect: false,\n    disable_output_boxes: false,\n    disable_typescript: false,\n    dotenv: {},\n    element_command_retries: 3,\n    enable_fail_fast: false,\n    enable_v3_element_apis: true,\n    end_session_on_fail: true,\n    exclude: null,\n    filename_format: null,\n    filter: null,\n    folder_format: null,\n    globals: {\n      abortOnAssertionFailure: true,\n      abortOnElementLocateError: false,\n      waitForConditionPollInterval: 500,\n      waitForConditionTimeout: 5000,\n      throwOnMultipleElementsReturned: false,\n      suppressWarningsOnMultipleElementsReturned: true,\n      asyncHookTimeout: 20000,\n      unitTestsTimeout: 2000,\n      customReporterCallbackTimeout: 20000,\n      retryAssertionTimeout: 5000,\n      reuseBrowserSession: false,\n      reporter: [Function: reporter],\n      beforeTestSuite: [Function: beforeTestSuite],\n      afterTestSuite: [Function: afterTestSuite],\n      beforeTestCase: [Function: beforeTestCase],\n      afterTestCase: [Function: afterTestCase],\n      onBrowserNavigate: [Function: onBrowserNavigate],\n      onBrowserQuit: [Function: onBrowserQuit]\n    },\n    globals_path: '',\n    launchUrl: 'https://nightwatchjs.org',\n    launch_url: 'https://nightwatchjs.org',\n    live_output: false,\n    log_screenshot_data: false,\n    minimal_report_file_path: 'tests_output/minimal_report.json',\n    output: true,\n    output_folder: 'tests_output',\n    output_timestamp: false,\n    page_objects_path: [ 'node_modules/nightwatch/examples/pages/' ],\n    parallel_mode: false,\n    parallel_process_delay: 10,\n    persist_globals: false,\n    plugins: [ '@nightwatch/apitesting' ],\n    report_command_errors: false,\n    report_network_errors: true,\n    report_prefix: '',\n    reporter_options: {\n      output_folder: 'tests_output',\n      folder_format: null,\n      filename_format: null,\n      minimal_report_file_path: 'tests_output/minimal_report.json'\n    },\n    screenshots: {\n      enabled: false,\n      filename_format: [Function: filename_format],\n      path: '/home/ender/IdeaProjects/jobs/screens',\n      on_error: true,\n      on_failure: true\n    },\n    screenshotsPath: '/home/ender/IdeaProjects/jobs/screens',\n    selenium: {\n      start_process: false,\n      cli_args: {},\n      server_path: null,\n      log_path: './logs',\n      port: undefined,\n      check_process_delay: 500,\n      max_status_poll_tries: 15,\n      status_poll_interval: 200,\n      url: 'http://localhost:undefined'\n    },\n    silent: true,\n    skip_testcases_on_fail: true,\n    skipgroup: '',\n    skiptags: '',\n    src_folders: [],\n    start_session: false,\n    sync_test_names: true,\n    testEnv: 'api_testing',\n    testWorkersEnabled: false,\n    test_runner: { type: 'default', options: {} },\n    test_settings: {},\n    test_workers: { enabled: true, workers: 'auto' },\n    timestamp_format: '',\n    trace: {\n      enabled: false,\n      path: '',\n      filename_format: [Function: snapshot_file_format]\n    },\n    tsconfig_path: '',\n    unit_testing_mode: false,\n    unit_tests_mode: false,\n    usage_analytics: {\n      enabled: false,\n      log_path: './logs/analytics',\n      client_id: 'bff83f41-2870-4277-a64d-b240e72c288d'\n    },\n    use_child_process: false,\n    use_xpath: false,\n    webdriver: {\n      start_process: false,\n      cli_args: {},\n      server_path: '',\n      log_path: './logs',\n      log_file_name: '',\n      check_process_delay: 100,\n      max_status_poll_tries: 10,\n      status_poll_interval: 200,\n      process_create_timeout: 120000,\n      host: 'localhost',\n      port: 4444,\n      ssl: false,\n      proxy: undefined,\n      timeout_options: [Object],\n      default_path_prefix: '',\n      username: undefined,\n      access_key: undefined,\n      start_session: false,\n      url: 'http://localhost:undefined'\n    },\n    capabilities: { browserName: 'firefox', name: 'api testing' }\n  },\n  globals: {\n    abortOnAssertionFailure: true,\n    abortOnElementLocateError: false,\n    waitForConditionPollInterval: 500,\n    waitForConditionTimeout: 5000,\n    throwOnMultipleElementsReturned: false,\n    suppressWarningsOnMultipleElementsReturned: true,\n    asyncHookTimeout: 20000,\n    unitTestsTimeout: 2000,\n    customReporterCallbackTimeout: 20000,\n    retryAssertionTimeout: 5000,\n    reuseBrowserSession: false,\n    reporter: [Function: reporter],\n    beforeTestSuite: [Function: beforeTestSuite],\n    afterTestSuite: [Function: afterTestSuite],\n    beforeTestCase: [Function: beforeTestCase],\n    afterTestCase: [Function: afterTestCase],\n    onBrowserNavigate: [Function: onBrowserNavigate],\n    onBrowserQuit: [Function: onBrowserQuit]\n  },\n  createElement: [Function (anonymous)],\n  baseUrl: 'https://nightwatchjs.org',\n  launchUrl: 'https://nightwatchjs.org',\n  launch_url: 'https://nightwatchjs.org',\n  page: {\n    google: {\n      consent: [Function: bound pageObjectDefinition],\n      search: [Function: bound pageObjectDefinition],\n      searchResults: [Function: bound pageObjectDefinition]\n    },\n    nightwatchFeatures: [Function: bound pageObjectDefinition]\n  },\n  assert: {\n    fail: [Function: bound assertFn],\n    AssertionError: [Function: bound assertFn],\n    ok: [Function: bound assertFn],\n    equal: [Function: bound assertFn],\n    notEqual: [Function: bound assertFn],\n    deepEqual: [Function: bound assertFn],\n    notDeepEqual: [Function: bound assertFn],\n    deepStrictEqual: [Function: bound assertFn],\n    notDeepStrictEqual: [Function: bound assertFn],\n    strictEqual: [Function: bound assertFn],\n    notStrictEqual: [Function: bound assertFn],\n    throws: [Function: bound assertFn],\n    rejects: [Function: bound assertFn],\n    doesNotThrow: [Function: bound assertFn],\n    doesNotReject: [Function: bound assertFn],\n    ifError: [Function: bound assertFn],\n    match: [Function: bound assertFn],\n    doesNotMatch: [Function: bound assertFn],\n    CallTracker: [Function: bound assertFn],\n    strict: [Function: bound assertFn],\n    attributeContains: [Function: bound queuedCommandFn],\n    attributeEquals: [Function: bound queuedCommandFn],\n    attributeMatches: [Function: bound queuedCommandFn],\n    contains: [Function: bound queuedCommandFn],\n    containsText: [Function: bound queuedCommandFn],\n    cssClassNotPresent: [Function: bound queuedCommandFn],\n    cssClassPresent: [Function: bound queuedCommandFn],\n    cssProperty: [Function: bound queuedCommandFn],\n    domPropertyContains: [Function: bound queuedCommandFn],\n    domPropertyEquals: [Function: bound queuedCommandFn],\n    domPropertyMatches: [Function: bound queuedCommandFn],\n    elementNotPresent: [Function: bound queuedCommandFn],\n    elementPresent: [Function: bound queuedCommandFn],\n    elementsCount: [Function: bound queuedCommandFn],\n    enabled: [Function: bound queuedCommandFn],\n    hasAttribute: [Function: bound queuedCommandFn],\n    hasClass: [Function: bound queuedCommandFn],\n    hasDescendants: [Function: bound queuedCommandFn],\n    hidden: [Function: bound queuedCommandFn],\n    promisedValue: [Function: bound queuedCommandFn],\n    selected: [Function: bound queuedCommandFn],\n    textContains: [Function: bound queuedCommandFn],\n    textEquals: [Function: bound queuedCommandFn],\n    textMatches: [Function: bound queuedCommandFn],\n    title: [Function: bound queuedCommandFn],\n    titleContains: [Function: bound queuedCommandFn],\n    titleEquals: [Function: bound queuedCommandFn],\n    titleMatches: [Function: bound queuedCommandFn],\n    urlContains: [Function: bound queuedCommandFn],\n    urlEquals: [Function: bound queuedCommandFn],\n    urlMatches: [Function: bound queuedCommandFn],\n    value: [Function: bound queuedCommandFn],\n    valueContains: [Function: bound queuedCommandFn],\n    valueEquals: [Function: bound queuedCommandFn],\n    visible: [Function: bound queuedCommandFn]\n  },\n  verify: {\n    attributeContains: [Function: bound queuedCommandFn],\n    attributeEquals: [Function: bound queuedCommandFn],\n    attributeMatches: [Function: bound queuedCommandFn],\n    contains: [Function: bound queuedCommandFn],\n    containsText: [Function: bound queuedCommandFn],\n    cssClassNotPresent: [Function: bound queuedCommandFn],\n    cssClassPresent: [Function: bound queuedCommandFn],\n    cssProperty: [Function: bound queuedCommandFn],\n    domPropertyContains: [Function: bound queuedCommandFn],\n    domPropertyEquals: [Function: bound queuedCommandFn],\n    domPropertyMatches: [Function: bound queuedCommandFn],\n    elementNotPresent: [Function: bound queuedCommandFn],\n    elementPresent: [Function: bound queuedCommandFn],\n    elementsCount: [Function: bound queuedCommandFn],\n    enabled: [Function: bound queuedCommandFn],\n    hasAttribute: [Function: bound queuedCommandFn],\n    hasClass: [Function: bound queuedCommandFn],\n    hasDescendants: [Function: bound queuedCommandFn],\n    hidden: [Function: bound queuedCommandFn],\n    promisedValue: [Function: bound queuedCommandFn],\n    selected: [Function: bound queuedCommandFn],\n    textContains: [Function: bound queuedCommandFn],\n    textEquals: [Function: bound queuedCommandFn],\n    textMatches: [Function: bound queuedCommandFn],\n    title: [Function: bound queuedCommandFn],\n    titleContains: [Function: bound queuedCommandFn],\n    titleEquals: [Function: bound queuedCommandFn],\n    titleMatches: [Function: bound queuedCommandFn],\n    urlContains: [Function: bound queuedCommandFn],\n    urlEquals: [Function: bound queuedCommandFn],\n    urlMatches: [Function: bound queuedCommandFn],\n    value: [Function: bound queuedCommandFn],\n    valueContains: [Function: bound queuedCommandFn],\n    valueEquals: [Function: bound queuedCommandFn],\n    visible: [Function: bound queuedCommandFn]\n  },\n  ensure: {\n    elementTextMatches: [Function: bound assertFn],\n    elementTextContains: [Function: bound assertFn],\n    elementTextIs: [Function: bound assertFn],\n    elementIsNotSelected: [Function: bound assertFn],\n    elementIsSelected: [Function: bound assertFn],\n    elementIsDisabled: [Function: bound assertFn],\n    ableToSwitchToFrame: [Function: bound assertFn],\n    elementIsEnabled: [Function: bound assertFn],\n    elementIsNotVisible: [Function: bound assertFn],\n    elementIsVisible: [Function: bound assertFn],\n    stalenessOf: [Function: bound assertFn],\n    elementsLocated: [Function: bound assertFn],\n    elementLocated: [Function: bound assertFn],\n    urlMatches: [Function: bound assertFn],\n    urlContains: [Function: bound assertFn],\n    urlIs: [Function: bound assertFn],\n    titleMatches: [Function: bound assertFn],\n    titleContains: [Function: bound assertFn],\n    alertIsPresent: [Function: bound assertFn],\n    titleIs: [Function: bound assertFn]\n  },\n  chrome: {\n    launchApp: [Function: bound queuedCommandFn],\n    getNetworkConditions: [Function: bound queuedCommandFn],\n    setNetworkConditions: [Function: bound queuedCommandFn],\n    sendDevToolsCommand: [Function: bound queuedCommandFn],\n    sendAndGetDevToolsCommand: [Function: bound queuedCommandFn],\n    setPermission: [Function: bound queuedCommandFn],\n    setDownloadPath: [Function: bound queuedCommandFn],\n    getCastSinks: [Function: bound queuedCommandFn],\n    setCastSinkToUse: [Function: bound queuedCommandFn],\n    startCastTabMirroring: [Function: bound queuedCommandFn],\n    getCastIssueMessage: [Function: bound queuedCommandFn],\n    stopCasting: [Function: bound queuedCommandFn]\n  },\n  firefox: {\n    getContext: [Function: bound queuedCommandFn],\n    setContext: [Function: bound queuedCommandFn],\n    installAddon: [Function: bound queuedCommandFn],\n    uninstallAddon: [Function: bound queuedCommandFn]\n  },\n  driver: [Getter],\n  actions: [Function (anonymous)],\n  Keys: {\n    NULL: '',\n    CANCEL: '',\n    HELP: '',\n    BACK_SPACE: '',\n    TAB: '',\n    CLEAR: '',\n    RETURN: '',\n    ENTER: '',\n    SHIFT: '',\n    CONTROL: '',\n    ALT: '',\n    PAUSE: '',\n    ESCAPE: '',\n    SPACE: '',\n    PAGE_UP: '',\n    PAGE_DOWN: '',\n    END: '',\n    HOME: '',\n    ARROW_LEFT: '',\n    LEFT: '',\n    ARROW_UP: '',\n    UP: '',\n    ARROW_RIGHT: '',\n    RIGHT: '',\n    ARROW_DOWN: '',\n    DOWN: '',\n    INSERT: '',\n    DELETE: '',\n    SEMICOLON: '',\n    EQUALS: '',\n    NUMPAD0: '',\n    NUMPAD1: '',\n    NUMPAD2: '',\n    NUMPAD3: '',\n    NUMPAD4: '',\n    NUMPAD5: '',\n    NUMPAD6: '',\n    NUMPAD7: '',\n    NUMPAD8: '',\n    NUMPAD9: '',\n    MULTIPLY: '',\n    ADD: '',\n    SEPARATOR: '',\n    SUBTRACT: '',\n    DECIMAL: '',\n    DIVIDE: '',\n    F1: '',\n    F2: '',\n    F3: '',\n    F4: '',\n    F5: '',\n    F6: '',\n    F7: '',\n    F8: '',\n    F9: '',\n    F10: '',\n    F11: '',\n    F12: '',\n    COMMAND: '',\n    META: '',\n    ZENKAKU_HANKAKU: '',\n    chord: [Function (anonymous)]\n  },\n  expect: [Function (anonymous)] {\n    null: [Function: bound queuedCommandFn],\n    active: [Function: bound queuedCommandFn],\n    attribute: [Function: bound queuedCommandFn],\n    css: [Function: bound queuedCommandFn],\n    enabled: [Function: bound queuedCommandFn],\n    present: [Function: bound queuedCommandFn],\n    property: [Function: bound queuedCommandFn],\n    selected: [Function: bound queuedCommandFn],\n    text: [Function: bound queuedCommandFn],\n    type: [Function: bound queuedCommandFn],\n    value: [Function: bound queuedCommandFn],\n    visible: [Function: bound queuedCommandFn],\n    count: [Function: bound queuedCommandFn],\n    component: [Function: bound queuedCommandFn],\n    cookie: [Function: bound queuedCommandFn],\n    element: [Function: bound queuedCommandFn],\n    elements: [Function: bound queuedCommandFn],\n    title: [Function: bound queuedCommandFn],\n    url: [Function: bound queuedCommandFn]\n  },\n  acceptAlert: [Function: bound queuedCommandFn],\n  appium: {\n    getContext: [Function: bound queuedCommandFn],\n    getContexts: [Function: bound queuedCommandFn],\n    getCurrentActivity: [Function: bound queuedCommandFn],\n    getCurrentPackage: [Function: bound queuedCommandFn],\n    getGeolocation: [Function: bound queuedCommandFn],\n    getOrientation: [Function: bound queuedCommandFn],\n    hideKeyboard: [Function: bound queuedCommandFn],\n    isKeyboardShown: [Function: bound queuedCommandFn],\n    longPressKeyCode: [Function: bound queuedCommandFn],\n    pressKeyCode: [Function: bound queuedCommandFn],\n    setContext: [Function: bound queuedCommandFn],\n    setGeolocation: [Function: bound queuedCommandFn],\n    setOrientation: [Function: bound queuedCommandFn],\n    startActivity: [Function: bound queuedCommandFn]\n  },\n  back: [Function: bound queuedCommandFn],\n  closeWindow: [Function: bound queuedCommandFn],\n  contexts: [Function: bound queuedCommandFn],\n  cookie: [Function: bound queuedCommandFn],\n  currentContext: [Function: bound queuedCommandFn],\n  dismissAlert: [Function: bound queuedCommandFn],\n  element: [Function (anonymous)] {\n    findActive: [Function: findActive],\n    getActive: [Function: findActive]\n  },\n  elementActive: [Function: bound queuedCommandFn],\n  elementIdAttribute: [Function: bound queuedCommandFn],\n  elementIdClear: [Function: bound queuedCommandFn],\n  elementIdClick: [Function: bound queuedCommandFn],\n  elementIdCssProperty: [Function: bound queuedCommandFn],\n  elementIdDisplayed: [Function: bound queuedCommandFn],\n  elementIdDoubleClick: [Function: bound queuedCommandFn],\n  elementIdElement: [Function: bound queuedCommandFn],\n  elementIdElements: [Function: bound queuedCommandFn],\n  elementIdEnabled: [Function: bound queuedCommandFn],\n  elementIdEquals: [Function: bound queuedCommandFn],\n  elementIdLocation: [Function: bound queuedCommandFn],\n  elementIdLocationInView: [Function: bound queuedCommandFn],\n  elementIdName: [Function: bound queuedCommandFn],\n  elementIdProperty: [Function: bound queuedCommandFn],\n  elementIdSelected: [Function: bound queuedCommandFn],\n  elementIdSize: [Function: bound queuedCommandFn],\n  elementIdText: [Function: bound queuedCommandFn],\n  elementIdValue: [Function: bound queuedCommandFn],\n  elements: [Function: bound queuedCommandFn],\n  execute: [Function: bound queuedCommandFn],\n  executeScript: [Function: bound queuedCommandFn],\n  executeAsyncScript: [Function: bound queuedCommandFn],\n  executeAsync: [Function: bound queuedCommandFn],\n  forward: [Function: bound queuedCommandFn],\n  frame: [Function: bound queuedCommandFn],\n  frameParent: [Function: bound queuedCommandFn],\n  fullscreenWindow: [Function: bound queuedCommandFn],\n  getAlertText: [Function: bound queuedCommandFn],\n  getCurrentUrl: [Function: bound queuedCommandFn],\n  getOrientation: [Function: bound queuedCommandFn],\n  keys: [Function: bound queuedCommandFn],\n  minimizeWindow: [Function: bound queuedCommandFn],\n  mouseButtonClick: [Function: bound queuedCommandFn],\n  mouseButtonDown: [Function: bound queuedCommandFn],\n  mouseButtonUp: [Function: bound queuedCommandFn],\n  moveTo: [Function: bound queuedCommandFn],\n  navigateTo: [Function: bound queuedCommandFn],\n  openNewWindow: [Function: bound queuedCommandFn],\n  quit: [Function: bound queuedCommandFn],\n  refresh: [Function: bound queuedCommandFn],\n  releaseMouseButton: [Function: bound queuedCommandFn],\n  screenshot: [Function: bound queuedCommandFn],\n  session: [Function: bound queuedCommandFn],\n  sessionLog: [Function: bound queuedCommandFn],\n  sessionLogTypes: [Function: bound queuedCommandFn],\n  sessions: [Function: bound queuedCommandFn],\n  setAlertText: [Function: bound queuedCommandFn],\n  setContext: [Function: bound queuedCommandFn],\n  setOrientation: [Function: bound queuedCommandFn],\n  source: [Function: bound queuedCommandFn],\n  status: [Function: bound queuedCommandFn],\n  submit: [Function: bound queuedCommandFn],\n  switchToWindow: [Function: bound queuedCommandFn],\n  switchWindow: [Function: bound queuedCommandFn],\n  timeouts: [Function: bound queuedCommandFn],\n  timeoutsAsyncScript: [Function: bound queuedCommandFn],\n  timeoutsImplicitWait: [Function: bound queuedCommandFn],\n  title: [Function: bound queuedCommandFn],\n  url: [Function: bound queuedCommandFn],\n  waitUntil: [Function: bound queuedCommandFn],\n  windowHandle: [Function: bound queuedCommandFn],\n  windowHandles: [Function: bound queuedCommandFn],\n  windowMaximize: [Function: bound queuedCommandFn],\n  windowPosition: [Function: bound queuedCommandFn],\n  windowRect: [Function: bound queuedCommandFn],\n  windowSize: [Function: bound queuedCommandFn],\n  alerts: {\n    accept: [Function: bound queuedCommandFn],\n    dismiss: [Function: bound queuedCommandFn],\n    getText: [Function: bound queuedCommandFn],\n    setText: [Function: bound queuedCommandFn]\n  },\n  axeInject: [Function: bound queuedCommandFn],\n  axeRun: [Function: bound queuedCommandFn],\n  captureBrowserConsoleLogs: [Function: bound queuedCommandFn],\n  captureBrowserExceptions: [Function: bound queuedCommandFn],\n  captureNetworkRequests: [Function: bound queuedCommandFn],\n  cookies: {\n    delete: [Function: bound queuedCommandFn],\n    deleteAll: [Function: bound queuedCommandFn],\n    get: [Function: bound queuedCommandFn],\n    getAll: [Function: bound queuedCommandFn],\n    set: [Function: bound queuedCommandFn]\n  },\n  debug: [Function: bound queuedCommandFn],\n  deleteCookie: [Function: bound queuedCommandFn],\n  deleteCookies: [Function: bound queuedCommandFn],\n  document: {\n    injectScript: [Function: bound queuedCommandFn],\n    source: [Function: bound queuedCommandFn],\n    pageSource: [Function: bound queuedCommandFn]\n  },\n  enablePerformanceMetrics: [Function: bound queuedCommandFn],\n  end: [Function: bound queuedCommandFn],\n  getCookie: [Function: bound queuedCommandFn],\n  getCookies: [Function: bound queuedCommandFn],\n  getLog: [Function: bound queuedCommandFn],\n  getLogTypes: [Function: bound queuedCommandFn],\n  getPerformanceMetrics: [Function: bound queuedCommandFn],\n  getTitle: [Function: bound queuedCommandFn],\n  getWindowPosition: [Function: bound queuedCommandFn],\n  getWindowRect: [Function: bound queuedCommandFn],\n  getWindowSize: [Function: bound queuedCommandFn],\n  init: [Function: bound queuedCommandFn],\n  injectScript: [Function: bound queuedCommandFn],\n  isLogAvailable: [Function: bound queuedCommandFn],\n  maximizeWindow: [Function: bound queuedCommandFn],\n  mockNetworkResponse: [Function: bound queuedCommandFn],\n  pageSource: [Function: bound queuedCommandFn],\n  pause: [Function: bound queuedCommandFn],\n  perform: [Function: bound queuedCommandFn],\n  registerBasicAuth: [Function: bound queuedCommandFn],\n  resizeWindow: [Function: bound queuedCommandFn],\n  saveScreenshot: [Function: bound queuedCommandFn],\n  saveSnapshot: [Function: bound queuedCommandFn],\n  setCookie: [Function: bound queuedCommandFn],\n  setDeviceDimensions: [Function: bound queuedCommandFn],\n  setGeolocation: [Function: bound queuedCommandFn],\n  setNetworkConditions: [Function: bound queuedCommandFn],\n  setWindowPosition: [Function: bound queuedCommandFn],\n  setWindowRect: [Function: bound queuedCommandFn],\n  setWindowSize: [Function: bound queuedCommandFn],\n  takeHeapSnapshot: [Function: bound queuedCommandFn],\n  urlHash: [Function: bound queuedCommandFn],\n  useCss: [Function: bound queuedCommandFn],\n  useXpath: [Function: bound queuedCommandFn],\n  window: {\n    close: [Function: bound queuedCommandFn],\n    fullscreen: [Function: bound queuedCommandFn],\n    getAllHandles: [Function: bound queuedCommandFn],\n    getHandle: [Function: bound queuedCommandFn],\n    getPosition: [Function: bound queuedCommandFn],\n    getRect: [Function: bound queuedCommandFn],\n    getSize: [Function: bound queuedCommandFn],\n    maximize: [Function: bound queuedCommandFn],\n    minimize: [Function: bound queuedCommandFn],\n    open: [Function: bound queuedCommandFn],\n    openNew: [Function: bound queuedCommandFn],\n    setPosition: [Function: bound queuedCommandFn],\n    setRect: [Function: bound queuedCommandFn],\n    setSize: [Function: bound queuedCommandFn],\n    resize: [Function: bound queuedCommandFn],\n    switchTo: [Function: bound queuedCommandFn],\n    switch: [Function: bound queuedCommandFn]\n  },\n  within: [Function: bound withinDefinition],\n  clearValue: [Function: bound queuedCommandFn],\n  click: [Function: bound queuedCommandFn],\n  clickAndHold: [Function: bound queuedCommandFn],\n  doubleClick: [Function: bound queuedCommandFn],\n  dragAndDrop: [Function: bound queuedCommandFn],\n  findElement: [Function: bound queuedCommandFn],\n  findElements: [Function: bound queuedCommandFn],\n  getAccessibleName: [Function: bound queuedCommandFn],\n  getAriaRole: [Function: bound queuedCommandFn],\n  getAttribute: [Function: bound queuedCommandFn],\n  getElementAttribute: [Function: bound queuedCommandFn],\n  getCssProperty: [Function: bound queuedCommandFn],\n  getElementProperty: [Function: bound queuedCommandFn],\n  getElementRect: [Function: bound queuedCommandFn],\n  getElementSize: [Function: bound queuedCommandFn],\n  getFirstElementChild: [Function: bound queuedCommandFn],\n  getLastElementChild: [Function: bound queuedCommandFn],\n  getLocation: [Function: bound queuedCommandFn],\n  getLocationInView: [Function: bound queuedCommandFn],\n  getNextSibling: [Function: bound queuedCommandFn],\n  getPreviousSibling: [Function: bound queuedCommandFn],\n  getShadowRoot: [Function: bound queuedCommandFn],\n  getTagName: [Function: bound queuedCommandFn],\n  getText: [Function: bound queuedCommandFn],\n  getValue: [Function: bound queuedCommandFn],\n  hasDescendants: [Function: bound queuedCommandFn],\n  isEnabled: [Function: bound queuedCommandFn],\n  isPresent: [Function: bound queuedCommandFn],\n  isSelected: [Function: bound queuedCommandFn],\n  isVisible: [Function: bound queuedCommandFn],\n  moveToElement: [Function: bound queuedCommandFn],\n  rightClick: [Function: bound queuedCommandFn],\n  sendKeys: [Function: bound queuedCommandFn],\n  setAttribute: [Function: bound queuedCommandFn],\n  setPassword: [Function: bound queuedCommandFn],\n  sendKeysRedacted: [Function: bound queuedCommandFn],\n  setValue: [Function: bound queuedCommandFn],\n  submitForm: [Function: bound queuedCommandFn],\n  takeElementScreenshot: [Function: bound queuedCommandFn],\n  updateValue: [Function: bound queuedCommandFn],\n  uploadFile: [Function: bound queuedCommandFn],\n  waitForElementNotPresent: [Function: bound queuedCommandFn],\n  waitForElementNotVisible: [Function: bound queuedCommandFn],\n  waitForElementPresent: [Function: bound queuedCommandFn],\n  waitForElementVisible: [Function: bound queuedCommandFn],\n  angular: { getElementsInList: [Function: bound queuedCommandFn] },\n  strictClick: [Function: bound queuedCommandFn],\n  _axeInjectFunc: [Function: bound queuedCommandFn],\n  mockserver: { create: [Function: bound queuedCommandFn] },\n  supertest: { request: [Function: bound queuedCommandFn] }\n}\"\u001b[0m \u001b[0;90m(35ms)\u001b[0m","showDiff":false,"abortOnFailure":true,"namespace":"expect(<value>)"},"timeMs":313,"endTimestamp":"Fri, 23 Jun 2023 16:52:35 GMT"}},"completedSections":{"__global_beforeEach_hook":{"time":"0.001000","assertions":[],"commands":[],"passed":0,"errors":0,"failed":0,"skipped":0,"tests":0,"status":"pass","startTimestamp":1687539155432,"httpOutput":[],"timeMs":1,"endTimestamp":1687539155433},"__before_hook":{"time":"0.000","assertions":[],"commands":[],"passed":0,"errors":0,"failed":0,"skipped":0,"tests":0,"status":"pass","startTimestamp":1687539155434,"httpOutput":[],"timeMs":0,"endTimestamp":1687539155434},"amazon web testing":{"time":"0.3130","assertions":[],"commands":[{"name":"url","args":["https://www.amazon.com/"],"startTime":1687539155483,"endTime":1687539155497,"elapsedTime":14,"status":"pass"},{"name":"getTitle","args":[],"startTime":1687539155497,"endTime":1687539155503,"elapsedTime":6,"status":"fail","result":{"status":-1,"name":"TypeError"}},{"name":"expect(<value>)..to.equal('Amazon.com: Online Shopping for Elect…')","args":[],"startTime":1687539155503,"endTime":1687539155695,"elapsedTime":192,"status":"fail","result":{"message":"expected NightwatchAPI{ …(193) } to equal 'Amazon.com: Online Shopping for Elect…' - expected \u001b[0;32m\"Amazon.com: Online Shopping for Electronics, Apparel, Computers, Books, DVDs & more\"\u001b[0m but got: \u001b[0;31m\"NightwatchAPI {\n  capabilities: {},\n  currentTest: [Getter],\n  desiredCapabilities: { browserName: 'firefox', name: 'api testing' },\n  sessionId: null,\n  options: {\n    always_async_commands: false,\n    backwards_compatibility_mode: false,\n    baseUrl: 'https://nightwatchjs.org',\n    base_url: 'https://nightwatchjs.org',\n    custom_assertions_path: '',\n    custom_commands_path: [ 'node_modules/nightwatch/examples/custom-commands/' ],\n    default_reporter: [ 'junit', 'json', 'minimalJson', 'html' ],\n    desiredCapabilities: { browserName: 'firefox', name: 'api testing' },\n    detailed_output: true,\n    disable_colors: false,\n    disable_error_log: false,\n    disable_global_apis: false,\n    disable_global_expect: false,\n    disable_output_boxes: false,\n    disable_typescript: false,\n    dotenv: {},\n    element_command_retries: 3,\n    enable_fail_fast: false,\n    enable_v3_element_apis: true,\n    end_session_on_fail: true,\n    exclude: null,\n    filename_format: null,\n    filter: null,\n    folder_format: null,\n    globals: {\n      abortOnAssertionFailure: true,\n      abortOnElementLocateError: false,\n      waitForConditionPollInterval: 500,\n      waitForConditionTimeout: 5000,\n      throwOnMultipleElementsReturned: false,\n      suppressWarningsOnMultipleElementsReturned: true,\n      asyncHookTimeout: 20000,\n      unitTestsTimeout: 2000,\n      customReporterCallbackTimeout: 20000,\n      retryAssertionTimeout: 5000,\n      reuseBrowserSession: false,\n      reporter: [Function: reporter],\n      beforeTestSuite: [Function: beforeTestSuite],\n      afterTestSuite: [Function: afterTestSuite],\n      beforeTestCase: [Function: beforeTestCase],\n      afterTestCase: [Function: afterTestCase],\n      onBrowserNavigate: [Function: onBrowserNavigate],\n      onBrowserQuit: [Function: onBrowserQuit]\n    },\n    globals_path: '',\n    launchUrl: 'https://nightwatchjs.org',\n    launch_url: 'https://nightwatchjs.org',\n    live_output: false,\n    log_screenshot_data: false,\n    minimal_report_file_path: 'tests_output/minimal_report.json',\n    output: true,\n    output_folder: 'tests_output',\n    output_timestamp: false,\n    page_objects_path: [ 'node_modules/nightwatch/examples/pages/' ],\n    parallel_mode: false,\n    parallel_process_delay: 10,\n    persist_globals: false,\n    plugins: [ '@nightwatch/apitesting' ],\n    report_command_errors: false,\n    report_network_errors: true,\n    report_prefix: '',\n    reporter_options: {\n      output_folder: 'tests_output',\n      folder_format: null,\n      filename_format: null,\n      minimal_report_file_path: 'tests_output/minimal_report.json'\n    },\n    screenshots: {\n      enabled: false,\n      filename_format: [Function: filename_format],\n      path: '/home/ender/IdeaProjects/jobs/screens',\n      on_error: true,\n      on_failure: true\n    },\n    screenshotsPath: '/home/ender/IdeaProjects/jobs/screens',\n    selenium: {\n      start_process: false,\n      cli_args: {},\n      server_path: null,\n      log_path: './logs',\n      port: undefined,\n      check_process_delay: 500,\n      max_status_poll_tries: 15,\n      status_poll_interval: 200,\n      url: 'http://localhost:undefined'\n    },\n    silent: true,\n    skip_testcases_on_fail: true,\n    skipgroup: '',\n    skiptags: '',\n    src_folders: [],\n    start_session: false,\n    sync_test_names: true,\n    testEnv: 'api_testing',\n    testWorkersEnabled: false,\n    test_runner: { type: 'default', options: {} },\n    test_settings: {},\n    test_workers: { enabled: true, workers: 'auto' },\n    timestamp_format: '',\n    trace: {\n      enabled: false,\n      path: '',\n      filename_format: [Function: snapshot_file_format]\n    },\n    tsconfig_path: '',\n    unit_testing_mode: false,\n    unit_tests_mode: false,\n    usage_analytics: {\n      enabled: false,\n      log_path: './logs/analytics',\n      client_id: 'bff83f41-2870-4277-a64d-b240e72c288d'\n    },\n    use_child_process: false,\n    use_xpath: false,\n    webdriver: {\n      start_process: false,\n      cli_args: {},\n      server_path: '',\n      log_path: './logs',\n      log_file_name: '',\n      check_process_delay: 100,\n      max_status_poll_tries: 10,\n      status_poll_interval: 200,\n      process_create_timeout: 120000,\n      host: 'localhost',\n      port: 4444,\n      ssl: false,\n      proxy: undefined,\n      timeout_options: [Object],\n      default_path_prefix: '',\n      username: undefined,\n      access_key: undefined,\n      start_session: false,\n      url: 'http://localhost:undefined'\n    },\n    capabilities: { browserName: 'firefox', name: 'api testing' }\n  },\n  globals: {\n    abortOnAssertionFailure: true,\n    abortOnElementLocateError: false,\n    waitForConditionPollInterval: 500,\n    waitForConditionTimeout: 5000,\n    throwOnMultipleElementsReturned: false,\n    suppressWarningsOnMultipleElementsReturned: true,\n    asyncHookTimeout: 20000,\n    unitTestsTimeout: 2000,\n    customReporterCallbackTimeout: 20000,\n    retryAssertionTimeout: 5000,\n    reuseBrowserSession: false,\n    reporter: [Function: reporter],\n    beforeTestSuite: [Function: beforeTestSuite],\n    afterTestSuite: [Function: afterTestSuite],\n    beforeTestCase: [Function: beforeTestCase],\n    afterTestCase: [Function: afterTestCase],\n    onBrowserNavigate: [Function: onBrowserNavigate],\n    onBrowserQuit: [Function: onBrowserQuit]\n  },\n  createElement: [Function (anonymous)],\n  baseUrl: 'https://nightwatchjs.org',\n  launchUrl: 'https://nightwatchjs.org',\n  launch_url: 'https://nightwatchjs.org',\n  page: {\n    google: {\n      consent: [Function: bound pageObjectDefinition],\n      search: [Function: bound pageObjectDefinition],\n      searchResults: [Function: bound pageObjectDefinition]\n    },\n    nightwatchFeatures: [Function: bound pageObjectDefinition]\n  },\n  assert: {\n    fail: [Function: bound assertFn],\n    AssertionError: [Function: bound assertFn],\n    ok: [Function: bound assertFn],\n    equal: [Function: bound assertFn],\n    notEqual: [Function: bound assertFn],\n    deepEqual: [Function: bound assertFn],\n    notDeepEqual: [Function: bound assertFn],\n    deepStrictEqual: [Function: bound assertFn],\n    notDeepStrictEqual: [Function: bound assertFn],\n    strictEqual: [Function: bound assertFn],\n    notStrictEqual: [Function: bound assertFn],\n    throws: [Function: bound assertFn],\n    rejects: [Function: bound assertFn],\n    doesNotThrow: [Function: bound assertFn],\n    doesNotReject: [Function: bound assertFn],\n    ifError: [Function: bound assertFn],\n    match: [Function: bound assertFn],\n    doesNotMatch: [Function: bound assertFn],\n    CallTracker: [Function: bound assertFn],\n    strict: [Function: bound assertFn],\n    attributeContains: [Function: bound queuedCommandFn],\n    attributeEquals: [Function: bound queuedCommandFn],\n    attributeMatches: [Function: bound queuedCommandFn],\n    contains: [Function: bound queuedCommandFn],\n    containsText: [Function: bound queuedCommandFn],\n    cssClassNotPresent: [Function: bound queuedCommandFn],\n    cssClassPresent: [Function: bound queuedCommandFn],\n    cssProperty: [Function: bound queuedCommandFn],\n    domPropertyContains: [Function: bound queuedCommandFn],\n    domPropertyEquals: [Function: bound queuedCommandFn],\n    domPropertyMatches: [Function: bound queuedCommandFn],\n    elementNotPresent: [Function: bound queuedCommandFn],\n    elementPresent: [Function: bound queuedCommandFn],\n    elementsCount: [Function: bound queuedCommandFn],\n    enabled: [Function: bound queuedCommandFn],\n    hasAttribute: [Function: bound queuedCommandFn],\n    hasClass: [Function: bound queuedCommandFn],\n    hasDescendants: [Function: bound queuedCommandFn],\n    hidden: [Function: bound queuedCommandFn],\n    promisedValue: [Function: bound queuedCommandFn],\n    selected: [Function: bound queuedCommandFn],\n    textContains: [Function: bound queuedCommandFn],\n    textEquals: [Function: bound queuedCommandFn],\n    textMatches: [Function: bound queuedCommandFn],\n    title: [Function: bound queuedCommandFn],\n    titleContains: [Function: bound queuedCommandFn],\n    titleEquals: [Function: bound queuedCommandFn],\n    titleMatches: [Function: bound queuedCommandFn],\n    urlContains: [Function: bound queuedCommandFn],\n    urlEquals: [Function: bound queuedCommandFn],\n    urlMatches: [Function: bound queuedCommandFn],\n    value: [Function: bound queuedCommandFn],\n    valueContains: [Function: bound queuedCommandFn],\n    valueEquals: [Function: bound queuedCommandFn],\n    visible: [Function: bound queuedCommandFn]\n  },\n  verify: {\n    attributeContains: [Function: bound queuedCommandFn],\n    attributeEquals: [Function: bound queuedCommandFn],\n    attributeMatches: [Function: bound queuedCommandFn],\n    contains: [Function: bound queuedCommandFn],\n    containsText: [Function: bound queuedCommandFn],\n    cssClassNotPresent: [Function: bound queuedCommandFn],\n    cssClassPresent: [Function: bound queuedCommandFn],\n    cssProperty: [Function: bound queuedCommandFn],\n    domPropertyContains: [Function: bound queuedCommandFn],\n    domPropertyEquals: [Function: bound queuedCommandFn],\n    domPropertyMatches: [Function: bound queuedCommandFn],\n    elementNotPresent: [Function: bound queuedCommandFn],\n    elementPresent: [Function: bound queuedCommandFn],\n    elementsCount: [Function: bound queuedCommandFn],\n    enabled: [Function: bound queuedCommandFn],\n    hasAttribute: [Function: bound queuedCommandFn],\n    hasClass: [Function: bound queuedCommandFn],\n    hasDescendants: [Function: bound queuedCommandFn],\n    hidden: [Function: bound queuedCommandFn],\n    promisedValue: [Function: bound queuedCommandFn],\n    selected: [Function: bound queuedCommandFn],\n    textContains: [Function: bound queuedCommandFn],\n    textEquals: [Function: bound queuedCommandFn],\n    textMatches: [Function: bound queuedCommandFn],\n    title: [Function: bound queuedCommandFn],\n    titleContains: [Function: bound queuedCommandFn],\n    titleEquals: [Function: bound queuedCommandFn],\n    titleMatches: [Function: bound queuedCommandFn],\n    urlContains: [Function: bound queuedCommandFn],\n    urlEquals: [Function: bound queuedCommandFn],\n    urlMatches: [Function: bound queuedCommandFn],\n    value: [Function: bound queuedCommandFn],\n    valueContains: [Function: bound queuedCommandFn],\n    valueEquals: [Function: bound queuedCommandFn],\n    visible: [Function: bound queuedCommandFn]\n  },\n  ensure: {\n    elementTextMatches: [Function: bound assertFn],\n    elementTextContains: [Function: bound assertFn],\n    elementTextIs: [Function: bound assertFn],\n    elementIsNotSelected: [Function: bound assertFn],\n    elementIsSelected: [Function: bound assertFn],\n    elementIsDisabled: [Function: bound assertFn],\n    ableToSwitchToFrame: [Function: bound assertFn],\n    elementIsEnabled: [Function: bound assertFn],\n    elementIsNotVisible: [Function: bound assertFn],\n    elementIsVisible: [Function: bound assertFn],\n    stalenessOf: [Function: bound assertFn],\n    elementsLocated: [Function: bound assertFn],\n    elementLocated: [Function: bound assertFn],\n    urlMatches: [Function: bound assertFn],\n    urlContains: [Function: bound assertFn],\n    urlIs: [Function: bound assertFn],\n    titleMatches: [Function: bound assertFn],\n    titleContains: [Function: bound assertFn],\n    alertIsPresent: [Function: bound assertFn],\n    titleIs: [Function: bound assertFn]\n  },\n  chrome: {\n    launchApp: [Function: bound queuedCommandFn],\n    getNetworkConditions: [Function: bound queuedCommandFn],\n    setNetworkConditions: [Function: bound queuedCommandFn],\n    sendDevToolsCommand: [Function: bound queuedCommandFn],\n    sendAndGetDevToolsCommand: [Function: bound queuedCommandFn],\n    setPermission: [Function: bound queuedCommandFn],\n    setDownloadPath: [Function: bound queuedCommandFn],\n    getCastSinks: [Function: bound queuedCommandFn],\n    setCastSinkToUse: [Function: bound queuedCommandFn],\n    startCastTabMirroring: [Function: bound queuedCommandFn],\n    getCastIssueMessage: [Function: bound queuedCommandFn],\n    stopCasting: [Function: bound queuedCommandFn]\n  },\n  firefox: {\n    getContext: [Function: bound queuedCommandFn],\n    setContext: [Function: bound queuedCommandFn],\n    installAddon: [Function: bound queuedCommandFn],\n    uninstallAddon: [Function: bound queuedCommandFn]\n  },\n  driver: [Getter],\n  actions: [Function (anonymous)],\n  Keys: {\n    NULL: '',\n    CANCEL: '',\n    HELP: '',\n    BACK_SPACE: '',\n    TAB: '',\n    CLEAR: '',\n    RETURN: '',\n    ENTER: '',\n    SHIFT: '',\n    CONTROL: '',\n    ALT: '',\n    PAUSE: '',\n    ESCAPE: '',\n    SPACE: '',\n    PAGE_UP: '',\n    PAGE_DOWN: '',\n    END: '',\n    HOME: '',\n    ARROW_LEFT: '',\n    LEFT: '',\n    ARROW_UP: '',\n    UP: '',\n    ARROW_RIGHT: '',\n    RIGHT: '',\n    ARROW_DOWN: '',\n    DOWN: '',\n    INSERT: '',\n    DELETE: '',\n    SEMICOLON: '',\n    EQUALS: '',\n    NUMPAD0: '',\n    NUMPAD1: '',\n    NUMPAD2: '',\n    NUMPAD3: '',\n    NUMPAD4: '',\n    NUMPAD5: '',\n    NUMPAD6: '',\n    NUMPAD7: '',\n    NUMPAD8: '',\n    NUMPAD9: '',\n    MULTIPLY: '',\n    ADD: '',\n    SEPARATOR: '',\n    SUBTRACT: '',\n    DECIMAL: '',\n    DIVIDE: '',\n    F1: '',\n    F2: '',\n    F3: '',\n    F4: '',\n    F5: '',\n    F6: '',\n    F7: '',\n    F8: '',\n    F9: '',\n    F10: '',\n    F11: '',\n    F12: '',\n    COMMAND: '',\n    META: '',\n    ZENKAKU_HANKAKU: '',\n    chord: [Function (anonymous)]\n  },\n  expect: [Function (anonymous)] {\n    null: [Function: bound queuedCommandFn],\n    active: [Function: bound queuedCommandFn],\n    attribute: [Function: bound queuedCommandFn],\n    css: [Function: bound queuedCommandFn],\n    enabled: [Function: bound queuedCommandFn],\n    present: [Function: bound queuedCommandFn],\n    property: [Function: bound queuedCommandFn],\n    selected: [Function: bound queuedCommandFn],\n    text: [Function: bound queuedCommandFn],\n    type: [Function: bound queuedCommandFn],\n    value: [Function: bound queuedCommandFn],\n    visible: [Function: bound queuedCommandFn],\n    count: [Function: bound queuedCommandFn],\n    component: [Function: bound queuedCommandFn],\n    cookie: [Function: bound queuedCommandFn],\n    element: [Function: bound queuedCommandFn],\n    elements: [Function: bound queuedCommandFn],\n    title: [Function: bound queuedCommandFn],\n    url: [Function: bound queuedCommandFn]\n  },\n  acceptAlert: [Function: bound queuedCommandFn],\n  appium: {\n    getContext: [Function: bound queuedCommandFn],\n    getContexts: [Function: bound queuedCommandFn],\n    getCurrentActivity: [Function: bound queuedCommandFn],\n    getCurrentPackage: [Function: bound queuedCommandFn],\n    getGeolocation: [Function: bound queuedCommandFn],\n    getOrientation: [Function: bound queuedCommandFn],\n    hideKeyboard: [Function: bound queuedCommandFn],\n    isKeyboardShown: [Function: bound queuedCommandFn],\n    longPressKeyCode: [Function: bound queuedCommandFn],\n    pressKeyCode: [Function: bound queuedCommandFn],\n    setContext: [Function: bound queuedCommandFn],\n    setGeolocation: [Function: bound queuedCommandFn],\n    setOrientation: [Function: bound queuedCommandFn],\n    startActivity: [Function: bound queuedCommandFn]\n  },\n  back: [Function: bound queuedCommandFn],\n  closeWindow: [Function: bound queuedCommandFn],\n  contexts: [Function: bound queuedCommandFn],\n  cookie: [Function: bound queuedCommandFn],\n  currentContext: [Function: bound queuedCommandFn],\n  dismissAlert: [Function: bound queuedCommandFn],\n  element: [Function (anonymous)] {\n    findActive: [Function: findActive],\n    getActive: [Function: findActive]\n  },\n  elementActive: [Function: bound queuedCommandFn],\n  elementIdAttribute: [Function: bound queuedCommandFn],\n  elementIdClear: [Function: bound queuedCommandFn],\n  elementIdClick: [Function: bound queuedCommandFn],\n  elementIdCssProperty: [Function: bound queuedCommandFn],\n  elementIdDisplayed: [Function: bound queuedCommandFn],\n  elementIdDoubleClick: [Function: bound queuedCommandFn],\n  elementIdElement: [Function: bound queuedCommandFn],\n  elementIdElements: [Function: bound queuedCommandFn],\n  elementIdEnabled: [Function: bound queuedCommandFn],\n  elementIdEquals: [Function: bound queuedCommandFn],\n  elementIdLocation: [Function: bound queuedCommandFn],\n  elementIdLocationInView: [Function: bound queuedCommandFn],\n  elementIdName: [Function: bound queuedCommandFn],\n  elementIdProperty: [Function: bound queuedCommandFn],\n  elementIdSelected: [Function: bound queuedCommandFn],\n  elementIdSize: [Function: bound queuedCommandFn],\n  elementIdText: [Function: bound queuedCommandFn],\n  elementIdValue: [Function: bound queuedCommandFn],\n  elements: [Function: bound queuedCommandFn],\n  execute: [Function: bound queuedCommandFn],\n  executeScript: [Function: bound queuedCommandFn],\n  executeAsyncScript: [Function: bound queuedCommandFn],\n  executeAsync: [Function: bound queuedCommandFn],\n  forward: [Function: bound queuedCommandFn],\n  frame: [Function: bound queuedCommandFn],\n  frameParent: [Function: bound queuedCommandFn],\n  fullscreenWindow: [Function: bound queuedCommandFn],\n  getAlertText: [Function: bound queuedCommandFn],\n  getCurrentUrl: [Function: bound queuedCommandFn],\n  getOrientation: [Function: bound queuedCommandFn],\n  keys: [Function: bound queuedCommandFn],\n  minimizeWindow: [Function: bound queuedCommandFn],\n  mouseButtonClick: [Function: bound queuedCommandFn],\n  mouseButtonDown: [Function: bound queuedCommandFn],\n  mouseButtonUp: [Function: bound queuedCommandFn],\n  moveTo: [Function: bound queuedCommandFn],\n  navigateTo: [Function: bound queuedCommandFn],\n  openNewWindow: [Function: bound queuedCommandFn],\n  quit: [Function: bound queuedCommandFn],\n  refresh: [Function: bound queuedCommandFn],\n  releaseMouseButton: [Function: bound queuedCommandFn],\n  screenshot: [Function: bound queuedCommandFn],\n  session: [Function: bound queuedCommandFn],\n  sessionLog: [Function: bound queuedCommandFn],\n  sessionLogTypes: [Function: bound queuedCommandFn],\n  sessions: [Function: bound queuedCommandFn],\n  setAlertText: [Function: bound queuedCommandFn],\n  setContext: [Function: bound queuedCommandFn],\n  setOrientation: [Function: bound queuedCommandFn],\n  source: [Function: bound queuedCommandFn],\n  status: [Function: bound queuedCommandFn],\n  submit: [Function: bound queuedCommandFn],\n  switchToWindow: [Function: bound queuedCommandFn],\n  switchWindow: [Function: bound queuedCommandFn],\n  timeouts: [Function: bound queuedCommandFn],\n  timeoutsAsyncScript: [Function: bound queuedCommandFn],\n  timeoutsImplicitWait: [Function: bound queuedCommandFn],\n  title: [Function: bound queuedCommandFn],\n  url: [Function: bound queuedCommandFn],\n  waitUntil: [Function: bound queuedCommandFn],\n  windowHandle: [Function: bound queuedCommandFn],\n  windowHandles: [Function: bound queuedCommandFn],\n  windowMaximize: [Function: bound queuedCommandFn],\n  windowPosition: [Function: bound queuedCommandFn],\n  windowRect: [Function: bound queuedCommandFn],\n  windowSize: [Function: bound queuedCommandFn],\n  alerts: {\n    accept: [Function: bound queuedCommandFn],\n    dismiss: [Function: bound queuedCommandFn],\n    getText: [Function: bound queuedCommandFn],\n    setText: [Function: bound queuedCommandFn]\n  },\n  axeInject: [Function: bound queuedCommandFn],\n  axeRun: [Function: bound queuedCommandFn],\n  captureBrowserConsoleLogs: [Function: bound queuedCommandFn],\n  captureBrowserExceptions: [Function: bound queuedCommandFn],\n  captureNetworkRequests: [Function: bound queuedCommandFn],\n  cookies: {\n    delete: [Function: bound queuedCommandFn],\n    deleteAll: [Function: bound queuedCommandFn],\n    get: [Function: bound queuedCommandFn],\n    getAll: [Function: bound queuedCommandFn],\n    set: [Function: bound queuedCommandFn]\n  },\n  debug: [Function: bound queuedCommandFn],\n  deleteCookie: [Function: bound queuedCommandFn],\n  deleteCookies: [Function: bound queuedCommandFn],\n  document: {\n    injectScript: [Function: bound queuedCommandFn],\n    source: [Function: bound queuedCommandFn],\n    pageSource: [Function: bound queuedCommandFn]\n  },\n  enablePerformanceMetrics: [Function: bound queuedCommandFn],\n  end: [Function: bound queuedCommandFn],\n  getCookie: [Function: bound queuedCommandFn],\n  getCookies: [Function: bound queuedCommandFn],\n  getLog: [Function: bound queuedCommandFn],\n  getLogTypes: [Function: bound queuedCommandFn],\n  getPerformanceMetrics: [Function: bound queuedCommandFn],\n  getTitle: [Function: bound queuedCommandFn],\n  getWindowPosition: [Function: bound queuedCommandFn],\n  getWindowRect: [Function: bound queuedCommandFn],\n  getWindowSize: [Function: bound queuedCommandFn],\n  init: [Function: bound queuedCommandFn],\n  injectScript: [Function: bound queuedCommandFn],\n  isLogAvailable: [Function: bound queuedCommandFn],\n  maximizeWindow: [Function: bound queuedCommandFn],\n  mockNetworkResponse: [Function: bound queuedCommandFn],\n  pageSource: [Function: bound queuedCommandFn],\n  pause: [Function: bound queuedCommandFn],\n  perform: [Function: bound queuedCommandFn],\n  registerBasicAuth: [Function: bound queuedCommandFn],\n  resizeWindow: [Function: bound queuedCommandFn],\n  saveScreenshot: [Function: bound queuedCommandFn],\n  saveSnapshot: [Function: bound queuedCommandFn],\n  setCookie: [Function: bound queuedCommandFn],\n  setDeviceDimensions: [Function: bound queuedCommandFn],\n  setGeolocation: [Function: bound queuedCommandFn],\n  setNetworkConditions: [Function: bound queuedCommandFn],\n  setWindowPosition: [Function: bound queuedCommandFn],\n  setWindowRect: [Function: bound queuedCommandFn],\n  setWindowSize: [Function: bound queuedCommandFn],\n  takeHeapSnapshot: [Function: bound queuedCommandFn],\n  urlHash: [Function: bound queuedCommandFn],\n  useCss: [Function: bound queuedCommandFn],\n  useXpath: [Function: bound queuedCommandFn],\n  window: {\n    close: [Function: bound queuedCommandFn],\n    fullscreen: [Function: bound queuedCommandFn],\n    getAllHandles: [Function: bound queuedCommandFn],\n    getHandle: [Function: bound queuedCommandFn],\n    getPosition: [Function: bound queuedCommandFn],\n    getRect: [Function: bound queuedCommandFn],\n    getSize: [Function: bound queuedCommandFn],\n    maximize: [Function: bound queuedCommandFn],\n    minimize: [Function: bound queuedCommandFn],\n    open: [Function: bound queuedCommandFn],\n    openNew: [Function: bound queuedCommandFn],\n    setPosition: [Function: bound queuedCommandFn],\n    setRect: [Function: bound queuedCommandFn],\n    setSize: [Function: bound queuedCommandFn],\n    resize: [Function: bound queuedCommandFn],\n    switchTo: [Function: bound queuedCommandFn],\n    switch: [Function: bound queuedCommandFn]\n  },\n  within: [Function: bound withinDefinition],\n  clearValue: [Function: bound queuedCommandFn],\n  click: [Function: bound queuedCommandFn],\n  clickAndHold: [Function: bound queuedCommandFn],\n  doubleClick: [Function: bound queuedCommandFn],\n  dragAndDrop: [Function: bound queuedCommandFn],\n  findElement: [Function: bound queuedCommandFn],\n  findElements: [Function: bound queuedCommandFn],\n  getAccessibleName: [Function: bound queuedCommandFn],\n  getAriaRole: [Function: bound queuedCommandFn],\n  getAttribute: [Function: bound queuedCommandFn],\n  getElementAttribute: [Function: bound queuedCommandFn],\n  getCssProperty: [Function: bound queuedCommandFn],\n  getElementProperty: [Function: bound queuedCommandFn],\n  getElementRect: [Function: bound queuedCommandFn],\n  getElementSize: [Function: bound queuedCommandFn],\n  getFirstElementChild: [Function: bound queuedCommandFn],\n  getLastElementChild: [Function: bound queuedCommandFn],\n  getLocation: [Function: bound queuedCommandFn],\n  getLocationInView: [Function: bound queuedCommandFn],\n  getNextSibling: [Function: bound queuedCommandFn],\n  getPreviousSibling: [Function: bound queuedCommandFn],\n  getShadowRoot: [Function: bound queuedCommandFn],\n  getTagName: [Function: bound queuedCommandFn],\n  getText: [Function: bound queuedCommandFn],\n  getValue: [Function: bound queuedCommandFn],\n  hasDescendants: [Function: bound queuedCommandFn],\n  isEnabled: [Function: bound queuedCommandFn],\n  isPresent: [Function: bound queuedCommandFn],\n  isSelected: [Function: bound queuedCommandFn],\n  isVisible: [Function: bound queuedCommandFn],\n  moveToElement: [Function: bound queuedCommandFn],\n  rightClick: [Function: bound queuedCommandFn],\n  sendKeys: [Function: bound queuedCommandFn],\n  setAttribute: [Function: bound queuedCommandFn],\n  setPassword: [Function: bound queuedCommandFn],\n  sendKeysRedacted: [Function: bound queuedCommandFn],\n  setValue: [Function: bound queuedCommandFn],\n  submitForm: [Function: bound queuedCommandFn],\n  takeElementScreenshot: [Function: bound queuedCommandFn],\n  updateValue: [Function: bound queuedCommandFn],\n  uploadFile: [Function: bound queuedCommandFn],\n  waitForElementNotPresent: [Function: bound queuedCommandFn],\n  waitForElementNotVisible: [Function: bound queuedCommandFn],\n  waitForElementPresent: [Function: bound queuedCommandFn],\n  waitForElementVisible: [Function: bound queuedCommandFn],\n  angular: { getElementsInList: [Function: bound queuedCommandFn] },\n  strictClick: [Function: bound queuedCommandFn],\n  _axeInjectFunc: [Function: bound queuedCommandFn],\n  mockserver: { create: [Function: bound queuedCommandFn] },\n  supertest: { request: [Function: bound queuedCommandFn] }\n}\"\u001b[0m \u001b[0;90m(35ms)\u001b[0m","showDiff":false,"name":"NightwatchAssertError","abortOnFailure":true,"stack":""}}],"passed":0,"errors":0,"failed":0,"skipped":0,"tests":0,"status":"fail","startTimestamp":1687539155435,"httpOutput":[],"timeMs":313,"endTimestamp":1687539155748},"__after_hook":{"time":"0.000","assertions":[],"commands":[],"passed":0,"errors":0,"failed":0,"skipped":0,"tests":0,"status":"fail","startTimestamp":1687539155751,"httpOutput":[],"timeMs":0,"endTimestamp":1687539155751},"__global_afterEach_hook":{"time":"0.001000","assertions":[],"commands":[],"passed":0,"errors":0,"failed":0,"skipped":0,"tests":0,"status":"fail","startTimestamp":1687539155751,"httpOutput":[],"timeMs":1,"endTimestamp":1687539155752}},"errmessages":[],"testsCount":1,"skippedCount":0,"failedCount":1,"errorsCount":0,"passedCount":0,"group":"","modulePath":"/home/ender/IdeaProjects/jobs/test/ApiTest.js","startTimestamp":"Fri, 23 Jun 2023 16:52:35 GMT","endTimestamp":"Fri, 23 Jun 2023 16:52:35 GMT","sessionCapabilities":{"browserName":"firefox","name":"api testing"},"sessionId":"","projectName":"","buildName":"","testEnv":"api_testing","isMobile":false,"status":"fail","host":"localhost","name":"api testing","tags":[],"tests":1,"failures":1,"errors":0,"httpOutput":[],"rawHttpOutput":[],"globalErrorRegister":["   ✖ \u001b[1;31mNightwatchAssertError\u001b[0m\n   \u001b[0;31mexpected NightwatchAPI{ …(193) } to equal 'Amazon.com: Online Shopping for Elect…' - expected \u001b[0;32m\"Amazon.com: Online Shopping for Electronics, Apparel, Computers, Books, DVDs & more\"\u001b[0m but got: \u001b[0;31m\"NightwatchAPI {\n  capabilities: {},\n  currentTest: [Getter],\n  desiredCapabilities: { browserName: 'firefox', name: 'api testing' },\n  sessionId: null,\n  options: {\n    always_async_commands: false,\n    backwards_compatibility_mode: false,\n    baseUrl: 'https://nightwatchjs.org',\n    base_url: 'https://nightwatchjs.org',\n    custom_assertions_path: '',\n    custom_commands_path: [ 'node_modules/nightwatch/examples/custom-commands/' ],\n    default_reporter: [ 'junit', 'json', 'minimalJson', 'html' ],\n    desiredCapabilities: { browserName: 'firefox', name: 'api testing' },\n    detailed_output: true,\n    disable_colors: false,\n    disable_error_log: false,\n    disable_global_apis: false,\n    disable_global_expect: false,\n    disable_output_boxes: false,\n    disable_typescript: false,\n    dotenv: {},\n    element_command_retries: 3,\n    enable_fail_fast: false,\n    enable_v3_element_apis: true,\n    end_session_on_fail: true,\n    exclude: null,\n    filename_format: null,\n    filter: null,\n    folder_format: null,\n    globals: {\n      abortOnAssertionFailure: true,\n      abortOnElementLocateError: false,\n      waitForConditionPollInterval: 500,\n      waitForConditionTimeout: 5000,\n      throwOnMultipleElementsReturned: false,\n      suppressWarningsOnMultipleElementsReturned: true,\n      asyncHookTimeout: 20000,\n      unitTestsTimeout: 2000,\n      customReporterCallbackTimeout: 20000,\n      retryAssertionTimeout: 5000,\n      reuseBrowserSession: false,\n      reporter: [Function: reporter],\n      beforeTestSuite: [Function: beforeTestSuite],\n      afterTestSuite: [Function: afterTestSuite],\n      beforeTestCase: [Function: beforeTestCase],\n      afterTestCase: [Function: afterTestCase],\n      onBrowserNavigate: [Function: onBrowserNavigate],\n      onBrowserQuit: [Function: onBrowserQuit]\n    },\n    globals_path: '',\n    launchUrl: 'https://nightwatchjs.org',\n    launch_url: 'https://nightwatchjs.org',\n    live_output: false,\n    log_screenshot_data: false,\n    minimal_report_file_path: 'tests_output/minimal_report.json',\n    output: true,\n    output_folder: 'tests_output',\n    output_timestamp: false,\n    page_objects_path: [ 'node_modules/nightwatch/examples/pages/' ],\n    parallel_mode: false,\n    parallel_process_delay: 10,\n    persist_globals: false,\n    plugins: [ '@nightwatch/apitesting' ],\n    report_command_errors: false,\n    report_network_errors: true,\n    report_prefix: '',\n    reporter_options: {\n      output_folder: 'tests_output',\n      folder_format: null,\n      filename_format: null,\n      minimal_report_file_path: 'tests_output/minimal_report.json'\n    },\n    screenshots: {\n      enabled: false,\n      filename_format: [Function: filename_format],\n      path: '/home/ender/IdeaProjects/jobs/screens',\n      on_error: true,\n      on_failure: true\n    },\n    screenshotsPath: '/home/ender/IdeaProjects/jobs/screens',\n    selenium: {\n      start_process: false,\n      cli_args: {},\n      server_path: null,\n      log_path: './logs',\n      port: undefined,\n      check_process_delay: 500,\n      max_status_poll_tries: 15,\n      status_poll_interval: 200,\n      url: 'http://localhost:undefined'\n    },\n    silent: true,\n    skip_testcases_on_fail: true,\n    skipgroup: '',\n    skiptags: '',\n    src_folders: [],\n    start_session: false,\n    sync_test_names: true,\n    testEnv: 'api_testing',\n    testWorkersEnabled: false,\n    test_runner: { type: 'default', options: {} },\n    test_settings: {},\n    test_workers: { enabled: true, workers: 'auto' },\n    timestamp_format: '',\n    trace: {\n      enabled: false,\n      path: '',\n      filename_format: [Function: snapshot_file_format]\n    },\n    tsconfig_path: '',\n    unit_testing_mode: false,\n    unit_tests_mode: false,\n    usage_analytics: {\n      enabled: false,\n      log_path: './logs/analytics',\n      client_id: 'bff83f41-2870-4277-a64d-b240e72c288d'\n    },\n    use_child_process: false,\n    use_xpath: false,\n    webdriver: {\n      start_process: false,\n      cli_args: {},\n      server_path: '',\n      log_path: './logs',\n      log_file_name: '',\n      check_process_delay: 100,\n      max_status_poll_tries: 10,\n      status_poll_interval: 200,\n      process_create_timeout: 120000,\n      host: 'localhost',\n      port: 4444,\n      ssl: false,\n      proxy: undefined,\n      timeout_options: [Object],\n      default_path_prefix: '',\n      username: undefined,\n      access_key: undefined,\n      start_session: false,\n      url: 'http://localhost:undefined'\n    },\n    capabilities: { browserName: 'firefox', name: 'api testing' }\n  },\n  globals: {\n    abortOnAssertionFailure: true,\n    abortOnElementLocateError: false,\n    waitForConditionPollInterval: 500,\n    waitForConditionTimeout: 5000,\n    throwOnMultipleElementsReturned: false,\n    suppressWarningsOnMultipleElementsReturned: true,\n    asyncHookTimeout: 20000,\n    unitTestsTimeout: 2000,\n    customReporterCallbackTimeout: 20000,\n    retryAssertionTimeout: 5000,\n    reuseBrowserSession: false,\n    reporter: [Function: reporter],\n    beforeTestSuite: [Function: beforeTestSuite],\n    afterTestSuite: [Function: afterTestSuite],\n    beforeTestCase: [Function: beforeTestCase],\n    afterTestCase: [Function: afterTestCase],\n    onBrowserNavigate: [Function: onBrowserNavigate],\n    onBrowserQuit: [Function: onBrowserQuit]\n  },\n  createElement: [Function (anonymous)],\n  baseUrl: 'https://nightwatchjs.org',\n  launchUrl: 'https://nightwatchjs.org',\n  launch_url: 'https://nightwatchjs.org',\n  page: {\n    google: {\n      consent: [Function: bound pageObjectDefinition],\n      search: [Function: bound pageObjectDefinition],\n      searchResults: [Function: bound pageObjectDefinition]\n    },\n    nightwatchFeatures: [Function: bound pageObjectDefinition]\n  },\n  assert: {\n    fail: [Function: bound assertFn],\n    AssertionError: [Function: bound assertFn],\n    ok: [Function: bound assertFn],\n    equal: [Function: bound assertFn],\n    notEqual: [Function: bound assertFn],\n    deepEqual: [Function: bound assertFn],\n    notDeepEqual: [Function: bound assertFn],\n    deepStrictEqual: [Function: bound assertFn],\n    notDeepStrictEqual: [Function: bound assertFn],\n    strictEqual: [Function: bound assertFn],\n    notStrictEqual: [Function: bound assertFn],\n    throws: [Function: bound assertFn],\n    rejects: [Function: bound assertFn],\n    doesNotThrow: [Function: bound assertFn],\n    doesNotReject: [Function: bound assertFn],\n    ifError: [Function: bound assertFn],\n    match: [Function: bound assertFn],\n    doesNotMatch: [Function: bound assertFn],\n    CallTracker: [Function: bound assertFn],\n    strict: [Function: bound assertFn],\n    attributeContains: [Function: bound queuedCommandFn],\n    attributeEquals: [Function: bound queuedCommandFn],\n    attributeMatches: [Function: bound queuedCommandFn],\n    contains: [Function: bound queuedCommandFn],\n    containsText: [Function: bound queuedCommandFn],\n    cssClassNotPresent: [Function: bound queuedCommandFn],\n    cssClassPresent: [Function: bound queuedCommandFn],\n    cssProperty: [Function: bound queuedCommandFn],\n    domPropertyContains: [Function: bound queuedCommandFn],\n    domPropertyEquals: [Function: bound queuedCommandFn],\n    domPropertyMatches: [Function: bound queuedCommandFn],\n    elementNotPresent: [Function: bound queuedCommandFn],\n    elementPresent: [Function: bound queuedCommandFn],\n    elementsCount: [Function: bound queuedCommandFn],\n    enabled: [Function: bound queuedCommandFn],\n    hasAttribute: [Function: bound queuedCommandFn],\n    hasClass: [Function: bound queuedCommandFn],\n    hasDescendants: [Function: bound queuedCommandFn],\n    hidden: [Function: bound queuedCommandFn],\n    promisedValue: [Function: bound queuedCommandFn],\n    selected: [Function: bound queuedCommandFn],\n    textContains: [Function: bound queuedCommandFn],\n    textEquals: [Function: bound queuedCommandFn],\n    textMatches: [Function: bound queuedCommandFn],\n    title: [Function: bound queuedCommandFn],\n    titleContains: [Function: bound queuedCommandFn],\n    titleEquals: [Function: bound queuedCommandFn],\n    titleMatches: [Function: bound queuedCommandFn],\n    urlContains: [Function: bound queuedCommandFn],\n    urlEquals: [Function: bound queuedCommandFn],\n    urlMatches: [Function: bound queuedCommandFn],\n    value: [Function: bound queuedCommandFn],\n    valueContains: [Function: bound queuedCommandFn],\n    valueEquals: [Function: bound queuedCommandFn],\n    visible: [Function: bound queuedCommandFn]\n  },\n  verify: {\n    attributeContains: [Function: bound queuedCommandFn],\n    attributeEquals: [Function: bound queuedCommandFn],\n    attributeMatches: [Function: bound queuedCommandFn],\n    contains: [Function: bound queuedCommandFn],\n    containsText: [Function: bound queuedCommandFn],\n    cssClassNotPresent: [Function: bound queuedCommandFn],\n    cssClassPresent: [Function: bound queuedCommandFn],\n    cssProperty: [Function: bound queuedCommandFn],\n    domPropertyContains: [Function: bound queuedCommandFn],\n    domPropertyEquals: [Function: bound queuedCommandFn],\n    domPropertyMatches: [Function: bound queuedCommandFn],\n    elementNotPresent: [Function: bound queuedCommandFn],\n    elementPresent: [Function: bound queuedCommandFn],\n    elementsCount: [Function: bound queuedCommandFn],\n    enabled: [Function: bound queuedCommandFn],\n    hasAttribute: [Function: bound queuedCommandFn],\n    hasClass: [Function: bound queuedCommandFn],\n    hasDescendants: [Function: bound queuedCommandFn],\n    hidden: [Function: bound queuedCommandFn],\n    promisedValue: [Function: bound queuedCommandFn],\n    selected: [Function: bound queuedCommandFn],\n    textContains: [Function: bound queuedCommandFn],\n    textEquals: [Function: bound queuedCommandFn],\n    textMatches: [Function: bound queuedCommandFn],\n    title: [Function: bound queuedCommandFn],\n    titleContains: [Function: bound queuedCommandFn],\n    titleEquals: [Function: bound queuedCommandFn],\n    titleMatches: [Function: bound queuedCommandFn],\n    urlContains: [Function: bound queuedCommandFn],\n    urlEquals: [Function: bound queuedCommandFn],\n    urlMatches: [Function: bound queuedCommandFn],\n    value: [Function: bound queuedCommandFn],\n    valueContains: [Function: bound queuedCommandFn],\n    valueEquals: [Function: bound queuedCommandFn],\n    visible: [Function: bound queuedCommandFn]\n  },\n  ensure: {\n    elementTextMatches: [Function: bound assertFn],\n    elementTextContains: [Function: bound assertFn],\n    elementTextIs: [Function: bound assertFn],\n    elementIsNotSelected: [Function: bound assertFn],\n    elementIsSelected: [Function: bound assertFn],\n    elementIsDisabled: [Function: bound assertFn],\n    ableToSwitchToFrame: [Function: bound assertFn],\n    elementIsEnabled: [Function: bound assertFn],\n    elementIsNotVisible: [Function: bound assertFn],\n    elementIsVisible: [Function: bound assertFn],\n    stalenessOf: [Function: bound assertFn],\n    elementsLocated: [Function: bound assertFn],\n    elementLocated: [Function: bound assertFn],\n    urlMatches: [Function: bound assertFn],\n    urlContains: [Function: bound assertFn],\n    urlIs: [Function: bound assertFn],\n    titleMatches: [Function: bound assertFn],\n    titleContains: [Function: bound assertFn],\n    alertIsPresent: [Function: bound assertFn],\n    titleIs: [Function: bound assertFn]\n  },\n  chrome: {\n    launchApp: [Function: bound queuedCommandFn],\n    getNetworkConditions: [Function: bound queuedCommandFn],\n    setNetworkConditions: [Function: bound queuedCommandFn],\n    sendDevToolsCommand: [Function: bound queuedCommandFn],\n    sendAndGetDevToolsCommand: [Function: bound queuedCommandFn],\n    setPermission: [Function: bound queuedCommandFn],\n    setDownloadPath: [Function: bound queuedCommandFn],\n    getCastSinks: [Function: bound queuedCommandFn],\n    setCastSinkToUse: [Function: bound queuedCommandFn],\n    startCastTabMirroring: [Function: bound queuedCommandFn],\n    getCastIssueMessage: [Function: bound queuedCommandFn],\n    stopCasting: [Function: bound queuedCommandFn]\n  },\n  firefox: {\n    getContext: [Function: bound queuedCommandFn],\n    setContext: [Function: bound queuedCommandFn],\n    installAddon: [Function: bound queuedCommandFn],\n    uninstallAddon: [Function: bound queuedCommandFn]\n  },\n  driver: [Getter],\n  actions: [Function (anonymous)],\n  Keys: {\n    NULL: '',\n    CANCEL: '',\n    HELP: '',\n    BACK_SPACE: '',\n    TAB: '',\n    CLEAR: '',\n    RETURN: '',\n    ENTER: '',\n    SHIFT: '',\n    CONTROL: '',\n    ALT: '',\n    PAUSE: '',\n    ESCAPE: '',\n    SPACE: '',\n    PAGE_UP: '',\n    PAGE_DOWN: '',\n    END: '',\n    HOME: '',\n    ARROW_LEFT: '',\n    LEFT: '',\n    ARROW_UP: '',\n    UP: '',\n    ARROW_RIGHT: '',\n    RIGHT: '',\n    ARROW_DOWN: '',\n    DOWN: '',\n    INSERT: '',\n    DELETE: '',\n    SEMICOLON: '',\n    EQUALS: '',\n    NUMPAD0: '',\n    NUMPAD1: '',\n    NUMPAD2: '',\n    NUMPAD3: '',\n    NUMPAD4: '',\n    NUMPAD5: '',\n    NUMPAD6: '',\n    NUMPAD7: '',\n    NUMPAD8: '',\n    NUMPAD9: '',\n    MULTIPLY: '',\n    ADD: '',\n    SEPARATOR: '',\n    SUBTRACT: '',\n    DECIMAL: '',\n    DIVIDE: '',\n    F1: '',\n    F2: '',\n    F3: '',\n    F4: '',\n    F5: '',\n    F6: '',\n    F7: '',\n    F8: '',\n    F9: '',\n    F10: '',\n    F11: '',\n    F12: '',\n    COMMAND: '',\n    META: '',\n    ZENKAKU_HANKAKU: '',\n    chord: [Function (anonymous)]\n  },\n  expect: [Function (anonymous)] {\n    null: [Function: bound queuedCommandFn],\n    active: [Function: bound queuedCommandFn],\n    attribute: [Function: bound queuedCommandFn],\n    css: [Function: bound queuedCommandFn],\n    enabled: [Function: bound queuedCommandFn],\n    present: [Function: bound queuedCommandFn],\n    property: [Function: bound queuedCommandFn],\n    selected: [Function: bound queuedCommandFn],\n    text: [Function: bound queuedCommandFn],\n    type: [Function: bound queuedCommandFn],\n    value: [Function: bound queuedCommandFn],\n    visible: [Function: bound queuedCommandFn],\n    count: [Function: bound queuedCommandFn],\n    component: [Function: bound queuedCommandFn],\n    cookie: [Function: bound queuedCommandFn],\n    element: [Function: bound queuedCommandFn],\n    elements: [Function: bound queuedCommandFn],\n    title: [Function: bound queuedCommandFn],\n    url: [Function: bound queuedCommandFn]\n  },\n  acceptAlert: [Function: bound queuedCommandFn],\n  appium: {\n    getContext: [Function: bound queuedCommandFn],\n    getContexts: [Function: bound queuedCommandFn],\n    getCurrentActivity: [Function: bound queuedCommandFn],\n    getCurrentPackage: [Function: bound queuedCommandFn],\n    getGeolocation: [Function: bound queuedCommandFn],\n    getOrientation: [Function: bound queuedCommandFn],\n    hideKeyboard: [Function: bound queuedCommandFn],\n    isKeyboardShown: [Function: bound queuedCommandFn],\n    longPressKeyCode: [Function: bound queuedCommandFn],\n    pressKeyCode: [Function: bound queuedCommandFn],\n    setContext: [Function: bound queuedCommandFn],\n    setGeolocation: [Function: bound queuedCommandFn],\n    setOrientation: [Function: bound queuedCommandFn],\n    startActivity: [Function: bound queuedCommandFn]\n  },\n  back: [Function: bound queuedCommandFn],\n  closeWindow: [Function: bound queuedCommandFn],\n  contexts: [Function: bound queuedCommandFn],\n  cookie: [Function: bound queuedCommandFn],\n  currentContext: [Function: bound queuedCommandFn],\n  dismissAlert: [Function: bound queuedCommandFn],\n  element: [Function (anonymous)] {\n    findActive: [Function: findActive],\n    getActive: [Function: findActive]\n  },\n  elementActive: [Function: bound queuedCommandFn],\n  elementIdAttribute: [Function: bound queuedCommandFn],\n  elementIdClear: [Function: bound queuedCommandFn],\n  elementIdClick: [Function: bound queuedCommandFn],\n  elementIdCssProperty: [Function: bound queuedCommandFn],\n  elementIdDisplayed: [Function: bound queuedCommandFn],\n  elementIdDoubleClick: [Function: bound queuedCommandFn],\n  elementIdElement: [Function: bound queuedCommandFn],\n  elementIdElements: [Function: bound queuedCommandFn],\n  elementIdEnabled: [Function: bound queuedCommandFn],\n  elementIdEquals: [Function: bound queuedCommandFn],\n  elementIdLocation: [Function: bound queuedCommandFn],\n  elementIdLocationInView: [Function: bound queuedCommandFn],\n  elementIdName: [Function: bound queuedCommandFn],\n  elementIdProperty: [Function: bound queuedCommandFn],\n  elementIdSelected: [Function: bound queuedCommandFn],\n  elementIdSize: [Function: bound queuedCommandFn],\n  elementIdText: [Function: bound queuedCommandFn],\n  elementIdValue: [Function: bound queuedCommandFn],\n  elements: [Function: bound queuedCommandFn],\n  execute: [Function: bound queuedCommandFn],\n  executeScript: [Function: bound queuedCommandFn],\n  executeAsyncScript: [Function: bound queuedCommandFn],\n  executeAsync: [Function: bound queuedCommandFn],\n  forward: [Function: bound queuedCommandFn],\n  frame: [Function: bound queuedCommandFn],\n  frameParent: [Function: bound queuedCommandFn],\n  fullscreenWindow: [Function: bound queuedCommandFn],\n  getAlertText: [Function: bound queuedCommandFn],\n  getCurrentUrl: [Function: bound queuedCommandFn],\n  getOrientation: [Function: bound queuedCommandFn],\n  keys: [Function: bound queuedCommandFn],\n  minimizeWindow: [Function: bound queuedCommandFn],\n  mouseButtonClick: [Function: bound queuedCommandFn],\n  mouseButtonDown: [Function: bound queuedCommandFn],\n  mouseButtonUp: [Function: bound queuedCommandFn],\n  moveTo: [Function: bound queuedCommandFn],\n  navigateTo: [Function: bound queuedCommandFn],\n  openNewWindow: [Function: bound queuedCommandFn],\n  quit: [Function: bound queuedCommandFn],\n  refresh: [Function: bound queuedCommandFn],\n  releaseMouseButton: [Function: bound queuedCommandFn],\n  screenshot: [Function: bound queuedCommandFn],\n  session: [Function: bound queuedCommandFn],\n  sessionLog: [Function: bound queuedCommandFn],\n  sessionLogTypes: [Function: bound queuedCommandFn],\n  sessions: [Function: bound queuedCommandFn],\n  setAlertText: [Function: bound queuedCommandFn],\n  setContext: [Function: bound queuedCommandFn],\n  setOrientation: [Function: bound queuedCommandFn],\n  source: [Function: bound queuedCommandFn],\n  status: [Function: bound queuedCommandFn],\n  submit: [Function: bound queuedCommandFn],\n  switchToWindow: [Function: bound queuedCommandFn],\n  switchWindow: [Function: bound queuedCommandFn],\n  timeouts: [Function: bound queuedCommandFn],\n  timeoutsAsyncScript: [Function: bound queuedCommandFn],\n  timeoutsImplicitWait: [Function: bound queuedCommandFn],\n  title: [Function: bound queuedCommandFn],\n  url: [Function: bound queuedCommandFn],\n  waitUntil: [Function: bound queuedCommandFn],\n  windowHandle: [Function: bound queuedCommandFn],\n  windowHandles: [Function: bound queuedCommandFn],\n  windowMaximize: [Function: bound queuedCommandFn],\n  windowPosition: [Function: bound queuedCommandFn],\n  windowRect: [Function: bound queuedCommandFn],\n  windowSize: [Function: bound queuedCommandFn],\n  alerts: {\n    accept: [Function: bound queuedCommandFn],\n    dismiss: [Function: bound queuedCommandFn],\n    getText: [Function: bound queuedCommandFn],\n    setText: [Function: bound queuedCommandFn]\n  },\n  axeInject: [Function: bound queuedCommandFn],\n  axeRun: [Function: bound queuedCommandFn],\n  captureBrowserConsoleLogs: [Function: bound queuedCommandFn],\n  captureBrowserExceptions: [Function: bound queuedCommandFn],\n  captureNetworkRequests: [Function: bound queuedCommandFn],\n  cookies: {\n    delete: [Function: bound queuedCommandFn],\n    deleteAll: [Function: bound queuedCommandFn],\n    get: [Function: bound queuedCommandFn],\n    getAll: [Function: bound queuedCommandFn],\n    set: [Function: bound queuedCommandFn]\n  },\n  debug: [Function: bound queuedCommandFn],\n  deleteCookie: [Function: bound queuedCommandFn],\n  deleteCookies: [Function: bound queuedCommandFn],\n  document: {\n    injectScript: [Function: bound queuedCommandFn],\n    source: [Function: bound queuedCommandFn],\n    pageSource: [Function: bound queuedCommandFn]\n  },\n  enablePerformanceMetrics: [Function: bound queuedCommandFn],\n  end: [Function: bound queuedCommandFn],\n  getCookie: [Function: bound queuedCommandFn],\n  getCookies: [Function: bound queuedCommandFn],\n  getLog: [Function: bound queuedCommandFn],\n  getLogTypes: [Function: bound queuedCommandFn],\n  getPerformanceMetrics: [Function: bound queuedCommandFn],\n  getTitle: [Function: bound queuedCommandFn],\n  getWindowPosition: [Function: bound queuedCommandFn],\n  getWindowRect: [Function: bound queuedCommandFn],\n  getWindowSize: [Function: bound queuedCommandFn],\n  init: [Function: bound queuedCommandFn],\n  injectScript: [Function: bound queuedCommandFn],\n  isLogAvailable: [Function: bound queuedCommandFn],\n  maximizeWindow: [Function: bound queuedCommandFn],\n  mockNetworkResponse: [Function: bound queuedCommandFn],\n  pageSource: [Function: bound queuedCommandFn],\n  pause: [Function: bound queuedCommandFn],\n  perform: [Function: bound queuedCommandFn],\n  registerBasicAuth: [Function: bound queuedCommandFn],\n  resizeWindow: [Function: bound queuedCommandFn],\n  saveScreenshot: [Function: bound queuedCommandFn],\n  saveSnapshot: [Function: bound queuedCommandFn],\n  setCookie: [Function: bound queuedCommandFn],\n  setDeviceDimensions: [Function: bound queuedCommandFn],\n  setGeolocation: [Function: bound queuedCommandFn],\n  setNetworkConditions: [Function: bound queuedCommandFn],\n  setWindowPosition: [Function: bound queuedCommandFn],\n  setWindowRect: [Function: bound queuedCommandFn],\n  setWindowSize: [Function: bound queuedCommandFn],\n  takeHeapSnapshot: [Function: bound queuedCommandFn],\n  urlHash: [Function: bound queuedCommandFn],\n  useCss: [Function: bound queuedCommandFn],\n  useXpath: [Function: bound queuedCommandFn],\n  window: {\n    close: [Function: bound queuedCommandFn],\n    fullscreen: [Function: bound queuedCommandFn],\n    getAllHandles: [Function: bound queuedCommandFn],\n    getHandle: [Function: bound queuedCommandFn],\n    getPosition: [Function: bound queuedCommandFn],\n    getRect: [Function: bound queuedCommandFn],\n    getSize: [Function: bound queuedCommandFn],\n    maximize: [Function: bound queuedCommandFn],\n    minimize: [Function: bound queuedCommandFn],\n    open: [Function: bound queuedCommandFn],\n    openNew: [Function: bound queuedCommandFn],\n    setPosition: [Function: bound queuedCommandFn],\n    setRect: [Function: bound queuedCommandFn],\n    setSize: [Function: bound queuedCommandFn],\n    resize: [Function: bound queuedCommandFn],\n    switchTo: [Function: bound queuedCommandFn],\n    switch: [Function: bound queuedCommandFn]\n  },\n  within: [Function: bound withinDefinition],\n  clearValue: [Function: bound queuedCommandFn],\n  click: [Function: bound queuedCommandFn],\n  clickAndHold: [Function: bound queuedCommandFn],\n  doubleClick: [Function: bound queuedCommandFn],\n  dragAndDrop: [Function: bound queuedCommandFn],\n  findElement: [Function: bound queuedCommandFn],\n  findElements: [Function: bound queuedCommandFn],\n  getAccessibleName: [Function: bound queuedCommandFn],\n  getAriaRole: [Function: bound queuedCommandFn],\n  getAttribute: [Function: bound queuedCommandFn],\n  getElementAttribute: [Function: bound queuedCommandFn],\n  getCssProperty: [Function: bound queuedCommandFn],\n  getElementProperty: [Function: bound queuedCommandFn],\n  getElementRect: [Function: bound queuedCommandFn],\n  getElementSize: [Function: bound queuedCommandFn],\n  getFirstElementChild: [Function: bound queuedCommandFn],\n  getLastElementChild: [Function: bound queuedCommandFn],\n  getLocation: [Function: bound queuedCommandFn],\n  getLocationInView: [Function: bound queuedCommandFn],\n  getNextSibling: [Function: bound queuedCommandFn],\n  getPreviousSibling: [Function: bound queuedCommandFn],\n  getShadowRoot: [Function: bound queuedCommandFn],\n  getTagName: [Function: bound queuedCommandFn],\n  getText: [Function: bound queuedCommandFn],\n  getValue: [Function: bound queuedCommandFn],\n  hasDescendants: [Function: bound queuedCommandFn],\n  isEnabled: [Function: bound queuedCommandFn],\n  isPresent: [Function: bound queuedCommandFn],\n  isSelected: [Function: bound queuedCommandFn],\n  isVisible: [Function: bound queuedCommandFn],\n  moveToElement: [Function: bound queuedCommandFn],\n  rightClick: [Function: bound queuedCommandFn],\n  sendKeys: [Function: bound queuedCommandFn],\n  setAttribute: [Function: bound queuedCommandFn],\n  setPassword: [Function: bound queuedCommandFn],\n  sendKeysRedacted: [Function: bound queuedCommandFn],\n  setValue: [Function: bound queuedCommandFn],\n  submitForm: [Function: bound queuedCommandFn],\n  takeElementScreenshot: [Function: bound queuedCommandFn],\n  updateValue: [Function: bound queuedCommandFn],\n  uploadFile: [Function: bound queuedCommandFn],\n  waitForElementNotPresent: [Function: bound queuedCommandFn],\n  waitForElementNotVisible: [Function: bound queuedCommandFn],\n  waitForElementPresent: [Function: bound queuedCommandFn],\n  waitForElementVisible: [Function: bound queuedCommandFn],\n  angular: { getElementsInList: [Function: bound queuedCommandFn] },\n  strictClick: [Function: bound queuedCommandFn],\n  _axeInjectFunc: [Function: bound queuedCommandFn],\n  mockserver: { create: [Function: bound queuedCommandFn] },\n  supertest: { request: [Function: bound queuedCommandFn] }\n}\"\u001b[0m \u001b[0;90m(35ms)\u001b[0m\u001b[0m"]},"name":"ApiTest","httpOutput":[],"systemerr":""}